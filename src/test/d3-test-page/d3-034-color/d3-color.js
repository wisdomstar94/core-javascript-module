(()=>{var Rr={value:()=>{}};function Qt(){for(var t=0,e=arguments.length,r={},n;t<e;++t){if(!(n=arguments[t]+"")||n in r||/[\s.]/.test(n))throw new Error("illegal type: "+n);r[n]=[]}return new rt(r)}function rt(t){this._=t}function Dr(t,e){return t.trim().split(/^|\s+/).map(function(r){var n="",i=r.indexOf(".");if(i>=0&&(n=r.slice(i+1),r=r.slice(0,i)),r&&!e.hasOwnProperty(r))throw new Error("unknown type: "+r);return{type:r,name:n}})}rt.prototype=Qt.prototype={constructor:rt,on:function(t,e){var r=this._,n=Dr(t+"",r),i,o=-1,a=n.length;if(arguments.length<2){for(;++o<a;)if((i=(t=n[o]).type)&&(i=Hr(r[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<a;)if(i=(t=n[o]).type)r[i]=Zt(r[i],t.name,e);else if(e==null)for(i in r)r[i]=Zt(r[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var r in e)t[r]=e[r].slice();return new rt(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var r=new Array(i),n=0,i,o;n<i;++n)r[n]=arguments[n+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],n=0,i=o.length;n<i;++n)o[n].value.apply(e,r)},apply:function(t,e,r){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var n=this._[t],i=0,o=n.length;i<o;++i)n[i].value.apply(e,r)}};function Hr(t,e){for(var r=0,n=t.length,i;r<n;++r)if((i=t[r]).name===e)return i.value}function Zt(t,e,r){for(var n=0,i=t.length;n<i;++n)if(t[n].name===e){t[n]=Rr,t=t.slice(0,n).concat(t.slice(n+1));break}return r!=null&&t.push({name:e,value:r}),t}var Tt=Qt;var nt="http://www.w3.org/1999/xhtml",zt={svg:"http://www.w3.org/2000/svg",xhtml:nt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function A(t){var e=t+="",r=e.indexOf(":");return r>=0&&(e=t.slice(0,r))!=="xmlns"&&(t=t.slice(r+1)),zt.hasOwnProperty(e)?{space:zt[e],local:t}:t}function Br(t){return function(){var e=this.ownerDocument,r=this.namespaceURI;return r===nt&&e.documentElement.namespaceURI===nt?e.createElement(t):e.createElementNS(r,t)}}function Xr(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function it(t){var e=A(t);return(e.local?Xr:Br)(e)}function Pr(){}function C(t){return t==null?Pr:function(){return this.querySelector(t)}}function Wt(t){typeof t!="function"&&(t=C(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=new Array(a),u,f,l=0;l<a;++l)(u=o[l])&&(f=t.call(u,u.__data__,l,o))&&("__data__"in u&&(f.__data__=u.__data__),s[l]=f);return new d(n,this._parents)}function Ot(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function Fr(){return[]}function F(t){return t==null?Fr:function(){return this.querySelectorAll(t)}}function qr(t){return function(){return Ot(t.apply(this,arguments))}}function Jt(t){typeof t=="function"?t=qr(t):t=F(t);for(var e=this._groups,r=e.length,n=[],i=[],o=0;o<r;++o)for(var a=e[o],s=a.length,u,f=0;f<s;++f)(u=a[f])&&(n.push(t.call(u,u.__data__,f,a)),i.push(u));return new d(n,i)}function q(t){return function(){return this.matches(t)}}function ot(t){return function(e){return e.matches(t)}}var Vr=Array.prototype.find;function Lr(t){return function(){return Vr.call(this.children,t)}}function Yr(){return this.firstElementChild}function jt(t){return this.select(t==null?Yr:Lr(typeof t=="function"?t:ot(t)))}var Kr=Array.prototype.filter;function Gr(){return Array.from(this.children)}function Ur(t){return function(){return Kr.call(this.children,t)}}function te(t){return this.selectAll(t==null?Gr:Ur(typeof t=="function"?t:ot(t)))}function ee(t){typeof t!="function"&&(t=q(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=[],u,f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&s.push(u);return new d(n,this._parents)}function at(t){return new Array(t.length)}function re(){return new d(this._enter||this._groups.map(at),this._parents)}function V(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}V.prototype={constructor:V,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function ne(t){return function(){return t}}function Zr(t,e,r,n,i,o){for(var a=0,s,u=e.length,f=o.length;a<f;++a)(s=e[a])?(s.__data__=o[a],n[a]=s):r[a]=new V(t,o[a]);for(;a<u;++a)(s=e[a])&&(i[a]=s)}function Qr(t,e,r,n,i,o,a){var s,u,f=new Map,l=e.length,c=o.length,h=new Array(l),p;for(s=0;s<l;++s)(u=e[s])&&(h[s]=p=a.call(u,u.__data__,s,e)+"",f.has(p)?i[s]=u:f.set(p,u));for(s=0;s<c;++s)p=a.call(t,o[s],s,o)+"",(u=f.get(p))?(n[s]=u,u.__data__=o[s],f.delete(p)):r[s]=new V(t,o[s]);for(s=0;s<l;++s)(u=e[s])&&f.get(h[s])===u&&(i[s]=u)}function Wr(t){return t.__data__}function ie(t,e){if(!arguments.length)return Array.from(this,Wr);var r=e?Qr:Zr,n=this._parents,i=this._groups;typeof t!="function"&&(t=ne(t));for(var o=i.length,a=new Array(o),s=new Array(o),u=new Array(o),f=0;f<o;++f){var l=n[f],c=i[f],h=c.length,p=Jr(t.call(l,l&&l.__data__,f,n)),m=p.length,y=s[f]=new Array(m),O=a[f]=new Array(m),$r=u[f]=new Array(h);r(l,c,y,O,$r,p,e);for(var P=0,et=0,Gt,Ut;P<m;++P)if(Gt=y[P]){for(P>=et&&(et=P+1);!(Ut=O[et])&&++et<m;);Gt._next=Ut||null}}return a=new d(a,n),a._enter=s,a._exit=u,a}function Jr(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function oe(){return new d(this._exit||this._groups.map(at),this._parents)}function ae(t,e,r){var n=this.enter(),i=this,o=this.exit();return typeof t=="function"?(n=t(n),n&&(n=n.selection())):n=n.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),r==null?o.remove():r(o),n&&i?n.merge(i).order():i}function se(t){for(var e=t.selection?t.selection():t,r=this._groups,n=e._groups,i=r.length,o=n.length,a=Math.min(i,o),s=new Array(i),u=0;u<a;++u)for(var f=r[u],l=n[u],c=f.length,h=s[u]=new Array(c),p,m=0;m<c;++m)(p=f[m]||l[m])&&(h[m]=p);for(;u<i;++u)s[u]=r[u];return new d(s,this._parents)}function ue(){for(var t=this._groups,e=-1,r=t.length;++e<r;)for(var n=t[e],i=n.length-1,o=n[i],a;--i>=0;)(a=n[i])&&(o&&a.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(a,o),o=a);return this}function fe(t){t||(t=jr);function e(c,h){return c&&h?t(c.__data__,h.__data__):!c-!h}for(var r=this._groups,n=r.length,i=new Array(n),o=0;o<n;++o){for(var a=r[o],s=a.length,u=i[o]=new Array(s),f,l=0;l<s;++l)(f=a[l])&&(u[l]=f);u.sort(e)}return new d(i,this._parents).order()}function jr(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function le(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function ce(){return Array.from(this)}function he(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length;i<o;++i){var a=n[i];if(a)return a}return null}function pe(){let t=0;for(let e of this)++t;return t}function me(){return!this.node()}function de(t){for(var e=this._groups,r=0,n=e.length;r<n;++r)for(var i=e[r],o=0,a=i.length,s;o<a;++o)(s=i[o])&&t.call(s,s.__data__,o,i);return this}function tn(t){return function(){this.removeAttribute(t)}}function en(t){return function(){this.removeAttributeNS(t.space,t.local)}}function rn(t,e){return function(){this.setAttribute(t,e)}}function nn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function on(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttribute(t):this.setAttribute(t,r)}}function an(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,r)}}function xe(t,e){var r=A(t);if(arguments.length<2){var n=this.node();return r.local?n.getAttributeNS(r.space,r.local):n.getAttribute(r)}return this.each((e==null?r.local?en:tn:typeof e=="function"?r.local?an:on:r.local?nn:rn)(r,e))}function st(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function sn(t){return function(){this.style.removeProperty(t)}}function un(t,e,r){return function(){this.style.setProperty(t,e,r)}}function fn(t,e,r){return function(){var n=e.apply(this,arguments);n==null?this.style.removeProperty(t):this.style.setProperty(t,n,r)}}function ge(t,e,r){return arguments.length>1?this.each((e==null?sn:typeof e=="function"?fn:un)(t,e,r==null?"":r)):S(this.node(),t)}function S(t,e){return t.style.getPropertyValue(e)||st(t).getComputedStyle(t,null).getPropertyValue(e)}function ln(t){return function(){delete this[t]}}function cn(t,e){return function(){this[t]=e}}function hn(t,e){return function(){var r=e.apply(this,arguments);r==null?delete this[t]:this[t]=r}}function ye(t,e){return arguments.length>1?this.each((e==null?ln:typeof e=="function"?hn:cn)(t,e)):this.node()[t]}function _e(t){return t.trim().split(/^|\s+/)}function Ct(t){return t.classList||new we(t)}function we(t){this._node=t,this._names=_e(t.getAttribute("class")||"")}we.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function ve(t,e){for(var r=Ct(t),n=-1,i=e.length;++n<i;)r.add(e[n])}function be(t,e){for(var r=Ct(t),n=-1,i=e.length;++n<i;)r.remove(e[n])}function pn(t){return function(){ve(this,t)}}function mn(t){return function(){be(this,t)}}function dn(t,e){return function(){(e.apply(this,arguments)?ve:be)(this,t)}}function ke(t,e){var r=_e(t+"");if(arguments.length<2){for(var n=Ct(this.node()),i=-1,o=r.length;++i<o;)if(!n.contains(r[i]))return!1;return!0}return this.each((typeof e=="function"?dn:e?pn:mn)(r,e))}function xn(){this.textContent=""}function gn(t){return function(){this.textContent=t}}function yn(t){return function(){var e=t.apply(this,arguments);this.textContent=e==null?"":e}}function Ee(t){return arguments.length?this.each(t==null?xn:(typeof t=="function"?yn:gn)(t)):this.node().textContent}function _n(){this.innerHTML=""}function wn(t){return function(){this.innerHTML=t}}function vn(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e==null?"":e}}function Ae(t){return arguments.length?this.each(t==null?_n:(typeof t=="function"?vn:wn)(t)):this.node().innerHTML}function bn(){this.nextSibling&&this.parentNode.appendChild(this)}function Ne(){return this.each(bn)}function kn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ie(){return this.each(kn)}function Se(t){var e=typeof t=="function"?t:it(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function En(){return null}function Te(t,e){var r=typeof t=="function"?t:it(t),n=e==null?En:typeof e=="function"?e:C(e);return this.select(function(){return this.insertBefore(r.apply(this,arguments),n.apply(this,arguments)||null)})}function An(){var t=this.parentNode;t&&t.removeChild(this)}function ze(){return this.each(An)}function Nn(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function In(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Oe(t){return this.select(t?In:Nn)}function Ce(t){return arguments.length?this.property("__data__",t):this.node().__data__}function Sn(t){return function(e){t.call(this,e,this.__data__)}}function Tn(t){return t.trim().split(/^|\s+/).map(function(e){var r="",n=e.indexOf(".");return n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),{type:e,name:r}})}function zn(t){return function(){var e=this.__on;if(!!e){for(var r=0,n=-1,i=e.length,o;r<i;++r)o=e[r],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++n]=o;++n?e.length=n:delete this.__on}}}function On(t,e,r){return function(){var n=this.__on,i,o=Sn(e);if(n){for(var a=0,s=n.length;a<s;++a)if((i=n[a]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=r),i.value=e;return}}this.addEventListener(t.type,o,r),i={type:t.type,name:t.name,value:e,listener:o,options:r},n?n.push(i):this.__on=[i]}}function Me(t,e,r){var n=Tn(t+""),i,o=n.length,a;if(arguments.length<2){var s=this.node().__on;if(s){for(var u=0,f=s.length,l;u<f;++u)for(i=0,l=s[u];i<o;++i)if((a=n[i]).type===l.type&&a.name===l.name)return l.value}return}for(s=e?On:zn,i=0;i<o;++i)this.each(s(n[i],e,r));return this}function $e(t,e,r){var n=st(t),i=n.CustomEvent;typeof i=="function"?i=new i(e,r):(i=n.document.createEvent("Event"),r?(i.initEvent(e,r.bubbles,r.cancelable),i.detail=r.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function Cn(t,e){return function(){return $e(this,t,e)}}function Mn(t,e){return function(){return $e(this,t,e.apply(this,arguments))}}function Re(t,e){return this.each((typeof e=="function"?Mn:Cn)(t,e))}function*De(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length,a;i<o;++i)(a=n[i])&&(yield a)}var $n=[null];function d(t,e){this._groups=t,this._parents=e}function He(){return new d([[document.documentElement]],$n)}function Rn(){return this}d.prototype=He.prototype={constructor:d,select:Wt,selectAll:Jt,selectChild:jt,selectChildren:te,filter:ee,data:ie,enter:re,exit:oe,join:ae,merge:se,selection:Rn,order:ue,sort:fe,call:le,nodes:ce,node:he,size:pe,empty:me,each:de,attr:xe,style:ge,property:ye,classed:ke,text:Ee,html:Ae,raise:Ne,lower:Ie,append:Se,insert:Te,remove:ze,clone:Oe,datum:Ce,on:Me,dispatch:Re,[Symbol.iterator]:De};var N=He;function ut(t,e,r){t.prototype=e.prototype=r,r.constructor=t}function Mt(t,e){var r=Object.create(t.prototype);for(var n in e)r[n]=e[n];return r}function K(){}var L=.7,ct=1/L,D="\\s*([+-]?\\d+)\\s*",Y="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",E="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Dn=/^#([0-9a-f]{3,8})$/,Hn=new RegExp(`^rgb\\(${D},${D},${D}\\)$`),Bn=new RegExp(`^rgb\\(${E},${E},${E}\\)$`),Xn=new RegExp(`^rgba\\(${D},${D},${D},${Y}\\)$`),Pn=new RegExp(`^rgba\\(${E},${E},${E},${Y}\\)$`),Fn=new RegExp(`^hsl\\(${Y},${E},${E}\\)$`),qn=new RegExp(`^hsla\\(${Y},${E},${E},${Y}\\)$`),Be={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};ut(K,k,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Xe,formatHex:Xe,formatHex8:Vn,formatHsl:Ln,formatRgb:Pe,toString:Pe});function Xe(){return this.rgb().formatHex()}function Vn(){return this.rgb().formatHex8()}function Ln(){return Ke(this).formatHsl()}function Pe(){return this.rgb().formatRgb()}function k(t){var e,r;return t=(t+"").trim().toLowerCase(),(e=Dn.exec(t))?(r=e[1].length,e=parseInt(e[1],16),r===6?Fe(e):r===3?new w(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):r===8?ft(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):r===4?ft(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=Hn.exec(t))?new w(e[1],e[2],e[3],1):(e=Bn.exec(t))?new w(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=Xn.exec(t))?ft(e[1],e[2],e[3],e[4]):(e=Pn.exec(t))?ft(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=Fn.exec(t))?Le(e[1],e[2]/100,e[3]/100,1):(e=qn.exec(t))?Le(e[1],e[2]/100,e[3]/100,e[4]):Be.hasOwnProperty(t)?Fe(Be[t]):t==="transparent"?new w(NaN,NaN,NaN,0):null}function Fe(t){return new w(t>>16&255,t>>8&255,t&255,1)}function ft(t,e,r,n){return n<=0&&(t=e=r=NaN),new w(t,e,r,n)}function Yn(t){return t instanceof K||(t=k(t)),t?(t=t.rgb(),new w(t.r,t.g,t.b,t.opacity)):new w}function H(t,e,r,n){return arguments.length===1?Yn(t):new w(t,e,r,n==null?1:n)}function w(t,e,r,n){this.r=+t,this.g=+e,this.b=+r,this.opacity=+n}ut(w,H,Mt(K,{brighter(t){return t=t==null?ct:Math.pow(ct,t),new w(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?L:Math.pow(L,t),new w(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new w($(this.r),$(this.g),$(this.b),ht(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:qe,formatHex:qe,formatHex8:Kn,formatRgb:Ve,toString:Ve}));function qe(){return`#${M(this.r)}${M(this.g)}${M(this.b)}`}function Kn(){return`#${M(this.r)}${M(this.g)}${M(this.b)}${M((isNaN(this.opacity)?1:this.opacity)*255)}`}function Ve(){let t=ht(this.opacity);return`${t===1?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${t===1?")":`, ${t})`}`}function ht(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function $(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function M(t){return t=$(t),(t<16?"0":"")+t.toString(16)}function Le(t,e,r,n){return n<=0?t=e=r=NaN:r<=0||r>=1?t=e=NaN:e<=0&&(t=NaN),new b(t,e,r,n)}function Ke(t){if(t instanceof b)return new b(t.h,t.s,t.l,t.opacity);if(t instanceof K||(t=k(t)),!t)return new b;if(t instanceof b)return t;t=t.rgb();var e=t.r/255,r=t.g/255,n=t.b/255,i=Math.min(e,r,n),o=Math.max(e,r,n),a=NaN,s=o-i,u=(o+i)/2;return s?(e===o?a=(r-n)/s+(r<n)*6:r===o?a=(n-e)/s+2:a=(e-r)/s+4,s/=u<.5?o+i:2-o-i,a*=60):s=u>0&&u<1?0:a,new b(a,s,u,t.opacity)}function Ge(t,e,r,n){return arguments.length===1?Ke(t):new b(t,e,r,n==null?1:n)}function b(t,e,r,n){this.h=+t,this.s=+e,this.l=+r,this.opacity=+n}ut(b,Ge,Mt(K,{brighter(t){return t=t==null?ct:Math.pow(ct,t),new b(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?L:Math.pow(L,t),new b(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,r=this.l,n=r+(r<.5?r:1-r)*e,i=2*r-n;return new w($t(t>=240?t-240:t+120,i,n),$t(t,i,n),$t(t<120?t+240:t-120,i,n),this.opacity)},clamp(){return new b(Ye(this.h),lt(this.s),lt(this.l),ht(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let t=ht(this.opacity);return`${t===1?"hsl(":"hsla("}${Ye(this.h)}, ${lt(this.s)*100}%, ${lt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Ye(t){return t=(t||0)%360,t<0?t+360:t}function lt(t){return Math.max(0,Math.min(1,t||0))}function $t(t,e,r){return(t<60?e+(r-e)*t/60:t<180?r:t<240?e+(r-e)*(240-t)/60:e)*255}function Rt(t,e,r,n,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*e+(4-6*o+3*a)*r+(1+3*t+3*o-3*a)*n+a*i)/6}function Ue(t){var e=t.length-1;return function(r){var n=r<=0?r=0:r>=1?(r=1,e-1):Math.floor(r*e),i=t[n],o=t[n+1],a=n>0?t[n-1]:2*i-o,s=n<e-1?t[n+2]:2*o-i;return Rt((r-n/e)*e,a,i,o,s)}}function Ze(t){var e=t.length;return function(r){var n=Math.floor(((r%=1)<0?++r:r)*e),i=t[(n+e-1)%e],o=t[n%e],a=t[(n+1)%e],s=t[(n+2)%e];return Rt((r-n/e)*e,i,o,a,s)}}var Dt=t=>()=>t;function Gn(t,e){return function(r){return t+r*e}}function Un(t,e,r){return t=Math.pow(t,r),e=Math.pow(e,r)-t,r=1/r,function(n){return Math.pow(t+n*e,r)}}function Qe(t){return(t=+t)==1?pt:function(e,r){return r-e?Un(e,r,t):Dt(isNaN(e)?r:e)}}function pt(t,e){var r=e-t;return r?Gn(t,r):Dt(isNaN(t)?e:t)}var mt=function t(e){var r=Qe(e);function n(i,o){var a=r((i=H(i)).r,(o=H(o)).r),s=r(i.g,o.g),u=r(i.b,o.b),f=pt(i.opacity,o.opacity);return function(l){return i.r=a(l),i.g=s(l),i.b=u(l),i.opacity=f(l),i+""}}return n.gamma=t,n}(1);function We(t){return function(e){var r=e.length,n=new Array(r),i=new Array(r),o=new Array(r),a,s;for(a=0;a<r;++a)s=H(e[a]),n[a]=s.r||0,i[a]=s.g||0,o[a]=s.b||0;return n=t(n),i=t(i),o=t(o),s.opacity=1,function(u){return s.r=n(u),s.g=i(u),s.b=o(u),s+""}}}var Zn=We(Ue),Qn=We(Ze);function v(t,e){return t=+t,e=+e,function(r){return t*(1-r)+e*r}}var Bt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Ht=new RegExp(Bt.source,"g");function Wn(t){return function(){return t}}function Jn(t){return function(e){return t(e)+""}}function Xt(t,e){var r=Bt.lastIndex=Ht.lastIndex=0,n,i,o,a=-1,s=[],u=[];for(t=t+"",e=e+"";(n=Bt.exec(t))&&(i=Ht.exec(e));)(o=i.index)>r&&(o=e.slice(r,o),s[a]?s[a]+=o:s[++a]=o),(n=n[0])===(i=i[0])?s[a]?s[a]+=i:s[++a]=i:(s[++a]=null,u.push({i:a,x:v(n,i)})),r=Ht.lastIndex;return r<e.length&&(o=e.slice(r),s[a]?s[a]+=o:s[++a]=o),s.length<2?u[0]?Jn(u[0].x):Wn(e):(e=u.length,function(f){for(var l=0,c;l<e;++l)s[(c=u[l]).i]=c.x(f);return s.join("")})}var Je=180/Math.PI,dt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Pt(t,e,r,n,i,o){var a,s,u;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(u=t*r+e*n)&&(r-=t*u,n-=e*u),(s=Math.sqrt(r*r+n*n))&&(r/=s,n/=s,u/=s),t*n<e*r&&(t=-t,e=-e,u=-u,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*Je,skewX:Math.atan(u)*Je,scaleX:a,scaleY:s}}var xt;function je(t){let e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?dt:Pt(e.a,e.b,e.c,e.d,e.e,e.f)}function tr(t){return t==null?dt:(xt||(xt=document.createElementNS("http://www.w3.org/2000/svg","g")),xt.setAttribute("transform",t),(t=xt.transform.baseVal.consolidate())?(t=t.matrix,Pt(t.a,t.b,t.c,t.d,t.e,t.f)):dt)}function er(t,e,r,n){function i(f){return f.length?f.pop()+" ":""}function o(f,l,c,h,p,m){if(f!==c||l!==h){var y=p.push("translate(",null,e,null,r);m.push({i:y-4,x:v(f,c)},{i:y-2,x:v(l,h)})}else(c||h)&&p.push("translate("+c+e+h+r)}function a(f,l,c,h){f!==l?(f-l>180?l+=360:l-f>180&&(f+=360),h.push({i:c.push(i(c)+"rotate(",null,n)-2,x:v(f,l)})):l&&c.push(i(c)+"rotate("+l+n)}function s(f,l,c,h){f!==l?h.push({i:c.push(i(c)+"skewX(",null,n)-2,x:v(f,l)}):l&&c.push(i(c)+"skewX("+l+n)}function u(f,l,c,h,p,m){if(f!==c||l!==h){var y=p.push(i(p)+"scale(",null,",",null,")");m.push({i:y-4,x:v(f,c)},{i:y-2,x:v(l,h)})}else(c!==1||h!==1)&&p.push(i(p)+"scale("+c+","+h+")")}return function(f,l){var c=[],h=[];return f=t(f),l=t(l),o(f.translateX,f.translateY,l.translateX,l.translateY,c,h),a(f.rotate,l.rotate,c,h),s(f.skewX,l.skewX,c,h),u(f.scaleX,f.scaleY,l.scaleX,l.scaleY,c,h),f=l=null,function(p){for(var m=-1,y=h.length,O;++m<y;)c[(O=h[m]).i]=O.x(p);return c.join("")}}}var Ft=er(je,"px, ","px)","deg)"),qt=er(tr,", ",")",")");var B=0,U=0,G=0,nr=1e3,gt,Z,yt=0,R=0,_t=0,Q=typeof performance=="object"&&performance.now?performance:Date,ir=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function J(){return R||(ir(jn),R=Q.now()+_t)}function jn(){R=0}function W(){this._call=this._time=this._next=null}W.prototype=wt.prototype={constructor:W,restart:function(t,e,r){if(typeof t!="function")throw new TypeError("callback is not a function");r=(r==null?J():+r)+(e==null?0:+e),!this._next&&Z!==this&&(Z?Z._next=this:gt=this,Z=this),this._call=t,this._time=r,Vt()},stop:function(){this._call&&(this._call=null,this._time=1/0,Vt())}};function wt(t,e,r){var n=new W;return n.restart(t,e,r),n}function or(){J(),++B;for(var t=gt,e;t;)(e=R-t._time)>=0&&t._call.call(void 0,e),t=t._next;--B}function rr(){R=(yt=Q.now())+_t,B=U=0;try{or()}finally{B=0,ei(),R=0}}function ti(){var t=Q.now(),e=t-yt;e>nr&&(_t-=e,yt=t)}function ei(){for(var t,e=gt,r,n=1/0;e;)e._call?(n>e._time&&(n=e._time),t=e,e=e._next):(r=e._next,e._next=null,e=t?t._next=r:gt=r);Z=t,Vt(n)}function Vt(t){if(!B){U&&(U=clearTimeout(U));var e=t-R;e>24?(t<1/0&&(U=setTimeout(rr,t-Q.now()-_t)),G&&(G=clearInterval(G))):(G||(yt=Q.now(),G=setInterval(ti,nr)),B=1,ir(rr))}}function vt(t,e,r){var n=new W;return e=e==null?0:+e,n.restart(i=>{n.stop(),t(i+e)},e,r),n}var ri=Tt("start","end","cancel","interrupt"),ni=[],ur=0,ar=1,kt=2,bt=3,sr=4,Et=5,j=6;function T(t,e,r,n,i,o){var a=t.__transition;if(!a)t.__transition={};else if(r in a)return;ii(t,r,{name:e,index:n,group:i,on:ri,tween:ni,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:ur})}function tt(t,e){var r=x(t,e);if(r.state>ur)throw new Error("too late; already scheduled");return r}function g(t,e){var r=x(t,e);if(r.state>bt)throw new Error("too late; already running");return r}function x(t,e){var r=t.__transition;if(!r||!(r=r[e]))throw new Error("transition not found");return r}function ii(t,e,r){var n=t.__transition,i;n[e]=r,r.timer=wt(o,0,r.time);function o(f){r.state=ar,r.timer.restart(a,r.delay,r.time),r.delay<=f&&a(f-r.delay)}function a(f){var l,c,h,p;if(r.state!==ar)return u();for(l in n)if(p=n[l],p.name===r.name){if(p.state===bt)return vt(a);p.state===sr?(p.state=j,p.timer.stop(),p.on.call("interrupt",t,t.__data__,p.index,p.group),delete n[l]):+l<e&&(p.state=j,p.timer.stop(),p.on.call("cancel",t,t.__data__,p.index,p.group),delete n[l])}if(vt(function(){r.state===bt&&(r.state=sr,r.timer.restart(s,r.delay,r.time),s(f))}),r.state=kt,r.on.call("start",t,t.__data__,r.index,r.group),r.state===kt){for(r.state=bt,i=new Array(h=r.tween.length),l=0,c=-1;l<h;++l)(p=r.tween[l].value.call(t,t.__data__,r.index,r.group))&&(i[++c]=p);i.length=c+1}}function s(f){for(var l=f<r.duration?r.ease.call(null,f/r.duration):(r.timer.restart(u),r.state=Et,1),c=-1,h=i.length;++c<h;)i[c].call(t,l);r.state===Et&&(r.on.call("end",t,t.__data__,r.index,r.group),u())}function u(){r.state=j,r.timer.stop(),delete n[e];for(var f in n)return;delete t.__transition}}function At(t,e){var r=t.__transition,n,i,o=!0,a;if(!!r){e=e==null?null:e+"";for(a in r){if((n=r[a]).name!==e){o=!1;continue}i=n.state>kt&&n.state<Et,n.state=j,n.timer.stop(),n.on.call(i?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete r[a]}o&&delete t.__transition}}function fr(t){return this.each(function(){At(this,t)})}function oi(t,e){var r,n;return function(){var i=g(this,t),o=i.tween;if(o!==r){n=r=o;for(var a=0,s=n.length;a<s;++a)if(n[a].name===e){n=n.slice(),n.splice(a,1);break}}i.tween=n}}function ai(t,e,r){var n,i;if(typeof r!="function")throw new Error;return function(){var o=g(this,t),a=o.tween;if(a!==n){i=(n=a).slice();for(var s={name:e,value:r},u=0,f=i.length;u<f;++u)if(i[u].name===e){i[u]=s;break}u===f&&i.push(s)}o.tween=i}}function lr(t,e){var r=this._id;if(t+="",arguments.length<2){for(var n=x(this.node(),r).tween,i=0,o=n.length,a;i<o;++i)if((a=n[i]).name===t)return a.value;return null}return this.each((e==null?oi:ai)(r,t,e))}function X(t,e,r){var n=t._id;return t.each(function(){var i=g(this,n);(i.value||(i.value={}))[e]=r.apply(this,arguments)}),function(i){return x(i,n).value[e]}}function Nt(t,e){var r;return(typeof e=="number"?v:e instanceof k?mt:(r=k(e))?(e=r,mt):Xt)(t,e)}function si(t){return function(){this.removeAttribute(t)}}function ui(t){return function(){this.removeAttributeNS(t.space,t.local)}}function fi(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttribute(t);return a===i?null:a===n?o:o=e(n=a,r)}}function li(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===n?o:o=e(n=a,r)}}function ci(t,e,r){var n,i,o;return function(){var a,s=r(this),u;return s==null?void this.removeAttribute(t):(a=this.getAttribute(t),u=s+"",a===u?null:a===n&&u===i?o:(i=u,o=e(n=a,s)))}}function hi(t,e,r){var n,i,o;return function(){var a,s=r(this),u;return s==null?void this.removeAttributeNS(t.space,t.local):(a=this.getAttributeNS(t.space,t.local),u=s+"",a===u?null:a===n&&u===i?o:(i=u,o=e(n=a,s)))}}function cr(t,e){var r=A(t),n=r==="transform"?qt:Nt;return this.attrTween(t,typeof e=="function"?(r.local?hi:ci)(r,n,X(this,"attr."+t,e)):e==null?(r.local?ui:si)(r):(r.local?li:fi)(r,n,e))}function pi(t,e){return function(r){this.setAttribute(t,e.call(this,r))}}function mi(t,e){return function(r){this.setAttributeNS(t.space,t.local,e.call(this,r))}}function di(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&mi(t,o)),r}return i._value=e,i}function xi(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&pi(t,o)),r}return i._value=e,i}function hr(t,e){var r="attr."+t;if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;var n=A(t);return this.tween(r,(n.local?di:xi)(n,e))}function gi(t,e){return function(){tt(this,t).delay=+e.apply(this,arguments)}}function yi(t,e){return e=+e,function(){tt(this,t).delay=e}}function pr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?gi:yi)(e,t)):x(this.node(),e).delay}function _i(t,e){return function(){g(this,t).duration=+e.apply(this,arguments)}}function wi(t,e){return e=+e,function(){g(this,t).duration=e}}function mr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?_i:wi)(e,t)):x(this.node(),e).duration}function vi(t,e){if(typeof e!="function")throw new Error;return function(){g(this,t).ease=e}}function dr(t){var e=this._id;return arguments.length?this.each(vi(e,t)):x(this.node(),e).ease}function bi(t,e){return function(){var r=e.apply(this,arguments);if(typeof r!="function")throw new Error;g(this,t).ease=r}}function xr(t){if(typeof t!="function")throw new Error;return this.each(bi(this._id,t))}function gr(t){typeof t!="function"&&(t=q(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=[],u,f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&s.push(u);return new _(n,this._parents,this._name,this._id)}function yr(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,r=t._groups,n=e.length,i=r.length,o=Math.min(n,i),a=new Array(n),s=0;s<o;++s)for(var u=e[s],f=r[s],l=u.length,c=a[s]=new Array(l),h,p=0;p<l;++p)(h=u[p]||f[p])&&(c[p]=h);for(;s<n;++s)a[s]=e[s];return new _(a,this._parents,this._name,this._id)}function ki(t){return(t+"").trim().split(/^|\s+/).every(function(e){var r=e.indexOf(".");return r>=0&&(e=e.slice(0,r)),!e||e==="start"})}function Ei(t,e,r){var n,i,o=ki(e)?tt:g;return function(){var a=o(this,t),s=a.on;s!==n&&(i=(n=s).copy()).on(e,r),a.on=i}}function _r(t,e){var r=this._id;return arguments.length<2?x(this.node(),r).on.on(t):this.each(Ei(r,t,e))}function Ai(t){return function(){var e=this.parentNode;for(var r in this.__transition)if(+r!==t)return;e&&e.removeChild(this)}}function wr(){return this.on("end.remove",Ai(this._id))}function vr(t){var e=this._name,r=this._id;typeof t!="function"&&(t=C(t));for(var n=this._groups,i=n.length,o=new Array(i),a=0;a<i;++a)for(var s=n[a],u=s.length,f=o[a]=new Array(u),l,c,h=0;h<u;++h)(l=s[h])&&(c=t.call(l,l.__data__,h,s))&&("__data__"in l&&(c.__data__=l.__data__),f[h]=c,T(f[h],e,r,h,f,x(l,r)));return new _(o,this._parents,e,r)}function br(t){var e=this._name,r=this._id;typeof t!="function"&&(t=F(t));for(var n=this._groups,i=n.length,o=[],a=[],s=0;s<i;++s)for(var u=n[s],f=u.length,l,c=0;c<f;++c)if(l=u[c]){for(var h=t.call(l,l.__data__,c,u),p,m=x(l,r),y=0,O=h.length;y<O;++y)(p=h[y])&&T(p,e,r,y,h,m);o.push(h),a.push(l)}return new _(o,a,e,r)}var Ni=N.prototype.constructor;function kr(){return new Ni(this._groups,this._parents)}function Ii(t,e){var r,n,i;return function(){var o=S(this,t),a=(this.style.removeProperty(t),S(this,t));return o===a?null:o===r&&a===n?i:i=e(r=o,n=a)}}function Er(t){return function(){this.style.removeProperty(t)}}function Si(t,e,r){var n,i=r+"",o;return function(){var a=S(this,t);return a===i?null:a===n?o:o=e(n=a,r)}}function Ti(t,e,r){var n,i,o;return function(){var a=S(this,t),s=r(this),u=s+"";return s==null&&(u=s=(this.style.removeProperty(t),S(this,t))),a===u?null:a===n&&u===i?o:(i=u,o=e(n=a,s))}}function zi(t,e){var r,n,i,o="style."+e,a="end."+o,s;return function(){var u=g(this,t),f=u.on,l=u.value[o]==null?s||(s=Er(e)):void 0;(f!==r||i!==l)&&(n=(r=f).copy()).on(a,i=l),u.on=n}}function Ar(t,e,r){var n=(t+="")=="transform"?Ft:Nt;return e==null?this.styleTween(t,Ii(t,n)).on("end.style."+t,Er(t)):typeof e=="function"?this.styleTween(t,Ti(t,n,X(this,"style."+t,e))).each(zi(this._id,t)):this.styleTween(t,Si(t,n,e),r).on("end.style."+t,null)}function Oi(t,e,r){return function(n){this.style.setProperty(t,e.call(this,n),r)}}function Ci(t,e,r){var n,i;function o(){var a=e.apply(this,arguments);return a!==i&&(n=(i=a)&&Oi(t,a,r)),n}return o._value=e,o}function Nr(t,e,r){var n="style."+(t+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;return this.tween(n,Ci(t,e,r==null?"":r))}function Mi(t){return function(){this.textContent=t}}function $i(t){return function(){var e=t(this);this.textContent=e==null?"":e}}function Ir(t){return this.tween("text",typeof t=="function"?$i(X(this,"text",t)):Mi(t==null?"":t+""))}function Ri(t){return function(e){this.textContent=t.call(this,e)}}function Di(t){var e,r;function n(){var i=t.apply(this,arguments);return i!==r&&(e=(r=i)&&Ri(i)),e}return n._value=t,n}function Sr(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Di(t))}function Tr(){for(var t=this._name,e=this._id,r=It(),n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],s=a.length,u,f=0;f<s;++f)if(u=a[f]){var l=x(u,e);T(u,t,r,f,a,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new _(n,this._parents,t,r)}function zr(){var t,e,r=this,n=r._id,i=r.size();return new Promise(function(o,a){var s={value:a},u={value:function(){--i===0&&o()}};r.each(function(){var f=g(this,n),l=f.on;l!==t&&(e=(t=l).copy(),e._.cancel.push(s),e._.interrupt.push(s),e._.end.push(u)),f.on=e}),i===0&&o()})}var Hi=0;function _(t,e,r,n){this._groups=t,this._parents=e,this._name=r,this._id=n}function Or(t){return N().transition(t)}function It(){return++Hi}var I=N.prototype;_.prototype=Or.prototype={constructor:_,select:vr,selectAll:br,selectChild:I.selectChild,selectChildren:I.selectChildren,filter:gr,merge:yr,selection:kr,transition:Tr,call:I.call,nodes:I.nodes,node:I.node,size:I.size,empty:I.empty,each:I.each,on:_r,attr:cr,attrTween:hr,style:Ar,styleTween:Nr,text:Ir,textTween:Sr,remove:wr,tween:lr,delay:pr,duration:mr,ease:dr,easeVarying:xr,end:zr,[Symbol.iterator]:I[Symbol.iterator]};function St(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Bi={time:null,delay:0,duration:250,ease:St};function Xi(t,e){for(var r;!(r=t.__transition)||!(r=r[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return r}function Cr(t){var e,r;t instanceof _?(e=t._id,t=t._name):(e=It(),(r=Bi).time=J(),t=t==null?null:t+"");for(var n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],s=a.length,u,f=0;f<s;++f)(u=a[f])&&T(u,t,e,f,a,r||Xi(u,e));return new _(n,this._parents,t,e)}N.prototype.interrupt=fr;N.prototype.transition=Cr;var{abs:$f,max:Rf,min:Df}=Math;function Mr(t){return[+t[0],+t[1]]}function Pi(t){return[Mr(t[0]),Mr(t[1])]}var Hf={name:"x",handles:["w","e"].map(Lt),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Bf={name:"y",handles:["n","s"].map(Lt),input:function(t,e){return t==null?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},Xf={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(Lt),input:function(t){return t==null?null:Pi(t)},output:function(t){return t}};function Lt(t){return{type:t}}function z(t,e,r){this.k=t,this.x=e,this.y=r}z.prototype={constructor:z,scale:function(t){return t===1?this:new z(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new z(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Yt=new z(1,0,0);Kt.prototype=z.prototype;function Kt(t){for(;!t.__zoom;)if(!(t=t.parentNode))return Yt;return t.__zoom}window.addEventListener("load",async()=>{let t=k("steelblue");console.log("c1",t),t.opacity=.3,console.log("c1.toString()",t==null?void 0:t.toString()),console.log("c1.formatHex()",t==null?void 0:t.formatHex());let e=k("#ff0000");console.log("c2",e),console.log("c2.toString()",e==null?void 0:e.toString()),console.log("c2.formatHex()",e==null?void 0:e.formatHex());let r=e==null?void 0:e.darker(1.5);console.log("c2.toString()",e==null?void 0:e.toString()),console.log("newC2.toString()",r==null?void 0:r.toString())});})();
//# sourceMappingURL=data:application/json;base64,
