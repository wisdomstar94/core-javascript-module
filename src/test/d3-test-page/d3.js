(()=>{var Bv=Object.defineProperty;var Hv=(t,e)=>{for(var n in e)Bv(t,n,{get:e[n],enumerable:!0})};var Ep={};Hv(Ep,{Adder:()=>dt,Delaunay:()=>wr,FormatSpecifier:()=>Yi,InternMap:()=>ke,InternSet:()=>ie,Node:()=>tn,Voronoi:()=>_r,ZoomTransform:()=>Ae,active:()=>Dm,arc:()=>Ub,area:()=>ls,areaRadial:()=>bp,ascending:()=>et,autoType:()=>ll,axisBottom:()=>Jp,axisLeft:()=>jp,axisRight:()=>Kp,axisTop:()=>Qp,bin:()=>Ca,bisect:()=>oe,bisectCenter:()=>Ip,bisectLeft:()=>Cp,bisectRight:()=>Fs,bisector:()=>Nn,blob:()=>A1,brush:()=>Xm,brushSelection:()=>Um,brushX:()=>Bm,brushY:()=>Hm,buffer:()=>k1,chord:()=>$m,chordDirected:()=>Gm,chordTranspose:()=>Vm,cluster:()=>Ox,color:()=>de,contourDensity:()=>i1,contours:()=>Tf,count:()=>un,create:()=>H0,creator:()=>In,cross:()=>zs,csv:()=>N1,csvFormat:()=>m1,csvFormatBody:()=>g1,csvFormatRow:()=>y1,csvFormatRows:()=>x1,csvFormatValue:()=>b1,csvParse:()=>Nf,csvParseRows:()=>d1,cubehelix:()=>Xt,cumsum:()=>Ls,curveBasis:()=>ev,curveBasisClosed:()=>rv,curveBasisOpen:()=>iv,curveBumpX:()=>ds,curveBumpY:()=>ms,curveBundle:()=>fv,curveCardinal:()=>uv,curveCardinalClosed:()=>sv,curveCardinalOpen:()=>cv,curveCatmullRom:()=>hv,curveCatmullRomClosed:()=>dv,curveCatmullRomOpen:()=>gv,curveLinear:()=>rr,curveLinearClosed:()=>yv,curveMonotoneX:()=>Sv,curveMonotoneY:()=>Tv,curveNatural:()=>Ev,curveStep:()=>Nv,curveStepAfter:()=>Cv,curveStepBefore:()=>Rv,descending:()=>ei,deviation:()=>oi,difference:()=>pc,disjoint:()=>dc,dispatch:()=>pe,drag:()=>V0,dragDisable:()=>qn,dragEnable:()=>On,dsv:()=>hl,dsvFormat:()=>Vn,easeBack:()=>Xc,easeBackIn:()=>Nm,easeBackInOut:()=>Xc,easeBackOut:()=>Rm,easeBounce:()=>co,easeBounceIn:()=>km,easeBounceInOut:()=>Em,easeBounceOut:()=>co,easeCircle:()=>Uc,easeCircleIn:()=>Tm,easeCircleInOut:()=>Uc,easeCircleOut:()=>Am,easeCubic:()=>Pi,easeCubicIn:()=>mm,easeCubicInOut:()=>Pi,easeCubicOut:()=>gm,easeElastic:()=>Vc,easeElasticIn:()=>Cm,easeElasticInOut:()=>Im,easeElasticOut:()=>Vc,easeExp:()=>Yc,easeExpIn:()=>Mm,easeExpInOut:()=>Yc,easeExpOut:()=>Sm,easeLinear:()=>hm,easePoly:()=>zc,easePolyIn:()=>xm,easePolyInOut:()=>zc,easePolyOut:()=>ym,easeQuad:()=>Oc,easeQuadIn:()=>pm,easeQuadInOut:()=>Oc,easeQuadOut:()=>dm,easeSin:()=>Lc,easeSinIn:()=>_m,easeSinInOut:()=>Lc,easeSinOut:()=>wm,every:()=>fc,extent:()=>sn,fcumsum:()=>Dp,filter:()=>sc,flatGroup:()=>Lp,flatRollup:()=>Yp,forceCenter:()=>O1,forceCollide:()=>eg,forceLink:()=>rg,forceManyBody:()=>ug,forceRadial:()=>sg,forceSimulation:()=>fg,forceX:()=>cg,forceY:()=>lg,format:()=>kr,formatDefaultLocale:()=>Pf,formatLocale:()=>Cf,formatPrefix:()=>Ui,formatSpecifier:()=>Pe,fsum:()=>Pp,geoAlbers:()=>xu,geoAlbersUsa:()=>wx,geoArea:()=>Tg,geoAzimuthalEqualArea:()=>Mx,geoAzimuthalEqualAreaRaw:()=>bu,geoAzimuthalEquidistant:()=>Sx,geoAzimuthalEquidistantRaw:()=>vu,geoBounds:()=>Pg,geoCentroid:()=>Lg,geoCircle:()=>Xg,geoClipAntimeridian:()=>Ki,geoClipCircle:()=>ru,geoClipExtent:()=>Vg,geoClipRectangle:()=>_n,geoConicConformal:()=>Ax,geoConicConformalRaw:()=>jl,geoConicEqualArea:()=>qr,geoConicEqualAreaRaw:()=>Kl,geoConicEquidistant:()=>Ex,geoConicEquidistantRaw:()=>th,geoContains:()=>tx,geoDistance:()=>So,geoEqualEarth:()=>Nx,geoEqualEarthRaw:()=>Mu,geoEquirectangular:()=>kx,geoEquirectangularRaw:()=>Fr,geoGnomonic:()=>Rx,geoGnomonicRaw:()=>Su,geoGraticule:()=>su,geoGraticule10:()=>rx,geoIdentity:()=>Cx,geoInterpolate:()=>ox,geoLength:()=>fu,geoMercator:()=>Tx,geoMercatorRaw:()=>Or,geoNaturalEarth1:()=>Ix,geoNaturalEarth1Raw:()=>Tu,geoOrthographic:()=>Px,geoOrthographicRaw:()=>Au,geoPath:()=>xx,geoProjection:()=>Nt,geoProjectionMutator:()=>oa,geoRotation:()=>Kf,geoStereographic:()=>Dx,geoStereographicRaw:()=>ku,geoStream:()=>zt,geoTransform:()=>yx,geoTransverseMercator:()=>qx,geoTransverseMercatorRaw:()=>Eu,gray:()=>sd,greatest:()=>ec,greatestIndex:()=>nc,group:()=>ii,groupSort:()=>Hs,groups:()=>Us,hcl:()=>oo,hierarchy:()=>sa,histogram:()=>Ca,hsl:()=>no,html:()=>D1,image:()=>C1,index:()=>Up,indexes:()=>Bp,interpolate:()=>Wt,interpolateArray:()=>_d,interpolateBasis:()=>Qa,interpolateBasisClosed:()=>Ka,interpolateBlues:()=>wb,interpolateBrBG:()=>eb,interpolateBuGn:()=>cb,interpolateBuPu:()=>lb,interpolateCividis:()=>Eb,interpolateCool:()=>Cb,interpolateCubehelix:()=>Od,interpolateCubehelixDefault:()=>Nb,interpolateCubehelixLong:()=>pr,interpolateDate:()=>tf,interpolateDiscrete:()=>wd,interpolateGnBu:()=>hb,interpolateGreens:()=>Mb,interpolateGreys:()=>Sb,interpolateHcl:()=>Pd,interpolateHclLong:()=>Dd,interpolateHsl:()=>Rd,interpolateHslLong:()=>Cd,interpolateHue:()=>Md,interpolateInferno:()=>Fb,interpolateLab:()=>Pc,interpolateMagma:()=>Ob,interpolateNumber:()=>Ot,interpolateNumberArray:()=>ao,interpolateObject:()=>ef,interpolateOrRd:()=>pb,interpolateOranges:()=>kb,interpolatePRGn:()=>nb,interpolatePiYG:()=>rb,interpolatePlasma:()=>zb,interpolatePuBu:()=>mb,interpolatePuBuGn:()=>db,interpolatePuOr:()=>ob,interpolatePuRd:()=>gb,interpolatePurples:()=>Tb,interpolateRainbow:()=>Ib,interpolateRdBu:()=>ib,interpolateRdGy:()=>ab,interpolateRdPu:()=>xb,interpolateRdYlBu:()=>fb,interpolateRdYlGn:()=>ub,interpolateReds:()=>Ab,interpolateRgb:()=>Yn,interpolateRgbBasis:()=>Ja,interpolateRgbBasisClosed:()=>vd,interpolateRound:()=>Un,interpolateSinebow:()=>Pb,interpolateSpectral:()=>sb,interpolateString:()=>fo,interpolateTransformCss:()=>of,interpolateTransformSvg:()=>af,interpolateTurbo:()=>Db,interpolateViridis:()=>qb,interpolateWarm:()=>Rb,interpolateYlGn:()=>bb,interpolateYlGnBu:()=>yb,interpolateYlOrBr:()=>vb,interpolateYlOrRd:()=>_b,interpolateZoom:()=>ff,interrupt:()=>Ce,intersection:()=>mc,interval:()=>Ud,isoFormat:()=>Uy,isoParse:()=>By,json:()=>I1,lab:()=>lr,lch:()=>ld,least:()=>tc,leastIndex:()=>hi,line:()=>$o,lineRadial:()=>yp,link:()=>Aa,linkHorizontal:()=>Zb,linkRadial:()=>Kb,linkVertical:()=>Qb,local:()=>Ya,map:()=>cc,matcher:()=>jr,max:()=>Rn,maxIndex:()=>ci,mean:()=>Zs,median:()=>Qs,merge:()=>ar,min:()=>Cn,minIndex:()=>li,mode:()=>Ks,namespace:()=>He,namespaces:()=>gi,nice:()=>ui,now:()=>Bn,pack:()=>f2,packEnclose:()=>Jx,packSiblings:()=>o2,pairs:()=>Js,partition:()=>u2,path:()=>fe,permute:()=>ai,pie:()=>$b,piecewise:()=>Ti,pointRadial:()=>Vr,pointer:()=>qt,pointers:()=>X0,polygonArea:()=>x2,polygonCentroid:()=>y2,polygonContains:()=>w2,polygonHull:()=>_2,polygonLength:()=>M2,precisionFixed:()=>Df,precisionPrefix:()=>qf,precisionRound:()=>Of,quadtree:()=>Gn,quantile:()=>Be,quantileSorted:()=>Ia,quantize:()=>Fd,quickselect:()=>Kr,radialArea:()=>bp,radialLine:()=>yp,randomBates:()=>k2,randomBernoulli:()=>R2,randomBeta:()=>Ou,randomBinomial:()=>Fu,randomCauchy:()=>I2,randomExponential:()=>E2,randomGamma:()=>qo,randomGeometric:()=>qu,randomInt:()=>T2,randomIrwinHall:()=>Du,randomLcg:()=>ph,randomLogNormal:()=>A2,randomLogistic:()=>P2,randomNormal:()=>Do,randomPareto:()=>N2,randomPoisson:()=>D2,randomUniform:()=>S2,randomWeibull:()=>C2,range:()=>ae,rank:()=>js,reduce:()=>lc,reverse:()=>hc,rgb:()=>pn,ribbon:()=>jm,ribbonArrow:()=>t1,rollup:()=>Ra,rollups:()=>Bs,scaleBand:()=>la,scaleDiverging:()=>is,scaleDivergingLog:()=>Uh,scaleDivergingPow:()=>as,scaleDivergingSqrt:()=>Xy,scaleDivergingSymlog:()=>Bh,scaleIdentity:()=>Yu,scaleImplicit:()=>zu,scaleLinear:()=>Lu,scaleLog:()=>Uu,scaleOrdinal:()=>Oo,scalePoint:()=>F2,scalePow:()=>xa,scaleQuantile:()=>Xu,scaleQuantize:()=>Wu,scaleRadial:()=>Hu,scaleSequential:()=>es,scaleSequentialLog:()=>Lh,scaleSequentialPow:()=>ns,scaleSequentialQuantile:()=>rs,scaleSequentialSqrt:()=>Hy,scaleSequentialSymlog:()=>Yh,scaleSqrt:()=>W2,scaleSymlog:()=>Bu,scaleThreshold:()=>$u,scaleTime:()=>Fh,scaleUtc:()=>zh,scan:()=>rc,schemeAccent:()=>$y,schemeBlues:()=>cp,schemeBrBG:()=>Hh,schemeBuGn:()=>Jh,schemeBuPu:()=>jh,schemeCategory10:()=>Wy,schemeDark2:()=>Vy,schemeGnBu:()=>tp,schemeGreens:()=>lp,schemeGreys:()=>hp,schemeOrRd:()=>ep,schemeOranges:()=>mp,schemePRGn:()=>Xh,schemePaired:()=>Gy,schemePastel1:()=>Zy,schemePastel2:()=>Qy,schemePiYG:()=>Wh,schemePuBu:()=>rp,schemePuBuGn:()=>np,schemePuOr:()=>$h,schemePuRd:()=>op,schemePurples:()=>pp,schemeRdBu:()=>Vh,schemeRdGy:()=>Gh,schemeRdPu:()=>ip,schemeRdYlBu:()=>Zh,schemeRdYlGn:()=>Qh,schemeReds:()=>dp,schemeSet1:()=>Ky,schemeSet2:()=>Jy,schemeSet3:()=>jy,schemeSpectral:()=>Kh,schemeTableau10:()=>tb,schemeYlGn:()=>fp,schemeYlGnBu:()=>ap,schemeYlOrBr:()=>up,schemeYlOrRd:()=>sp,select:()=>Tt,selectAll:()=>W0,selection:()=>Xe,selector:()=>Pn,selectorAll:()=>Jr,shuffle:()=>$p,shuffler:()=>oc,some:()=>uc,sort:()=>Zr,stack:()=>Iv,stackOffsetDiverging:()=>Dv,stackOffsetExpand:()=>Pv,stackOffsetNone:()=>Le,stackOffsetSilhouette:()=>qv,stackOffsetWiggle:()=>Ov,stackOrderAppearance:()=>Ps,stackOrderAscending:()=>Ds,stackOrderDescending:()=>Fv,stackOrderInsideOut:()=>zv,stackOrderNone:()=>Ye,stackOrderReverse:()=>Lv,stratify:()=>l2,style:()=>ln,subset:()=>gc,sum:()=>ic,superset:()=>di,svg:()=>q1,symbol:()=>Sp,symbolAsterisk:()=>gs,symbolCircle:()=>Zo,symbolCross:()=>xs,symbolDiamond:()=>ys,symbolDiamond2:()=>bs,symbolPlus:()=>vs,symbolSquare:()=>_s,symbolSquare2:()=>ws,symbolStar:()=>Ms,symbolTriangle:()=>Ss,symbolTriangle2:()=>Ts,symbolWye:()=>As,symbolX:()=>ks,symbols:()=>Mp,symbolsFill:()=>Mp,symbolsStroke:()=>tv,text:()=>Tr,thresholdFreedmanDiaconis:()=>Vs,thresholdScott:()=>Gs,thresholdSturges:()=>ir,tickFormat:()=>ha,tickIncrement:()=>Ue,tickStep:()=>Ee,ticks:()=>he,timeDay:()=>Mn,timeDays:()=>j2,timeFormat:()=>Ma,timeFormatDefaultLocale:()=>Ju,timeFormatLocale:()=>wa,timeFriday:()=>Mh,timeFridays:()=>iy,timeHour:()=>zo,timeHours:()=>K2,timeInterval:()=>ot,timeMillisecond:()=>ya,timeMilliseconds:()=>yh,timeMinute:()=>Fo,timeMinutes:()=>Z2,timeMonday:()=>Hr,timeMondays:()=>ey,timeMonth:()=>Lo,timeMonths:()=>uy,timeParse:()=>qh,timeSaturday:()=>Sh,timeSaturdays:()=>ay,timeSecond:()=>be,timeSeconds:()=>bh,timeSunday:()=>on,timeSundays:()=>Th,timeThursday:()=>Sn,timeThursdays:()=>oy,timeTickInterval:()=>Ku,timeTicks:()=>Qu,timeTuesday:()=>_h,timeTuesdays:()=>ny,timeWednesday:()=>wh,timeWednesdays:()=>ry,timeWeek:()=>on,timeWeeks:()=>Th,timeYear:()=>ve,timeYears:()=>sy,timeout:()=>Ri,timer:()=>gr,timerFlush:()=>qc,transition:()=>xf,transpose:()=>pi,tree:()=>h2,treemap:()=>p2,treemapBinary:()=>d2,treemapDice:()=>en,treemapResquarify:()=>g2,treemapSlice:()=>tr,treemapSliceDice:()=>m2,treemapSquarify:()=>Pu,tsv:()=>R1,tsvFormat:()=>_1,tsvFormatBody:()=>w1,tsvFormatRow:()=>S1,tsvFormatRows:()=>M1,tsvFormatValue:()=>T1,tsvParse:()=>Rf,tsvParseRows:()=>v1,union:()=>xc,utcDay:()=>Tn,utcDays:()=>my,utcFormat:()=>$r,utcFriday:()=>Nh,utcFridays:()=>vy,utcHour:()=>Uo,utcHours:()=>py,utcMillisecond:()=>ya,utcMilliseconds:()=>yh,utcMinute:()=>Yo,utcMinutes:()=>ly,utcMonday:()=>Wr,utcMondays:()=>gy,utcMonth:()=>Bo,utcMonths:()=>My,utcParse:()=>Sa,utcSaturday:()=>Rh,utcSaturdays:()=>_y,utcSecond:()=>be,utcSeconds:()=>bh,utcSunday:()=>an,utcSundays:()=>Ch,utcThursday:()=>An,utcThursdays:()=>by,utcTickInterval:()=>Zu,utcTicks:()=>Gu,utcTuesday:()=>kh,utcTuesdays:()=>xy,utcWednesday:()=>Eh,utcWednesdays:()=>yy,utcWeek:()=>an,utcWeeks:()=>Ch,utcYear:()=>_e,utcYears:()=>Sy,variance:()=>ri,window:()=>to,xml:()=>P1,zip:()=>ac,zoom:()=>Uv,zoomIdentity:()=>Jo,zoomTransform:()=>qs});function et(t,e){return t==null||e==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function ei(t,e){return t==null||e==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function Nn(t){let e,n,r;t.length!==2?(e=et,n=(f,u)=>et(t(f),u),r=(f,u)=>t(f)-u):(e=t===et||t===ei?t:Xv,n=t,r=t);function o(f,u,s=0,c=f.length){if(s<c){if(e(u,u)!==0)return c;do{let h=s+c>>>1;n(f[h],u)<0?s=h+1:c=h}while(s<c)}return s}function i(f,u,s=0,c=f.length){if(s<c){if(e(u,u)!==0)return c;do{let h=s+c>>>1;n(f[h],u)<=0?s=h+1:c=h}while(s<c)}return s}function a(f,u,s=0,c=f.length){let h=o(f,u,s,c-1);return h>s&&r(f[h-1],u)>-r(f[h],u)?h-1:h}return{left:o,center:a,right:i}}function Xv(){return 0}function ni(t){return t===null?NaN:+t}function*Np(t,e){if(e===void 0)for(let n of t)n!=null&&(n=+n)>=n&&(yield n);else{let n=-1;for(let r of t)(r=e(r,++n,t))!=null&&(r=+r)>=r&&(yield r)}}var Rp=Nn(et),Fs=Rp.right,Cp=Rp.left,Ip=Nn(ni).center,oe=Fs;function un(t,e){let n=0;if(e===void 0)for(let r of t)r!=null&&(r=+r)>=r&&++n;else{let r=-1;for(let o of t)(o=e(o,++r,t))!=null&&(o=+o)>=o&&++n}return n}function Wv(t){return t.length|0}function $v(t){return!(t>0)}function Vv(t){return typeof t!="object"||"length"in t?t:Array.from(t)}function Gv(t){return e=>t(...e)}function zs(...t){let e=typeof t[t.length-1]=="function"&&Gv(t.pop());t=t.map(Vv);let n=t.map(Wv),r=t.length-1,o=new Array(r+1).fill(0),i=[];if(r<0||n.some($v))return i;for(;;){i.push(o.map((f,u)=>t[u][f]));let a=r;for(;++o[a]===n[a];){if(a===0)return e?i.map(e):i;o[a--]=0}}}function Ls(t,e){var n=0,r=0;return Float64Array.from(t,e===void 0?o=>n+=+o||0:o=>n+=+e(o,r++,t)||0)}function ri(t,e){let n=0,r,o=0,i=0;if(e===void 0)for(let a of t)a!=null&&(a=+a)>=a&&(r=a-o,o+=r/++n,i+=r*(a-o));else{let a=-1;for(let f of t)(f=e(f,++a,t))!=null&&(f=+f)>=f&&(r=f-o,o+=r/++n,i+=r*(f-o))}if(n>1)return i/(n-1)}function oi(t,e){let n=ri(t,e);return n&&Math.sqrt(n)}function sn(t,e){let n,r;if(e===void 0)for(let o of t)o!=null&&(n===void 0?o>=o&&(n=r=o):(n>o&&(n=o),r<o&&(r=o)));else{let o=-1;for(let i of t)(i=e(i,++o,t))!=null&&(n===void 0?i>=i&&(n=r=i):(n>i&&(n=i),r<i&&(r=i)))}return[n,r]}var dt=class{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){let n=this._partials,r=0;for(let o=0;o<this._n&&o<32;o++){let i=n[o],a=e+i,f=Math.abs(e)<Math.abs(i)?e-(a-i):i-(a-e);f&&(n[r++]=f),e=a}return n[r]=e,this._n=r+1,this}valueOf(){let e=this._partials,n=this._n,r,o,i,a=0;if(n>0){for(a=e[--n];n>0&&(r=a,o=e[--n],a=r+o,i=o-(a-r),!i););n>0&&(i<0&&e[n-1]<0||i>0&&e[n-1]>0)&&(o=i*2,r=a+o,o==r-a&&(a=r))}return a}};function Pp(t,e){let n=new dt;if(e===void 0)for(let r of t)(r=+r)&&n.add(r);else{let r=-1;for(let o of t)(o=+e(o,++r,t))&&n.add(o)}return+n}function Dp(t,e){let n=new dt,r=-1;return Float64Array.from(t,e===void 0?o=>n.add(+o||0):o=>n.add(+e(o,++r,t)||0))}var ke=class extends Map{constructor(e,n=Fp){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),e!=null)for(let[r,o]of e)this.set(r,o)}get(e){return super.get(Ys(this,e))}has(e){return super.has(Ys(this,e))}set(e,n){return super.set(qp(this,e),n)}delete(e){return super.delete(Op(this,e))}},ie=class extends Set{constructor(e,n=Fp){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),e!=null)for(let r of e)this.add(r)}has(e){return super.has(Ys(this,e))}add(e){return super.add(qp(this,e))}delete(e){return super.delete(Op(this,e))}};function Ys({_intern:t,_key:e},n){let r=e(n);return t.has(r)?t.get(r):n}function qp({_intern:t,_key:e},n){let r=e(n);return t.has(r)?t.get(r):(t.set(r,n),n)}function Op({_intern:t,_key:e},n){let r=e(n);return t.has(r)&&(n=t.get(r),t.delete(r)),n}function Fp(t){return t!==null&&typeof t=="object"?t.valueOf():t}function cn(t){return t}function ii(t,...e){return Gr(t,cn,cn,e)}function Us(t,...e){return Gr(t,Array.from,cn,e)}function zp(t,e){for(let n=1,r=e.length;n<r;++n)t=t.flatMap(o=>o.pop().map(([i,a])=>[...o,i,a]));return t}function Lp(t,...e){return zp(Us(t,...e),e)}function Yp(t,e,...n){return zp(Bs(t,e,...n),n)}function Ra(t,e,...n){return Gr(t,cn,e,n)}function Bs(t,e,...n){return Gr(t,Array.from,e,n)}function Up(t,...e){return Gr(t,cn,Hp,e)}function Bp(t,...e){return Gr(t,Array.from,Hp,e)}function Hp(t){if(t.length!==1)throw new Error("duplicate key");return t[0]}function Gr(t,e,n,r){return function o(i,a){if(a>=r.length)return n(i);let f=new ke,u=r[a++],s=-1;for(let c of i){let h=u(c,++s,i),l=f.get(h);l?l.push(c):f.set(h,[c])}for(let[c,h]of f)f.set(c,o(h,a));return e(f)}(t,0)}function ai(t,e){return Array.from(e,n=>t[n])}function Zr(t,...e){if(typeof t[Symbol.iterator]!="function")throw new TypeError("values is not iterable");t=Array.from(t);let[n]=e;if(n&&n.length!==2||e.length>1){let r=Uint32Array.from(t,(o,i)=>i);return e.length>1?(e=e.map(o=>t.map(o)),r.sort((o,i)=>{for(let a of e){let f=or(a[o],a[i]);if(f)return f}})):(n=t.map(n),r.sort((o,i)=>or(n[o],n[i]))),ai(t,r)}return t.sort(fi(n))}function fi(t=et){if(t===et)return or;if(typeof t!="function")throw new TypeError("compare is not a function");return(e,n)=>{let r=t(e,n);return r||r===0?r:(t(n,n)===0)-(t(e,e)===0)}}function or(t,e){return(t==null||!(t>=t))-(e==null||!(e>=e))||(t<e?-1:t>e?1:0)}function Hs(t,e,n){return(e.length!==2?Zr(Ra(t,e,n),([r,o],[i,a])=>et(o,a)||et(r,i)):Zr(ii(t,n),([r,o],[i,a])=>e(o,a)||et(r,i))).map(([r])=>r)}var Xp=Array.prototype,Wp=Xp.slice,r7=Xp.map;function Qr(t){return()=>t}var Xs=Math.sqrt(50),Ws=Math.sqrt(10),$s=Math.sqrt(2);function he(t,e,n){var r,o=-1,i,a,f;if(e=+e,t=+t,n=+n,t===e&&n>0)return[t];if((r=e<t)&&(i=t,t=e,e=i),(f=Ue(t,e,n))===0||!isFinite(f))return[];if(f>0){let u=Math.round(t/f),s=Math.round(e/f);for(u*f<t&&++u,s*f>e&&--s,a=new Array(i=s-u+1);++o<i;)a[o]=(u+o)*f}else{f=-f;let u=Math.round(t*f),s=Math.round(e*f);for(u/f<t&&++u,s/f>e&&--s,a=new Array(i=s-u+1);++o<i;)a[o]=(u+o)/f}return r&&a.reverse(),a}function Ue(t,e,n){var r=(e-t)/Math.max(0,n),o=Math.floor(Math.log(r)/Math.LN10),i=r/Math.pow(10,o);return o>=0?(i>=Xs?10:i>=Ws?5:i>=$s?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(i>=Xs?10:i>=Ws?5:i>=$s?2:1)}function Ee(t,e,n){var r=Math.abs(e-t)/Math.max(0,n),o=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),i=r/o;return i>=Xs?o*=10:i>=Ws?o*=5:i>=$s&&(o*=2),e<t?-o:o}function ui(t,e,n){let r;for(;;){let o=Ue(t,e,n);if(o===r||o===0||!isFinite(o))return[t,e];o>0?(t=Math.floor(t/o)*o,e=Math.ceil(e/o)*o):o<0&&(t=Math.ceil(t*o)/o,e=Math.floor(e*o)/o),r=o}}function ir(t){return Math.ceil(Math.log(un(t))/Math.LN2)+1}function Ca(){var t=cn,e=sn,n=ir;function r(o){Array.isArray(o)||(o=Array.from(o));var i,a=o.length,f,u,s=new Array(a);for(i=0;i<a;++i)s[i]=t(o[i],i,o);var c=e(s),h=c[0],l=c[1],p=n(s,h,l);if(!Array.isArray(p)){let m=l,v=+p;if(e===sn&&([h,l]=ui(h,l,v)),p=he(h,l,v),p[0]<=h&&(u=Ue(h,l,v)),p[p.length-1]>=l)if(m>=l&&e===sn){let b=Ue(h,l,v);isFinite(b)&&(b>0?l=(Math.floor(l/b)+1)*b:b<0&&(l=(Math.ceil(l*-b)+1)/-b))}else p.pop()}for(var g=p.length;p[0]<=h;)p.shift(),--g;for(;p[g-1]>l;)p.pop(),--g;var x=new Array(g+1),d;for(i=0;i<=g;++i)d=x[i]=[],d.x0=i>0?p[i-1]:h,d.x1=i<g?p[i]:l;if(isFinite(u)){if(u>0)for(i=0;i<a;++i)(f=s[i])!=null&&h<=f&&f<=l&&x[Math.min(g,Math.floor((f-h)/u))].push(o[i]);else if(u<0){for(i=0;i<a;++i)if((f=s[i])!=null&&h<=f&&f<=l){let m=Math.floor((h-f)*u);x[Math.min(g,m+(p[m]<=f))].push(o[i])}}}else for(i=0;i<a;++i)(f=s[i])!=null&&h<=f&&f<=l&&x[oe(p,f,0,g)].push(o[i]);return x}return r.value=function(o){return arguments.length?(t=typeof o=="function"?o:Qr(o),r):t},r.domain=function(o){return arguments.length?(e=typeof o=="function"?o:Qr([o[0],o[1]]),r):e},r.thresholds=function(o){return arguments.length?(n=typeof o=="function"?o:Array.isArray(o)?Qr(Wp.call(o)):Qr(o),r):n},r}function Rn(t,e){let n;if(e===void 0)for(let r of t)r!=null&&(n<r||n===void 0&&r>=r)&&(n=r);else{let r=-1;for(let o of t)(o=e(o,++r,t))!=null&&(n<o||n===void 0&&o>=o)&&(n=o)}return n}function Cn(t,e){let n;if(e===void 0)for(let r of t)r!=null&&(n>r||n===void 0&&r>=r)&&(n=r);else{let r=-1;for(let o of t)(o=e(o,++r,t))!=null&&(n>o||n===void 0&&o>=o)&&(n=o)}return n}function Kr(t,e,n=0,r=t.length-1,o){for(o=o===void 0?or:fi(o);r>n;){if(r-n>600){let u=r-n+1,s=e-n+1,c=Math.log(u),h=.5*Math.exp(2*c/3),l=.5*Math.sqrt(c*h*(u-h)/u)*(s-u/2<0?-1:1),p=Math.max(n,Math.floor(e-s*h/u+l)),g=Math.min(r,Math.floor(e+(u-s)*h/u+l));Kr(t,e,p,g,o)}let i=t[e],a=n,f=r;for(si(t,n,e),o(t[r],i)>0&&si(t,n,r);a<f;){for(si(t,a,f),++a,--f;o(t[a],i)<0;)++a;for(;o(t[f],i)>0;)--f}o(t[n],i)===0?si(t,n,f):(++f,si(t,f,r)),f<=e&&(n=f+1),e<=f&&(r=f-1)}return t}function si(t,e,n){let r=t[e];t[e]=t[n],t[n]=r}function Be(t,e,n){if(t=Float64Array.from(Np(t,n)),!!(r=t.length)){if((e=+e)<=0||r<2)return Cn(t);if(e>=1)return Rn(t);var r,o=(r-1)*e,i=Math.floor(o),a=Rn(Kr(t,i).subarray(0,i+1)),f=Cn(t.subarray(i+1));return a+(f-a)*(o-i)}}function Ia(t,e,n=ni){if(!!(r=t.length)){if((e=+e)<=0||r<2)return+n(t[0],0,t);if(e>=1)return+n(t[r-1],r-1,t);var r,o=(r-1)*e,i=Math.floor(o),a=+n(t[i],i,t),f=+n(t[i+1],i+1,t);return a+(f-a)*(o-i)}}function Vs(t,e,n){return Math.ceil((n-e)/(2*(Be(t,.75)-Be(t,.25))*Math.pow(un(t),-1/3)))}function Gs(t,e,n){return Math.ceil((n-e)*Math.cbrt(un(t))/(3.49*oi(t)))}function ci(t,e){let n,r=-1,o=-1;if(e===void 0)for(let i of t)++o,i!=null&&(n<i||n===void 0&&i>=i)&&(n=i,r=o);else for(let i of t)(i=e(i,++o,t))!=null&&(n<i||n===void 0&&i>=i)&&(n=i,r=o);return r}function Zs(t,e){let n=0,r=0;if(e===void 0)for(let o of t)o!=null&&(o=+o)>=o&&(++n,r+=o);else{let o=-1;for(let i of t)(i=e(i,++o,t))!=null&&(i=+i)>=i&&(++n,r+=i)}if(n)return r/n}function Qs(t,e){return Be(t,.5,e)}function*Zv(t){for(let e of t)yield*e}function ar(t){return Array.from(Zv(t))}function li(t,e){let n,r=-1,o=-1;if(e===void 0)for(let i of t)++o,i!=null&&(n>i||n===void 0&&i>=i)&&(n=i,r=o);else for(let i of t)(i=e(i,++o,t))!=null&&(n>i||n===void 0&&i>=i)&&(n=i,r=o);return r}function Ks(t,e){let n=new ke;if(e===void 0)for(let i of t)i!=null&&i>=i&&n.set(i,(n.get(i)||0)+1);else{let i=-1;for(let a of t)(a=e(a,++i,t))!=null&&a>=a&&n.set(a,(n.get(a)||0)+1)}let r,o=0;for(let[i,a]of n)a>o&&(o=a,r=i);return r}function Js(t,e=Qv){let n=[],r,o=!1;for(let i of t)o&&n.push(e(r,i)),r=i,o=!0;return n}function Qv(t,e){return[t,e]}function ae(t,e,n){t=+t,e=+e,n=(o=arguments.length)<2?(e=t,t=0,1):o<3?1:+n;for(var r=-1,o=Math.max(0,Math.ceil((e-t)/n))|0,i=new Array(o);++r<o;)i[r]=t+r*n;return i}function js(t,e=et){if(typeof t[Symbol.iterator]!="function")throw new TypeError("values is not iterable");let n=Array.from(t),r=new Float64Array(n.length);e.length!==2&&(n=n.map(e),e=et);let o=(f,u)=>e(n[f],n[u]),i,a;return Uint32Array.from(n,(f,u)=>u).sort(e===et?(f,u)=>or(n[f],n[u]):fi(o)).forEach((f,u)=>{let s=o(f,i===void 0?f:i);s>=0?((i===void 0||s>0)&&(i=f,a=u),r[f]=a):r[f]=NaN}),r}function tc(t,e=et){let n,r=!1;if(e.length===1){let o;for(let i of t){let a=e(i);(r?et(a,o)<0:et(a,a)===0)&&(n=i,o=a,r=!0)}}else for(let o of t)(r?e(o,n)<0:e(o,o)===0)&&(n=o,r=!0);return n}function hi(t,e=et){if(e.length===1)return li(t,e);let n,r=-1,o=-1;for(let i of t)++o,(r<0?e(i,i)===0:e(i,n)<0)&&(n=i,r=o);return r}function ec(t,e=et){let n,r=!1;if(e.length===1){let o;for(let i of t){let a=e(i);(r?et(a,o)>0:et(a,a)===0)&&(n=i,o=a,r=!0)}}else for(let o of t)(r?e(o,n)>0:e(o,o)===0)&&(n=o,r=!0);return n}function nc(t,e=et){if(e.length===1)return ci(t,e);let n,r=-1,o=-1;for(let i of t)++o,(r<0?e(i,i)===0:e(i,n)>0)&&(n=i,r=o);return r}function rc(t,e){let n=hi(t,e);return n<0?void 0:n}var $p=oc(Math.random);function oc(t){return function(n,r=0,o=n.length){let i=o-(r=+r);for(;i;){let a=t()*i--|0,f=n[i+r];n[i+r]=n[a+r],n[a+r]=f}return n}}function ic(t,e){let n=0;if(e===void 0)for(let r of t)(r=+r)&&(n+=r);else{let r=-1;for(let o of t)(o=+e(o,++r,t))&&(n+=o)}return n}function pi(t){if(!(i=t.length))return[];for(var e=-1,n=Cn(t,Kv),r=new Array(n);++e<n;)for(var o=-1,i,a=r[e]=new Array(i);++o<i;)a[o]=t[o][e];return r}function Kv(t){return t.length}function ac(){return pi(arguments)}function fc(t,e){if(typeof e!="function")throw new TypeError("test is not a function");let n=-1;for(let r of t)if(!e(r,++n,t))return!1;return!0}function uc(t,e){if(typeof e!="function")throw new TypeError("test is not a function");let n=-1;for(let r of t)if(e(r,++n,t))return!0;return!1}function sc(t,e){if(typeof e!="function")throw new TypeError("test is not a function");let n=[],r=-1;for(let o of t)e(o,++r,t)&&n.push(o);return n}function cc(t,e){if(typeof t[Symbol.iterator]!="function")throw new TypeError("values is not iterable");if(typeof e!="function")throw new TypeError("mapper is not a function");return Array.from(t,(n,r)=>e(n,r,t))}function lc(t,e,n){if(typeof e!="function")throw new TypeError("reducer is not a function");let r=t[Symbol.iterator](),o,i,a=-1;if(arguments.length<3){if({done:o,value:n}=r.next(),o)return;++a}for(;{done:o,value:i}=r.next(),!o;)n=e(n,i,++a,t);return n}function hc(t){if(typeof t[Symbol.iterator]!="function")throw new TypeError("values is not iterable");return Array.from(t).reverse()}function pc(t,...e){t=new ie(t);for(let n of e)for(let r of n)t.delete(r);return t}function dc(t,e){let n=e[Symbol.iterator](),r=new ie;for(let o of t){if(r.has(o))return!1;let i,a;for(;({value:i,done:a}=n.next())&&!a;){if(Object.is(o,i))return!1;r.add(i)}}return!0}function mc(t,...e){t=new ie(t),e=e.map(Jv);t:for(let n of t)for(let r of e)if(!r.has(n)){t.delete(n);continue t}return t}function Jv(t){return t instanceof ie?t:new ie(t)}function di(t,e){let n=t[Symbol.iterator](),r=new Set;for(let o of e){let i=Vp(o);if(r.has(i))continue;let a,f;for(;{value:a,done:f}=n.next();){if(f)return!1;let u=Vp(a);if(r.add(u),Object.is(i,u))break}}return!0}function Vp(t){return t!==null&&typeof t=="object"?t.valueOf():t}function gc(t,e){return di(e,t)}function xc(...t){let e=new ie;for(let n of t)for(let r of n)e.add(r);return e}function Gp(t){return t}var Pa=1,Da=2,yc=3,mi=4,Zp=1e-6;function jv(t){return"translate("+t+",0)"}function t_(t){return"translate(0,"+t+")"}function e_(t){return e=>+t(e)}function n_(t,e){return e=Math.max(0,t.bandwidth()-e*2)/2,t.round()&&(e=Math.round(e)),n=>+t(n)+e}function r_(){return!this.__axis}function qa(t,e){var n=[],r=null,o=null,i=6,a=6,f=3,u=typeof window<"u"&&window.devicePixelRatio>1?0:.5,s=t===Pa||t===mi?-1:1,c=t===mi||t===Da?"x":"y",h=t===Pa||t===yc?jv:t_;function l(p){var g=r==null?e.ticks?e.ticks.apply(e,n):e.domain():r,x=o==null?e.tickFormat?e.tickFormat.apply(e,n):Gp:o,d=Math.max(i,0)+f,m=e.range(),v=+m[0]+u,b=+m[m.length-1]+u,y=(e.bandwidth?n_:e_)(e.copy(),u),_=p.selection?p.selection():p,w=_.selectAll(".domain").data([null]),E=_.selectAll(".tick").data(g,e).order(),N=E.exit(),P=E.enter().append("g").attr("class","tick"),T=E.select("line"),S=E.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),E=E.merge(P),T=T.merge(P.append("line").attr("stroke","currentColor").attr(c+"2",s*i)),S=S.merge(P.append("text").attr("fill","currentColor").attr(c,s*d).attr("dy",t===Pa?"0em":t===yc?"0.71em":"0.32em")),p!==_&&(w=w.transition(p),E=E.transition(p),T=T.transition(p),S=S.transition(p),N=N.transition(p).attr("opacity",Zp).attr("transform",function(C){return isFinite(C=y(C))?h(C+u):this.getAttribute("transform")}),P.attr("opacity",Zp).attr("transform",function(C){var R=this.parentNode.__axis;return h((R&&isFinite(R=R(C))?R:y(C))+u)})),N.remove(),w.attr("d",t===mi||t===Da?a?"M"+s*a+","+v+"H"+u+"V"+b+"H"+s*a:"M"+u+","+v+"V"+b:a?"M"+v+","+s*a+"V"+u+"H"+b+"V"+s*a:"M"+v+","+u+"H"+b),E.attr("opacity",1).attr("transform",function(C){return h(y(C)+u)}),T.attr(c+"2",s*i),S.attr(c,s*d).text(x),_.filter(r_).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===Da?"start":t===mi?"end":"middle"),_.each(function(){this.__axis=y})}return l.scale=function(p){return arguments.length?(e=p,l):e},l.ticks=function(){return n=Array.from(arguments),l},l.tickArguments=function(p){return arguments.length?(n=p==null?[]:Array.from(p),l):n.slice()},l.tickValues=function(p){return arguments.length?(r=p==null?null:Array.from(p),l):r&&r.slice()},l.tickFormat=function(p){return arguments.length?(o=p,l):o},l.tickSize=function(p){return arguments.length?(i=a=+p,l):i},l.tickSizeInner=function(p){return arguments.length?(i=+p,l):i},l.tickSizeOuter=function(p){return arguments.length?(a=+p,l):a},l.tickPadding=function(p){return arguments.length?(f=+p,l):f},l.offset=function(p){return arguments.length?(u=+p,l):u},l}function Qp(t){return qa(Pa,t)}function Kp(t){return qa(Da,t)}function Jp(t){return qa(yc,t)}function jp(t){return qa(mi,t)}var o_={value:()=>{}};function e0(){for(var t=0,e=arguments.length,n={},r;t<e;++t){if(!(r=arguments[t]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new Oa(n)}function Oa(t){this._=t}function i_(t,e){return t.trim().split(/^|\s+/).map(function(n){var r="",o=n.indexOf(".");if(o>=0&&(r=n.slice(o+1),n=n.slice(0,o)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}Oa.prototype=e0.prototype={constructor:Oa,on:function(t,e){var n=this._,r=i_(t+"",n),o,i=-1,a=r.length;if(arguments.length<2){for(;++i<a;)if((o=(t=r[i]).type)&&(o=a_(n[o],t.name)))return o;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++i<a;)if(o=(t=r[i]).type)n[o]=t0(n[o],t.name,e);else if(e==null)for(o in n)n[o]=t0(n[o],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new Oa(t)},call:function(t,e){if((o=arguments.length-2)>0)for(var n=new Array(o),r=0,o,i;r<o;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(i=this._[t],r=0,o=i.length;r<o;++r)i[r].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],o=0,i=r.length;o<i;++o)r[o].value.apply(e,n)}};function a_(t,e){for(var n=0,r=t.length,o;n<r;++n)if((o=t[n]).name===e)return o.value}function t0(t,e,n){for(var r=0,o=t.length;r<o;++r)if(t[r].name===e){t[r]=o_,t=t.slice(0,r).concat(t.slice(r+1));break}return n!=null&&t.push({name:e,value:n}),t}var pe=e0;var Fa="http://www.w3.org/1999/xhtml",gi={svg:"http://www.w3.org/2000/svg",xhtml:Fa,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function He(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),gi.hasOwnProperty(e)?{space:gi[e],local:t}:t}function f_(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===Fa&&e.documentElement.namespaceURI===Fa?e.createElement(t):e.createElementNS(n,t)}}function u_(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function In(t){var e=He(t);return(e.local?u_:f_)(e)}function s_(){}function Pn(t){return t==null?s_:function(){return this.querySelector(t)}}function n0(t){typeof t!="function"&&(t=Pn(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i=e[o],a=i.length,f=r[o]=new Array(a),u,s,c=0;c<a;++c)(u=i[c])&&(s=t.call(u,u.__data__,c,i))&&("__data__"in u&&(s.__data__=u.__data__),f[c]=s);return new yt(r,this._parents)}function xi(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function c_(){return[]}function Jr(t){return t==null?c_:function(){return this.querySelectorAll(t)}}function l_(t){return function(){return xi(t.apply(this,arguments))}}function r0(t){typeof t=="function"?t=l_(t):t=Jr(t);for(var e=this._groups,n=e.length,r=[],o=[],i=0;i<n;++i)for(var a=e[i],f=a.length,u,s=0;s<f;++s)(u=a[s])&&(r.push(t.call(u,u.__data__,s,a)),o.push(u));return new yt(r,o)}function jr(t){return function(){return this.matches(t)}}function za(t){return function(e){return e.matches(t)}}var h_=Array.prototype.find;function p_(t){return function(){return h_.call(this.children,t)}}function d_(){return this.firstElementChild}function o0(t){return this.select(t==null?d_:p_(typeof t=="function"?t:za(t)))}var m_=Array.prototype.filter;function g_(){return Array.from(this.children)}function x_(t){return function(){return m_.call(this.children,t)}}function i0(t){return this.selectAll(t==null?g_:x_(typeof t=="function"?t:za(t)))}function a0(t){typeof t!="function"&&(t=jr(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i=e[o],a=i.length,f=r[o]=[],u,s=0;s<a;++s)(u=i[s])&&t.call(u,u.__data__,s,i)&&f.push(u);return new yt(r,this._parents)}function La(t){return new Array(t.length)}function f0(){return new yt(this._enter||this._groups.map(La),this._parents)}function yi(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}yi.prototype={constructor:yi,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function u0(t){return function(){return t}}function y_(t,e,n,r,o,i){for(var a=0,f,u=e.length,s=i.length;a<s;++a)(f=e[a])?(f.__data__=i[a],r[a]=f):n[a]=new yi(t,i[a]);for(;a<u;++a)(f=e[a])&&(o[a]=f)}function b_(t,e,n,r,o,i,a){var f,u,s=new Map,c=e.length,h=i.length,l=new Array(c),p;for(f=0;f<c;++f)(u=e[f])&&(l[f]=p=a.call(u,u.__data__,f,e)+"",s.has(p)?o[f]=u:s.set(p,u));for(f=0;f<h;++f)p=a.call(t,i[f],f,i)+"",(u=s.get(p))?(r[f]=u,u.__data__=i[f],s.delete(p)):n[f]=new yi(t,i[f]);for(f=0;f<c;++f)(u=e[f])&&s.get(l[f])===u&&(o[f]=u)}function v_(t){return t.__data__}function s0(t,e){if(!arguments.length)return Array.from(this,v_);var n=e?b_:y_,r=this._parents,o=this._groups;typeof t!="function"&&(t=u0(t));for(var i=o.length,a=new Array(i),f=new Array(i),u=new Array(i),s=0;s<i;++s){var c=r[s],h=o[s],l=h.length,p=__(t.call(c,c&&c.__data__,s,r)),g=p.length,x=f[s]=new Array(g),d=a[s]=new Array(g),m=u[s]=new Array(l);n(c,h,x,d,m,p,e);for(var v=0,b=0,y,_;v<g;++v)if(y=x[v]){for(v>=b&&(b=v+1);!(_=d[b])&&++b<g;);y._next=_||null}}return a=new yt(a,r),a._enter=f,a._exit=u,a}function __(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function c0(){return new yt(this._exit||this._groups.map(La),this._parents)}function l0(t,e,n){var r=this.enter(),o=this,i=this.exit();return typeof t=="function"?(r=t(r),r&&(r=r.selection())):r=r.append(t+""),e!=null&&(o=e(o),o&&(o=o.selection())),n==null?i.remove():n(i),r&&o?r.merge(o).order():o}function h0(t){for(var e=t.selection?t.selection():t,n=this._groups,r=e._groups,o=n.length,i=r.length,a=Math.min(o,i),f=new Array(o),u=0;u<a;++u)for(var s=n[u],c=r[u],h=s.length,l=f[u]=new Array(h),p,g=0;g<h;++g)(p=s[g]||c[g])&&(l[g]=p);for(;u<o;++u)f[u]=n[u];return new yt(f,this._parents)}function p0(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r=t[e],o=r.length-1,i=r[o],a;--o>=0;)(a=r[o])&&(i&&a.compareDocumentPosition(i)^4&&i.parentNode.insertBefore(a,i),i=a);return this}function d0(t){t||(t=w_);function e(h,l){return h&&l?t(h.__data__,l.__data__):!h-!l}for(var n=this._groups,r=n.length,o=new Array(r),i=0;i<r;++i){for(var a=n[i],f=a.length,u=o[i]=new Array(f),s,c=0;c<f;++c)(s=a[c])&&(u[c]=s);u.sort(e)}return new yt(o,this._parents).order()}function w_(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function m0(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function g0(){return Array.from(this)}function x0(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],o=0,i=r.length;o<i;++o){var a=r[o];if(a)return a}return null}function y0(){let t=0;for(let e of this)++t;return t}function b0(){return!this.node()}function v0(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var o=e[n],i=0,a=o.length,f;i<a;++i)(f=o[i])&&t.call(f,f.__data__,i,o);return this}function M_(t){return function(){this.removeAttribute(t)}}function S_(t){return function(){this.removeAttributeNS(t.space,t.local)}}function T_(t,e){return function(){this.setAttribute(t,e)}}function A_(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function k_(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function E_(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function _0(t,e){var n=He(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((e==null?n.local?S_:M_:typeof e=="function"?n.local?E_:k_:n.local?A_:T_)(n,e))}function to(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function N_(t){return function(){this.style.removeProperty(t)}}function R_(t,e,n){return function(){this.style.setProperty(t,e,n)}}function C_(t,e,n){return function(){var r=e.apply(this,arguments);r==null?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function w0(t,e,n){return arguments.length>1?this.each((e==null?N_:typeof e=="function"?C_:R_)(t,e,n==null?"":n)):ln(this.node(),t)}function ln(t,e){return t.style.getPropertyValue(e)||to(t).getComputedStyle(t,null).getPropertyValue(e)}function I_(t){return function(){delete this[t]}}function P_(t,e){return function(){this[t]=e}}function D_(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function M0(t,e){return arguments.length>1?this.each((e==null?I_:typeof e=="function"?D_:P_)(t,e)):this.node()[t]}function S0(t){return t.trim().split(/^|\s+/)}function bc(t){return t.classList||new T0(t)}function T0(t){this._node=t,this._names=S0(t.getAttribute("class")||"")}T0.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function A0(t,e){for(var n=bc(t),r=-1,o=e.length;++r<o;)n.add(e[r])}function k0(t,e){for(var n=bc(t),r=-1,o=e.length;++r<o;)n.remove(e[r])}function q_(t){return function(){A0(this,t)}}function O_(t){return function(){k0(this,t)}}function F_(t,e){return function(){(e.apply(this,arguments)?A0:k0)(this,t)}}function E0(t,e){var n=S0(t+"");if(arguments.length<2){for(var r=bc(this.node()),o=-1,i=n.length;++o<i;)if(!r.contains(n[o]))return!1;return!0}return this.each((typeof e=="function"?F_:e?q_:O_)(n,e))}function z_(){this.textContent=""}function L_(t){return function(){this.textContent=t}}function Y_(t){return function(){var e=t.apply(this,arguments);this.textContent=e==null?"":e}}function N0(t){return arguments.length?this.each(t==null?z_:(typeof t=="function"?Y_:L_)(t)):this.node().textContent}function U_(){this.innerHTML=""}function B_(t){return function(){this.innerHTML=t}}function H_(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e==null?"":e}}function R0(t){return arguments.length?this.each(t==null?U_:(typeof t=="function"?H_:B_)(t)):this.node().innerHTML}function X_(){this.nextSibling&&this.parentNode.appendChild(this)}function C0(){return this.each(X_)}function W_(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function I0(){return this.each(W_)}function P0(t){var e=typeof t=="function"?t:In(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function $_(){return null}function D0(t,e){var n=typeof t=="function"?t:In(t),r=e==null?$_:typeof e=="function"?e:Pn(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function V_(){var t=this.parentNode;t&&t.removeChild(this)}function q0(){return this.each(V_)}function G_(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Z_(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function O0(t){return this.select(t?Z_:G_)}function F0(t){return arguments.length?this.property("__data__",t):this.node().__data__}function Q_(t){return function(e){t.call(this,e,this.__data__)}}function K_(t){return t.trim().split(/^|\s+/).map(function(e){var n="",r=e.indexOf(".");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{type:e,name:n}})}function J_(t){return function(){var e=this.__on;if(!!e){for(var n=0,r=-1,o=e.length,i;n<o;++n)i=e[n],(!t.type||i.type===t.type)&&i.name===t.name?this.removeEventListener(i.type,i.listener,i.options):e[++r]=i;++r?e.length=r:delete this.__on}}}function j_(t,e,n){return function(){var r=this.__on,o,i=Q_(e);if(r){for(var a=0,f=r.length;a<f;++a)if((o=r[a]).type===t.type&&o.name===t.name){this.removeEventListener(o.type,o.listener,o.options),this.addEventListener(o.type,o.listener=i,o.options=n),o.value=e;return}}this.addEventListener(t.type,i,n),o={type:t.type,name:t.name,value:e,listener:i,options:n},r?r.push(o):this.__on=[o]}}function z0(t,e,n){var r=K_(t+""),o,i=r.length,a;if(arguments.length<2){var f=this.node().__on;if(f){for(var u=0,s=f.length,c;u<s;++u)for(o=0,c=f[u];o<i;++o)if((a=r[o]).type===c.type&&a.name===c.name)return c.value}return}for(f=e?j_:J_,o=0;o<i;++o)this.each(f(r[o],e,n));return this}function L0(t,e,n){var r=to(t),o=r.CustomEvent;typeof o=="function"?o=new o(e,n):(o=r.document.createEvent("Event"),n?(o.initEvent(e,n.bubbles,n.cancelable),o.detail=n.detail):o.initEvent(e,!1,!1)),t.dispatchEvent(o)}function t3(t,e){return function(){return L0(this,t,e)}}function e3(t,e){return function(){return L0(this,t,e.apply(this,arguments))}}function Y0(t,e){return this.each((typeof e=="function"?e3:t3)(t,e))}function*U0(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],o=0,i=r.length,a;o<i;++o)(a=r[o])&&(yield a)}var bi=[null];function yt(t,e){this._groups=t,this._parents=e}function B0(){return new yt([[document.documentElement]],bi)}function n3(){return this}yt.prototype=B0.prototype={constructor:yt,select:n0,selectAll:r0,selectChild:o0,selectChildren:i0,filter:a0,data:s0,enter:f0,exit:c0,join:l0,merge:h0,selection:n3,order:p0,sort:d0,call:m0,nodes:g0,node:x0,size:y0,empty:b0,each:v0,attr:_0,style:w0,property:M0,classed:E0,text:N0,html:R0,raise:C0,lower:I0,append:P0,insert:D0,remove:q0,clone:O0,datum:F0,on:z0,dispatch:Y0,[Symbol.iterator]:U0};var Xe=B0;function Tt(t){return typeof t=="string"?new yt([[document.querySelector(t)]],[document.documentElement]):new yt([[t]],bi)}function H0(t){return Tt(In(t).call(document.documentElement))}var r3=0;function Ya(){return new vc}function vc(){this._="@"+(++r3).toString(36)}vc.prototype=Ya.prototype={constructor:vc,get:function(t){for(var e=this._;!(e in t);)if(!(t=t.parentNode))return;return t[e]},set:function(t,e){return t[this._]=e},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};function Ua(t){let e;for(;e=t.sourceEvent;)t=e;return t}function qt(t,e){if(t=Ua(t),e===void 0&&(e=t.currentTarget),e){var n=e.ownerSVGElement||e;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=t.clientX,r.y=t.clientY,r=r.matrixTransform(e.getScreenCTM().inverse()),[r.x,r.y]}if(e.getBoundingClientRect){var o=e.getBoundingClientRect();return[t.clientX-o.left-e.clientLeft,t.clientY-o.top-e.clientTop]}}return[t.pageX,t.pageY]}function X0(t,e){return t.target&&(t=Ua(t),e===void 0&&(e=t.currentTarget),t=t.touches||[t]),Array.from(t,n=>qt(n,e))}function W0(t){return typeof t=="string"?new yt([document.querySelectorAll(t)],[document.documentElement]):new yt([xi(t)],bi)}var $0={passive:!1},fr={capture:!0,passive:!1};function Ba(t){t.stopImmediatePropagation()}function Dn(t){t.preventDefault(),t.stopImmediatePropagation()}function qn(t){var e=t.document.documentElement,n=Tt(t).on("dragstart.drag",Dn,fr);"onselectstart"in e?n.on("selectstart.drag",Dn,fr):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")}function On(t,e){var n=t.document.documentElement,r=Tt(t).on("dragstart.drag",null);e&&(r.on("click.drag",Dn,fr),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}var vi=t=>()=>t;function _i(t,{sourceEvent:e,subject:n,target:r,identifier:o,active:i,x:a,y:f,dx:u,dy:s,dispatch:c}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},subject:{value:n,enumerable:!0,configurable:!0},target:{value:r,enumerable:!0,configurable:!0},identifier:{value:o,enumerable:!0,configurable:!0},active:{value:i,enumerable:!0,configurable:!0},x:{value:a,enumerable:!0,configurable:!0},y:{value:f,enumerable:!0,configurable:!0},dx:{value:u,enumerable:!0,configurable:!0},dy:{value:s,enumerable:!0,configurable:!0},_:{value:c}})}_i.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};function o3(t){return!t.ctrlKey&&!t.button}function i3(){return this.parentNode}function a3(t,e){return e==null?{x:t.x,y:t.y}:e}function f3(){return navigator.maxTouchPoints||"ontouchstart"in this}function V0(){var t=o3,e=i3,n=a3,r=f3,o={},i=pe("start","drag","end"),a=0,f,u,s,c,h=0;function l(y){y.on("mousedown.drag",p).filter(r).on("touchstart.drag",d).on("touchmove.drag",m,$0).on("touchend.drag touchcancel.drag",v).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(y,_){if(!(c||!t.call(this,y,_))){var w=b(this,e.call(this,y,_),y,_,"mouse");!w||(Tt(y.view).on("mousemove.drag",g,fr).on("mouseup.drag",x,fr),qn(y.view),Ba(y),s=!1,f=y.clientX,u=y.clientY,w("start",y))}}function g(y){if(Dn(y),!s){var _=y.clientX-f,w=y.clientY-u;s=_*_+w*w>h}o.mouse("drag",y)}function x(y){Tt(y.view).on("mousemove.drag mouseup.drag",null),On(y.view,s),Dn(y),o.mouse("end",y)}function d(y,_){if(!!t.call(this,y,_)){var w=y.changedTouches,E=e.call(this,y,_),N=w.length,P,T;for(P=0;P<N;++P)(T=b(this,E,y,_,w[P].identifier,w[P]))&&(Ba(y),T("start",y,w[P]))}}function m(y){var _=y.changedTouches,w=_.length,E,N;for(E=0;E<w;++E)(N=o[_[E].identifier])&&(Dn(y),N("drag",y,_[E]))}function v(y){var _=y.changedTouches,w=_.length,E,N;for(c&&clearTimeout(c),c=setTimeout(function(){c=null},500),E=0;E<w;++E)(N=o[_[E].identifier])&&(Ba(y),N("end",y,_[E]))}function b(y,_,w,E,N,P){var T=i.copy(),S=qt(P||w,_),C,R,M;if((M=n.call(y,new _i("beforestart",{sourceEvent:w,target:l,identifier:N,active:a,x:S[0],y:S[1],dx:0,dy:0,dispatch:T}),E))!=null)return C=M.x-S[0]||0,R=M.y-S[1]||0,function A(k,I,q){var O=S,Y;switch(k){case"start":o[N]=A,Y=a++;break;case"end":delete o[N],--a;case"drag":S=qt(q||I,_),Y=a;break}T.call(k,y,new _i(k,{sourceEvent:I,subject:M,target:l,identifier:N,active:Y,x:S[0]+C,y:S[1]+R,dx:S[0]-O[0],dy:S[1]-O[1],dispatch:T}),E)}}return l.filter=function(y){return arguments.length?(t=typeof y=="function"?y:vi(!!y),l):t},l.container=function(y){return arguments.length?(e=typeof y=="function"?y:vi(y),l):e},l.subject=function(y){return arguments.length?(n=typeof y=="function"?y:vi(y),l):n},l.touchable=function(y){return arguments.length?(r=typeof y=="function"?y:vi(!!y),l):r},l.on=function(){var y=i.on.apply(i,arguments);return y===i?l:y},l.clickDistance=function(y){return arguments.length?(h=(y=+y)*y,l):Math.sqrt(h)},l}function hn(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function Fn(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function $e(){}var zn=.7,cr=1/zn,eo="\\s*([+-]?\\d+)\\s*",wi="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",We="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",u3=/^#([0-9a-f]{3,8})$/,s3=new RegExp(`^rgb\\(${eo},${eo},${eo}\\)$`),c3=new RegExp(`^rgb\\(${We},${We},${We}\\)$`),l3=new RegExp(`^rgba\\(${eo},${eo},${eo},${wi}\\)$`),h3=new RegExp(`^rgba\\(${We},${We},${We},${wi}\\)$`),p3=new RegExp(`^hsl\\(${wi},${We},${We}\\)$`),d3=new RegExp(`^hsla\\(${wi},${We},${We},${wi}\\)$`),G0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};hn($e,de,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Z0,formatHex:Z0,formatHex8:m3,formatHsl:g3,formatRgb:Q0,toString:Q0});function Z0(){return this.rgb().formatHex()}function m3(){return this.rgb().formatHex8()}function g3(){return nd(this).formatHsl()}function Q0(){return this.rgb().formatRgb()}function de(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=u3.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?K0(e):n===3?new Ct(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Ha(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Ha(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=s3.exec(t))?new Ct(e[1],e[2],e[3],1):(e=c3.exec(t))?new Ct(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=l3.exec(t))?Ha(e[1],e[2],e[3],e[4]):(e=h3.exec(t))?Ha(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=p3.exec(t))?td(e[1],e[2]/100,e[3]/100,1):(e=d3.exec(t))?td(e[1],e[2]/100,e[3]/100,e[4]):G0.hasOwnProperty(t)?K0(G0[t]):t==="transparent"?new Ct(NaN,NaN,NaN,0):null}function K0(t){return new Ct(t>>16&255,t>>8&255,t&255,1)}function Ha(t,e,n,r){return r<=0&&(t=e=n=NaN),new Ct(t,e,n,r)}function Mi(t){return t instanceof $e||(t=de(t)),t?(t=t.rgb(),new Ct(t.r,t.g,t.b,t.opacity)):new Ct}function pn(t,e,n,r){return arguments.length===1?Mi(t):new Ct(t,e,n,r==null?1:r)}function Ct(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}hn(Ct,pn,Fn($e,{brighter(t){return t=t==null?cr:Math.pow(cr,t),new Ct(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?zn:Math.pow(zn,t),new Ct(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new Ct(sr(this.r),sr(this.g),sr(this.b),Wa(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:J0,formatHex:J0,formatHex8:x3,formatRgb:j0,toString:j0}));function J0(){return`#${ur(this.r)}${ur(this.g)}${ur(this.b)}`}function x3(){return`#${ur(this.r)}${ur(this.g)}${ur(this.b)}${ur((isNaN(this.opacity)?1:this.opacity)*255)}`}function j0(){let t=Wa(this.opacity);return`${t===1?"rgb(":"rgba("}${sr(this.r)}, ${sr(this.g)}, ${sr(this.b)}${t===1?")":`, ${t})`}`}function Wa(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function sr(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function ur(t){return t=sr(t),(t<16?"0":"")+t.toString(16)}function td(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new Ne(t,e,n,r)}function nd(t){if(t instanceof Ne)return new Ne(t.h,t.s,t.l,t.opacity);if(t instanceof $e||(t=de(t)),!t)return new Ne;if(t instanceof Ne)return t;t=t.rgb();var e=t.r/255,n=t.g/255,r=t.b/255,o=Math.min(e,n,r),i=Math.max(e,n,r),a=NaN,f=i-o,u=(i+o)/2;return f?(e===i?a=(n-r)/f+(n<r)*6:n===i?a=(r-e)/f+2:a=(e-n)/f+4,f/=u<.5?i+o:2-i-o,a*=60):f=u>0&&u<1?0:a,new Ne(a,f,u,t.opacity)}function no(t,e,n,r){return arguments.length===1?nd(t):new Ne(t,e,n,r==null?1:r)}function Ne(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}hn(Ne,no,Fn($e,{brighter(t){return t=t==null?cr:Math.pow(cr,t),new Ne(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?zn:Math.pow(zn,t),new Ne(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,o=2*n-r;return new Ct(_c(t>=240?t-240:t+120,o,r),_c(t,o,r),_c(t<120?t+240:t-120,o,r),this.opacity)},clamp(){return new Ne(ed(this.h),Xa(this.s),Xa(this.l),Wa(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let t=Wa(this.opacity);return`${t===1?"hsl(":"hsla("}${ed(this.h)}, ${Xa(this.s)*100}%, ${Xa(this.l)*100}%${t===1?")":`, ${t})`}`}}));function ed(t){return t=(t||0)%360,t<0?t+360:t}function Xa(t){return Math.max(0,Math.min(1,t||0))}function _c(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}var $a=Math.PI/180,Va=180/Math.PI;var Ga=18,rd=.96422,od=1,id=.82521,ad=4/29,ro=6/29,fd=3*ro*ro,y3=ro*ro*ro;function ud(t){if(t instanceof Re)return new Re(t.l,t.a,t.b,t.opacity);if(t instanceof Ve)return hd(t);t instanceof Ct||(t=Mi(t));var e=Tc(t.r),n=Tc(t.g),r=Tc(t.b),o=wc((.2225045*e+.7168786*n+.0606169*r)/od),i,a;return e===n&&n===r?i=a=o:(i=wc((.4360747*e+.3850649*n+.1430804*r)/rd),a=wc((.0139322*e+.0971045*n+.7141733*r)/id)),new Re(116*o-16,500*(i-o),200*(o-a),t.opacity)}function sd(t,e){return new Re(t,0,0,e==null?1:e)}function lr(t,e,n,r){return arguments.length===1?ud(t):new Re(t,e,n,r==null?1:r)}function Re(t,e,n,r){this.l=+t,this.a=+e,this.b=+n,this.opacity=+r}hn(Re,lr,Fn($e,{brighter(t){return new Re(this.l+Ga*(t==null?1:t),this.a,this.b,this.opacity)},darker(t){return new Re(this.l-Ga*(t==null?1:t),this.a,this.b,this.opacity)},rgb(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return e=rd*Mc(e),t=od*Mc(t),n=id*Mc(n),new Ct(Sc(3.1338561*e-1.6168667*t-.4906146*n),Sc(-.9787684*e+1.9161415*t+.033454*n),Sc(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}}));function wc(t){return t>y3?Math.pow(t,1/3):t/fd+ad}function Mc(t){return t>ro?t*t*t:fd*(t-ad)}function Sc(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Tc(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function cd(t){if(t instanceof Ve)return new Ve(t.h,t.c,t.l,t.opacity);if(t instanceof Re||(t=ud(t)),t.a===0&&t.b===0)return new Ve(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*Va;return new Ve(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ld(t,e,n,r){return arguments.length===1?cd(t):new Ve(n,e,t,r==null?1:r)}function oo(t,e,n,r){return arguments.length===1?cd(t):new Ve(t,e,n,r==null?1:r)}function Ve(t,e,n,r){this.h=+t,this.c=+e,this.l=+n,this.opacity=+r}function hd(t){if(isNaN(t.h))return new Re(t.l,0,0,t.opacity);var e=t.h*$a;return new Re(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}hn(Ve,oo,Fn($e,{brighter(t){return new Ve(this.h,this.c,this.l+Ga*(t==null?1:t),this.opacity)},darker(t){return new Ve(this.h,this.c,this.l-Ga*(t==null?1:t),this.opacity)},rgb(){return hd(this).rgb()}}));var gd=-.14861,Ac=1.78277,kc=-.29227,Za=-.90649,Si=1.97294,pd=Si*Za,dd=Si*Ac,md=Ac*kc-Za*gd;function b3(t){if(t instanceof hr)return new hr(t.h,t.s,t.l,t.opacity);t instanceof Ct||(t=Mi(t));var e=t.r/255,n=t.g/255,r=t.b/255,o=(md*r+pd*e-dd*n)/(md+pd-dd),i=r-o,a=(Si*(n-o)-kc*i)/Za,f=Math.sqrt(a*a+i*i)/(Si*o*(1-o)),u=f?Math.atan2(a,i)*Va-120:NaN;return new hr(u<0?u+360:u,f,o,t.opacity)}function Xt(t,e,n,r){return arguments.length===1?b3(t):new hr(t,e,n,r==null?1:r)}function hr(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}hn(hr,Xt,Fn($e,{brighter(t){return t=t==null?cr:Math.pow(cr,t),new hr(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?zn:Math.pow(zn,t),new hr(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=isNaN(this.h)?0:(this.h+120)*$a,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),r=Math.cos(t),o=Math.sin(t);return new Ct(255*(e+n*(gd*r+Ac*o)),255*(e+n*(kc*r+Za*o)),255*(e+n*(Si*r)),this.opacity)}}));function Ec(t,e,n,r,o){var i=t*t,a=i*t;return((1-3*t+3*i-a)*e+(4-6*i+3*a)*n+(1+3*t+3*i-3*a)*r+a*o)/6}function Qa(t){var e=t.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),o=t[r],i=t[r+1],a=r>0?t[r-1]:2*o-i,f=r<e-1?t[r+2]:2*i-o;return Ec((n-r/e)*e,a,o,i,f)}}function Ka(t){var e=t.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*e),o=t[(r+e-1)%e],i=t[r%e],a=t[(r+1)%e],f=t[(r+2)%e];return Ec((n-r/e)*e,o,i,a,f)}}var io=t=>()=>t;function xd(t,e){return function(n){return t+n*e}}function v3(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}function Ln(t,e){var n=e-t;return n?xd(t,n>180||n<-180?n-360*Math.round(n/360):n):io(isNaN(t)?e:t)}function yd(t){return(t=+t)==1?vt:function(e,n){return n-e?v3(e,n,t):io(isNaN(e)?n:e)}}function vt(t,e){var n=e-t;return n?xd(t,n):io(isNaN(t)?e:t)}var Yn=function t(e){var n=yd(e);function r(o,i){var a=n((o=pn(o)).r,(i=pn(i)).r),f=n(o.g,i.g),u=n(o.b,i.b),s=vt(o.opacity,i.opacity);return function(c){return o.r=a(c),o.g=f(c),o.b=u(c),o.opacity=s(c),o+""}}return r.gamma=t,r}(1);function bd(t){return function(e){var n=e.length,r=new Array(n),o=new Array(n),i=new Array(n),a,f;for(a=0;a<n;++a)f=pn(e[a]),r[a]=f.r||0,o[a]=f.g||0,i[a]=f.b||0;return r=t(r),o=t(o),i=t(i),f.opacity=1,function(u){return f.r=r(u),f.g=o(u),f.b=i(u),f+""}}}var Ja=bd(Qa),vd=bd(Ka);function ao(t,e){e||(e=[]);var n=t?Math.min(e.length,t.length):0,r=e.slice(),o;return function(i){for(o=0;o<n;++o)r[o]=t[o]*(1-i)+e[o]*i;return r}}function ja(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function _d(t,e){return(ja(e)?ao:Nc)(t,e)}function Nc(t,e){var n=e?e.length:0,r=t?Math.min(n,t.length):0,o=new Array(r),i=new Array(n),a;for(a=0;a<r;++a)o[a]=Wt(t[a],e[a]);for(;a<n;++a)i[a]=e[a];return function(f){for(a=0;a<r;++a)i[a]=o[a](f);return i}}function tf(t,e){var n=new Date;return t=+t,e=+e,function(r){return n.setTime(t*(1-r)+e*r),n}}function Ot(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}function ef(t,e){var n={},r={},o;(t===null||typeof t!="object")&&(t={}),(e===null||typeof e!="object")&&(e={});for(o in e)o in t?n[o]=Wt(t[o],e[o]):r[o]=e[o];return function(i){for(o in n)r[o]=n[o](i);return r}}var Cc=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Rc=new RegExp(Cc.source,"g");function _3(t){return function(){return t}}function w3(t){return function(e){return t(e)+""}}function fo(t,e){var n=Cc.lastIndex=Rc.lastIndex=0,r,o,i,a=-1,f=[],u=[];for(t=t+"",e=e+"";(r=Cc.exec(t))&&(o=Rc.exec(e));)(i=o.index)>n&&(i=e.slice(n,i),f[a]?f[a]+=i:f[++a]=i),(r=r[0])===(o=o[0])?f[a]?f[a]+=o:f[++a]=o:(f[++a]=null,u.push({i:a,x:Ot(r,o)})),n=Rc.lastIndex;return n<e.length&&(i=e.slice(n),f[a]?f[a]+=i:f[++a]=i),f.length<2?u[0]?w3(u[0].x):_3(e):(e=u.length,function(s){for(var c=0,h;c<e;++c)f[(h=u[c]).i]=h.x(s);return f.join("")})}function Wt(t,e){var n=typeof e,r;return e==null||n==="boolean"?io(e):(n==="number"?Ot:n==="string"?(r=de(e))?(e=r,Yn):fo:e instanceof de?Yn:e instanceof Date?tf:ja(e)?ao:Array.isArray(e)?Nc:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?ef:Ot)(t,e)}function wd(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}function Md(t,e){var n=Ln(+t,+e);return function(r){var o=n(r);return o-360*Math.floor(o/360)}}function Un(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}}var Sd=180/Math.PI,nf={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Ic(t,e,n,r,o,i){var a,f,u;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(u=t*n+e*r)&&(n-=t*u,r-=e*u),(f=Math.sqrt(n*n+r*r))&&(n/=f,r/=f,u/=f),t*r<e*n&&(t=-t,e=-e,u=-u,a=-a),{translateX:o,translateY:i,rotate:Math.atan2(e,t)*Sd,skewX:Math.atan(u)*Sd,scaleX:a,scaleY:f}}var rf;function Td(t){let e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?nf:Ic(e.a,e.b,e.c,e.d,e.e,e.f)}function Ad(t){return t==null?nf:(rf||(rf=document.createElementNS("http://www.w3.org/2000/svg","g")),rf.setAttribute("transform",t),(t=rf.transform.baseVal.consolidate())?(t=t.matrix,Ic(t.a,t.b,t.c,t.d,t.e,t.f)):nf)}function kd(t,e,n,r){function o(s){return s.length?s.pop()+" ":""}function i(s,c,h,l,p,g){if(s!==h||c!==l){var x=p.push("translate(",null,e,null,n);g.push({i:x-4,x:Ot(s,h)},{i:x-2,x:Ot(c,l)})}else(h||l)&&p.push("translate("+h+e+l+n)}function a(s,c,h,l){s!==c?(s-c>180?c+=360:c-s>180&&(s+=360),l.push({i:h.push(o(h)+"rotate(",null,r)-2,x:Ot(s,c)})):c&&h.push(o(h)+"rotate("+c+r)}function f(s,c,h,l){s!==c?l.push({i:h.push(o(h)+"skewX(",null,r)-2,x:Ot(s,c)}):c&&h.push(o(h)+"skewX("+c+r)}function u(s,c,h,l,p,g){if(s!==h||c!==l){var x=p.push(o(p)+"scale(",null,",",null,")");g.push({i:x-4,x:Ot(s,h)},{i:x-2,x:Ot(c,l)})}else(h!==1||l!==1)&&p.push(o(p)+"scale("+h+","+l+")")}return function(s,c){var h=[],l=[];return s=t(s),c=t(c),i(s.translateX,s.translateY,c.translateX,c.translateY,h,l),a(s.rotate,c.rotate,h,l),f(s.skewX,c.skewX,h,l),u(s.scaleX,s.scaleY,c.scaleX,c.scaleY,h,l),s=c=null,function(p){for(var g=-1,x=l.length,d;++g<x;)h[(d=l[g]).i]=d.x(p);return h.join("")}}}var of=kd(Td,"px, ","px)","deg)"),af=kd(Ad,", ",")",")");var M3=1e-12;function Ed(t){return((t=Math.exp(t))+1/t)/2}function S3(t){return((t=Math.exp(t))-1/t)/2}function T3(t){return((t=Math.exp(2*t))-1)/(t+1)}var ff=function t(e,n,r){function o(i,a){var f=i[0],u=i[1],s=i[2],c=a[0],h=a[1],l=a[2],p=c-f,g=h-u,x=p*p+g*g,d,m;if(x<M3)m=Math.log(l/s)/e,d=function(E){return[f+E*p,u+E*g,s*Math.exp(e*E*m)]};else{var v=Math.sqrt(x),b=(l*l-s*s+r*x)/(2*s*n*v),y=(l*l-s*s-r*x)/(2*l*n*v),_=Math.log(Math.sqrt(b*b+1)-b),w=Math.log(Math.sqrt(y*y+1)-y);m=(w-_)/e,d=function(E){var N=E*m,P=Ed(_),T=s/(n*v)*(P*T3(e*N+_)-S3(_));return[f+T*p,u+T*g,s*P/Ed(e*N+_)]}}return d.duration=m*1e3*e/Math.SQRT2,d}return o.rho=function(i){var a=Math.max(.001,+i),f=a*a,u=f*f;return t(a,f,u)},o}(Math.SQRT2,2,4);function Nd(t){return function(e,n){var r=t((e=no(e)).h,(n=no(n)).h),o=vt(e.s,n.s),i=vt(e.l,n.l),a=vt(e.opacity,n.opacity);return function(f){return e.h=r(f),e.s=o(f),e.l=i(f),e.opacity=a(f),e+""}}}var Rd=Nd(Ln),Cd=Nd(vt);function Pc(t,e){var n=vt((t=lr(t)).l,(e=lr(e)).l),r=vt(t.a,e.a),o=vt(t.b,e.b),i=vt(t.opacity,e.opacity);return function(a){return t.l=n(a),t.a=r(a),t.b=o(a),t.opacity=i(a),t+""}}function Id(t){return function(e,n){var r=t((e=oo(e)).h,(n=oo(n)).h),o=vt(e.c,n.c),i=vt(e.l,n.l),a=vt(e.opacity,n.opacity);return function(f){return e.h=r(f),e.c=o(f),e.l=i(f),e.opacity=a(f),e+""}}}var Pd=Id(Ln),Dd=Id(vt);function qd(t){return function e(n){n=+n;function r(o,i){var a=t((o=Xt(o)).h,(i=Xt(i)).h),f=vt(o.s,i.s),u=vt(o.l,i.l),s=vt(o.opacity,i.opacity);return function(c){return o.h=a(c),o.s=f(c),o.l=u(Math.pow(c,n)),o.opacity=s(c),o+""}}return r.gamma=e,r}(1)}var Od=qd(Ln),pr=qd(vt);function Ti(t,e){e===void 0&&(e=t,t=Wt);for(var n=0,r=e.length-1,o=e[0],i=new Array(r<0?0:r);n<r;)i[n]=t(o,o=e[++n]);return function(a){var f=Math.max(0,Math.min(r-1,Math.floor(a*=r)));return i[f](a-f)}}function Fd(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t(r/(e-1));return n}var uo=0,ki=0,Ai=0,Ld=1e3,uf,Ei,sf=0,dr=0,cf=0,Ni=typeof performance=="object"&&performance.now?performance:Date,Yd=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Bn(){return dr||(Yd(A3),dr=Ni.now()+cf)}function A3(){dr=0}function mr(){this._call=this._time=this._next=null}mr.prototype=gr.prototype={constructor:mr,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?Bn():+n)+(e==null?0:+e),!this._next&&Ei!==this&&(Ei?Ei._next=this:uf=this,Ei=this),this._call=t,this._time=n,Dc()},stop:function(){this._call&&(this._call=null,this._time=1/0,Dc())}};function gr(t,e,n){var r=new mr;return r.restart(t,e,n),r}function qc(){Bn(),++uo;for(var t=uf,e;t;)(e=dr-t._time)>=0&&t._call.call(void 0,e),t=t._next;--uo}function zd(){dr=(sf=Ni.now())+cf,uo=ki=0;try{qc()}finally{uo=0,E3(),dr=0}}function k3(){var t=Ni.now(),e=t-sf;e>Ld&&(cf-=e,sf=t)}function E3(){for(var t,e=uf,n,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:uf=n);Ei=t,Dc(r)}function Dc(t){if(!uo){ki&&(ki=clearTimeout(ki));var e=t-dr;e>24?(t<1/0&&(ki=setTimeout(zd,t-Ni.now()-cf)),Ai&&(Ai=clearInterval(Ai))):(Ai||(sf=Ni.now(),Ai=setInterval(k3,Ld)),uo=1,Yd(zd))}}function Ri(t,e,n){var r=new mr;return e=e==null?0:+e,r.restart(o=>{r.stop(),t(o+e)},e,n),r}function Ud(t,e,n){var r=new mr,o=e;return e==null?(r.restart(t,e,n),r):(r._restart=r.restart,r.restart=function(i,a,f){a=+a,f=f==null?Bn():+f,r._restart(function u(s){s+=o,r._restart(u,o+=a,f),i(s)},a,f)},r.restart(t,e,n),r)}var N3=pe("start","end","cancel","interrupt"),R3=[],Hd=0,hf=1,pf=2,lf=3,Bd=4,df=5,Ci=6;function Hn(t,e,n,r,o,i){var a=t.__transition;if(!a)t.__transition={};else if(n in a)return;C3(t,n,{name:e,index:r,group:o,on:N3,tween:R3,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:Hd})}function Ii(t,e){var n=Pt(t,e);if(n.state>Hd)throw new Error("too late; already scheduled");return n}function Ut(t,e){var n=Pt(t,e);if(n.state>lf)throw new Error("too late; already running");return n}function Pt(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function C3(t,e,n){var r=t.__transition,o;r[e]=n,n.timer=gr(i,0,n.time);function i(s){n.state=hf,n.timer.restart(a,n.delay,n.time),n.delay<=s&&a(s-n.delay)}function a(s){var c,h,l,p;if(n.state!==hf)return u();for(c in r)if(p=r[c],p.name===n.name){if(p.state===lf)return Ri(a);p.state===Bd?(p.state=Ci,p.timer.stop(),p.on.call("interrupt",t,t.__data__,p.index,p.group),delete r[c]):+c<e&&(p.state=Ci,p.timer.stop(),p.on.call("cancel",t,t.__data__,p.index,p.group),delete r[c])}if(Ri(function(){n.state===lf&&(n.state=Bd,n.timer.restart(f,n.delay,n.time),f(s))}),n.state=pf,n.on.call("start",t,t.__data__,n.index,n.group),n.state===pf){for(n.state=lf,o=new Array(l=n.tween.length),c=0,h=-1;c<l;++c)(p=n.tween[c].value.call(t,t.__data__,n.index,n.group))&&(o[++h]=p);o.length=h+1}}function f(s){for(var c=s<n.duration?n.ease.call(null,s/n.duration):(n.timer.restart(u),n.state=df,1),h=-1,l=o.length;++h<l;)o[h].call(t,c);n.state===df&&(n.on.call("end",t,t.__data__,n.index,n.group),u())}function u(){n.state=Ci,n.timer.stop(),delete r[e];for(var s in r)return;delete t.__transition}}function Ce(t,e){var n=t.__transition,r,o,i=!0,a;if(!!n){e=e==null?null:e+"";for(a in n){if((r=n[a]).name!==e){i=!1;continue}o=r.state>pf&&r.state<df,r.state=Ci,r.timer.stop(),r.on.call(o?"interrupt":"cancel",t,t.__data__,r.index,r.group),delete n[a]}i&&delete t.__transition}}function Xd(t){return this.each(function(){Ce(this,t)})}function I3(t,e){var n,r;return function(){var o=Ut(this,t),i=o.tween;if(i!==n){r=n=i;for(var a=0,f=r.length;a<f;++a)if(r[a].name===e){r=r.slice(),r.splice(a,1);break}}o.tween=r}}function P3(t,e,n){var r,o;if(typeof n!="function")throw new Error;return function(){var i=Ut(this,t),a=i.tween;if(a!==r){o=(r=a).slice();for(var f={name:e,value:n},u=0,s=o.length;u<s;++u)if(o[u].name===e){o[u]=f;break}u===s&&o.push(f)}i.tween=o}}function Wd(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r=Pt(this.node(),n).tween,o=0,i=r.length,a;o<i;++o)if((a=r[o]).name===t)return a.value;return null}return this.each((e==null?I3:P3)(n,t,e))}function so(t,e,n){var r=t._id;return t.each(function(){var o=Ut(this,r);(o.value||(o.value={}))[e]=n.apply(this,arguments)}),function(o){return Pt(o,r).value[e]}}function mf(t,e){var n;return(typeof e=="number"?Ot:e instanceof de?Yn:(n=de(e))?(e=n,Yn):fo)(t,e)}function D3(t){return function(){this.removeAttribute(t)}}function q3(t){return function(){this.removeAttributeNS(t.space,t.local)}}function O3(t,e,n){var r,o=n+"",i;return function(){var a=this.getAttribute(t);return a===o?null:a===r?i:i=e(r=a,n)}}function F3(t,e,n){var r,o=n+"",i;return function(){var a=this.getAttributeNS(t.space,t.local);return a===o?null:a===r?i:i=e(r=a,n)}}function z3(t,e,n){var r,o,i;return function(){var a,f=n(this),u;return f==null?void this.removeAttribute(t):(a=this.getAttribute(t),u=f+"",a===u?null:a===r&&u===o?i:(o=u,i=e(r=a,f)))}}function L3(t,e,n){var r,o,i;return function(){var a,f=n(this),u;return f==null?void this.removeAttributeNS(t.space,t.local):(a=this.getAttributeNS(t.space,t.local),u=f+"",a===u?null:a===r&&u===o?i:(o=u,i=e(r=a,f)))}}function $d(t,e){var n=He(t),r=n==="transform"?af:mf;return this.attrTween(t,typeof e=="function"?(n.local?L3:z3)(n,r,so(this,"attr."+t,e)):e==null?(n.local?q3:D3)(n):(n.local?F3:O3)(n,r,e))}function Y3(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function U3(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function B3(t,e){var n,r;function o(){var i=e.apply(this,arguments);return i!==r&&(n=(r=i)&&U3(t,i)),n}return o._value=e,o}function H3(t,e){var n,r;function o(){var i=e.apply(this,arguments);return i!==r&&(n=(r=i)&&Y3(t,i)),n}return o._value=e,o}function Vd(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var r=He(t);return this.tween(n,(r.local?B3:H3)(r,e))}function X3(t,e){return function(){Ii(this,t).delay=+e.apply(this,arguments)}}function W3(t,e){return e=+e,function(){Ii(this,t).delay=e}}function Gd(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?X3:W3)(e,t)):Pt(this.node(),e).delay}function $3(t,e){return function(){Ut(this,t).duration=+e.apply(this,arguments)}}function V3(t,e){return e=+e,function(){Ut(this,t).duration=e}}function Zd(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?$3:V3)(e,t)):Pt(this.node(),e).duration}function G3(t,e){if(typeof e!="function")throw new Error;return function(){Ut(this,t).ease=e}}function Qd(t){var e=this._id;return arguments.length?this.each(G3(e,t)):Pt(this.node(),e).ease}function Z3(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;Ut(this,t).ease=n}}function Kd(t){if(typeof t!="function")throw new Error;return this.each(Z3(this._id,t))}function Jd(t){typeof t!="function"&&(t=jr(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i=e[o],a=i.length,f=r[o]=[],u,s=0;s<a;++s)(u=i[s])&&t.call(u,u.__data__,s,i)&&f.push(u);return new Bt(r,this._parents,this._name,this._id)}function jd(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,o=n.length,i=Math.min(r,o),a=new Array(r),f=0;f<i;++f)for(var u=e[f],s=n[f],c=u.length,h=a[f]=new Array(c),l,p=0;p<c;++p)(l=u[p]||s[p])&&(h[p]=l);for(;f<r;++f)a[f]=e[f];return new Bt(a,this._parents,this._name,this._id)}function Q3(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function K3(t,e,n){var r,o,i=Q3(e)?Ii:Ut;return function(){var a=i(this,t),f=a.on;f!==r&&(o=(r=f).copy()).on(e,n),a.on=o}}function tm(t,e){var n=this._id;return arguments.length<2?Pt(this.node(),n).on.on(t):this.each(K3(n,t,e))}function J3(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function em(){return this.on("end.remove",J3(this._id))}function nm(t){var e=this._name,n=this._id;typeof t!="function"&&(t=Pn(t));for(var r=this._groups,o=r.length,i=new Array(o),a=0;a<o;++a)for(var f=r[a],u=f.length,s=i[a]=new Array(u),c,h,l=0;l<u;++l)(c=f[l])&&(h=t.call(c,c.__data__,l,f))&&("__data__"in c&&(h.__data__=c.__data__),s[l]=h,Hn(s[l],e,n,l,s,Pt(c,n)));return new Bt(i,this._parents,e,n)}function rm(t){var e=this._name,n=this._id;typeof t!="function"&&(t=Jr(t));for(var r=this._groups,o=r.length,i=[],a=[],f=0;f<o;++f)for(var u=r[f],s=u.length,c,h=0;h<s;++h)if(c=u[h]){for(var l=t.call(c,c.__data__,h,u),p,g=Pt(c,n),x=0,d=l.length;x<d;++x)(p=l[x])&&Hn(p,e,n,x,l,g);i.push(l),a.push(c)}return new Bt(i,a,e,n)}var j3=Xe.prototype.constructor;function om(){return new j3(this._groups,this._parents)}function tw(t,e){var n,r,o;return function(){var i=ln(this,t),a=(this.style.removeProperty(t),ln(this,t));return i===a?null:i===n&&a===r?o:o=e(n=i,r=a)}}function im(t){return function(){this.style.removeProperty(t)}}function ew(t,e,n){var r,o=n+"",i;return function(){var a=ln(this,t);return a===o?null:a===r?i:i=e(r=a,n)}}function nw(t,e,n){var r,o,i;return function(){var a=ln(this,t),f=n(this),u=f+"";return f==null&&(u=f=(this.style.removeProperty(t),ln(this,t))),a===u?null:a===r&&u===o?i:(o=u,i=e(r=a,f))}}function rw(t,e){var n,r,o,i="style."+e,a="end."+i,f;return function(){var u=Ut(this,t),s=u.on,c=u.value[i]==null?f||(f=im(e)):void 0;(s!==n||o!==c)&&(r=(n=s).copy()).on(a,o=c),u.on=r}}function am(t,e,n){var r=(t+="")=="transform"?of:mf;return e==null?this.styleTween(t,tw(t,r)).on("end.style."+t,im(t)):typeof e=="function"?this.styleTween(t,nw(t,r,so(this,"style."+t,e))).each(rw(this._id,t)):this.styleTween(t,ew(t,r,e),n).on("end.style."+t,null)}function ow(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function iw(t,e,n){var r,o;function i(){var a=e.apply(this,arguments);return a!==o&&(r=(o=a)&&ow(t,a,n)),r}return i._value=e,i}function fm(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,iw(t,e,n==null?"":n))}function aw(t){return function(){this.textContent=t}}function fw(t){return function(){var e=t(this);this.textContent=e==null?"":e}}function um(t){return this.tween("text",typeof t=="function"?fw(so(this,"text",t)):aw(t==null?"":t+""))}function uw(t){return function(e){this.textContent=t.call(this,e)}}function sw(t){var e,n;function r(){var o=t.apply(this,arguments);return o!==n&&(e=(n=o)&&uw(o)),e}return r._value=t,r}function sm(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,sw(t))}function cm(){for(var t=this._name,e=this._id,n=gf(),r=this._groups,o=r.length,i=0;i<o;++i)for(var a=r[i],f=a.length,u,s=0;s<f;++s)if(u=a[s]){var c=Pt(u,e);Hn(u,t,n,s,a,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new Bt(r,this._parents,t,n)}function lm(){var t,e,n=this,r=n._id,o=n.size();return new Promise(function(i,a){var f={value:a},u={value:function(){--o===0&&i()}};n.each(function(){var s=Ut(this,r),c=s.on;c!==t&&(e=(t=c).copy(),e._.cancel.push(f),e._.interrupt.push(f),e._.end.push(u)),s.on=e}),o===0&&i()})}var cw=0;function Bt(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function xf(t){return Xe().transition(t)}function gf(){return++cw}var dn=Xe.prototype;Bt.prototype=xf.prototype={constructor:Bt,select:nm,selectAll:rm,selectChild:dn.selectChild,selectChildren:dn.selectChildren,filter:Jd,merge:jd,selection:om,transition:cm,call:dn.call,nodes:dn.nodes,node:dn.node,size:dn.size,empty:dn.empty,each:dn.each,on:tm,attr:$d,attrTween:Vd,style:am,styleTween:fm,text:um,textTween:sm,remove:em,tween:Wd,delay:Gd,duration:Zd,ease:Qd,easeVarying:Kd,end:lm,[Symbol.iterator]:dn[Symbol.iterator]};var hm=t=>+t;function pm(t){return t*t}function dm(t){return t*(2-t)}function Oc(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function mm(t){return t*t*t}function gm(t){return--t*t*t+1}function Pi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Fc=3,xm=function t(e){e=+e;function n(r){return Math.pow(r,e)}return n.exponent=t,n}(Fc),ym=function t(e){e=+e;function n(r){return 1-Math.pow(1-r,e)}return n.exponent=t,n}(Fc),zc=function t(e){e=+e;function n(r){return((r*=2)<=1?Math.pow(r,e):2-Math.pow(2-r,e))/2}return n.exponent=t,n}(Fc);var bm=Math.PI,vm=bm/2;function _m(t){return+t==1?1:1-Math.cos(t*vm)}function wm(t){return Math.sin(t*vm)}function Lc(t){return(1-Math.cos(bm*t))/2}function Ge(t){return(Math.pow(2,-10*t)-.0009765625)*1.0009775171065494}function Mm(t){return Ge(1-+t)}function Sm(t){return 1-Ge(t)}function Yc(t){return((t*=2)<=1?Ge(1-t):2-Ge(t-1))/2}function Tm(t){return 1-Math.sqrt(1-t*t)}function Am(t){return Math.sqrt(1- --t*t)}function Uc(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Bc=.36363636363636365,lw=6/11,hw=8/11,pw=3/4,dw=9/11,mw=10/11,gw=15/16,xw=21/22,yw=63/64,yf=1/Bc/Bc;function km(t){return 1-co(1-t)}function co(t){return(t=+t)<Bc?yf*t*t:t<hw?yf*(t-=lw)*t+pw:t<mw?yf*(t-=dw)*t+gw:yf*(t-=xw)*t+yw}function Em(t){return((t*=2)<=1?1-co(1-t):co(t-1)+1)/2}var Hc=1.70158,Nm=function t(e){e=+e;function n(r){return(r=+r)*r*(e*(r-1)+r)}return n.overshoot=t,n}(Hc),Rm=function t(e){e=+e;function n(r){return--r*r*((r+1)*e+r)+1}return n.overshoot=t,n}(Hc),Xc=function t(e){e=+e;function n(r){return((r*=2)<1?r*r*((e+1)*r-e):(r-=2)*r*((e+1)*r+e)+2)/2}return n.overshoot=t,n}(Hc);var lo=2*Math.PI,Wc=1,$c=.3,Cm=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=lo);function o(i){return e*Ge(- --i)*Math.sin((r-i)/n)}return o.amplitude=function(i){return t(i,n*lo)},o.period=function(i){return t(e,i)},o}(Wc,$c),Vc=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=lo);function o(i){return 1-e*Ge(i=+i)*Math.sin((i+r)/n)}return o.amplitude=function(i){return t(i,n*lo)},o.period=function(i){return t(e,i)},o}(Wc,$c),Im=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=lo);function o(i){return((i=i*2-1)<0?e*Ge(-i)*Math.sin((r-i)/n):2-e*Ge(i)*Math.sin((r+i)/n))/2}return o.amplitude=function(i){return t(i,n*lo)},o.period=function(i){return t(e,i)},o}(Wc,$c);var bw={time:null,delay:0,duration:250,ease:Pi};function vw(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function Pm(t){var e,n;t instanceof Bt?(e=t._id,t=t._name):(e=gf(),(n=bw).time=Bn(),t=t==null?null:t+"");for(var r=this._groups,o=r.length,i=0;i<o;++i)for(var a=r[i],f=a.length,u,s=0;s<f;++s)(u=a[s])&&Hn(u,t,e,s,a,n||vw(u,e));return new Bt(r,this._parents,t,e)}Xe.prototype.interrupt=Xd;Xe.prototype.transition=Pm;var _w=[null];function Dm(t,e){var n=t.__transition,r,o;if(n){e=e==null?null:e+"";for(o in n)if((r=n[o]).state>hf&&r.name===e)return new Bt([[t]],_w,e,+o)}return null}var bf=t=>()=>t;function Gc(t,{sourceEvent:e,target:n,selection:r,mode:o,dispatch:i}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},selection:{value:r,enumerable:!0,configurable:!0},mode:{value:o,enumerable:!0,configurable:!0},_:{value:i}})}function qm(t){t.stopImmediatePropagation()}function vf(t){t.preventDefault(),t.stopImmediatePropagation()}var Om={name:"drag"},Zc={name:"space"},ho={name:"handle"},po={name:"center"},{abs:Fm,max:$t,min:Vt}=Math;function zm(t){return[+t[0],+t[1]]}function Kc(t){return[zm(t[0]),zm(t[1])]}var _f={name:"x",handles:["w","e"].map(Di),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},wf={name:"y",handles:["n","s"].map(Di),input:function(t,e){return t==null?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},ww={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(Di),input:function(t){return t==null?null:Kc(t)},output:function(t){return t}},mn={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Lm={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Ym={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Mw={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},Sw={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function Di(t){return{type:t}}function Tw(t){return!t.ctrlKey&&!t.button}function Aw(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?(t=t.viewBox.baseVal,[[t.x,t.y],[t.x+t.width,t.y+t.height]]):[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function kw(){return navigator.maxTouchPoints||"ontouchstart"in this}function Qc(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function Ew(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function Um(t){var e=t.__brush;return e?e.dim.output(e.selection):null}function Bm(){return Jc(_f)}function Hm(){return Jc(wf)}function Xm(){return Jc(ww)}function Jc(t){var e=Aw,n=Tw,r=kw,o=!0,i=pe("start","brush","end"),a=6,f;function u(d){var m=d.property("__brush",x).selectAll(".overlay").data([Di("overlay")]);m.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",mn.overlay).merge(m).each(function(){var b=Qc(this).extent;Tt(this).attr("x",b[0][0]).attr("y",b[0][1]).attr("width",b[1][0]-b[0][0]).attr("height",b[1][1]-b[0][1])}),d.selectAll(".selection").data([Di("selection")]).enter().append("rect").attr("class","selection").attr("cursor",mn.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var v=d.selectAll(".handle").data(t.handles,function(b){return b.type});v.exit().remove(),v.enter().append("rect").attr("class",function(b){return"handle handle--"+b.type}).attr("cursor",function(b){return mn[b.type]}),d.each(s).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",l).filter(r).on("touchstart.brush",l).on("touchmove.brush",p).on("touchend.brush touchcancel.brush",g).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}u.move=function(d,m,v){d.tween?d.on("start.brush",function(b){c(this,arguments).beforestart().start(b)}).on("interrupt.brush end.brush",function(b){c(this,arguments).end(b)}).tween("brush",function(){var b=this,y=b.__brush,_=c(b,arguments),w=y.selection,E=t.input(typeof m=="function"?m.apply(this,arguments):m,y.extent),N=Wt(w,E);function P(T){y.selection=T===1&&E===null?null:N(T),s.call(b),_.brush()}return w!==null&&E!==null?P:P(1)}):d.each(function(){var b=this,y=arguments,_=b.__brush,w=t.input(typeof m=="function"?m.apply(b,y):m,_.extent),E=c(b,y).beforestart();Ce(b),_.selection=w===null?null:w,s.call(b),E.start(v).brush(v).end(v)})},u.clear=function(d,m){u.move(d,null,m)};function s(){var d=Tt(this),m=Qc(this).selection;m?(d.selectAll(".selection").style("display",null).attr("x",m[0][0]).attr("y",m[0][1]).attr("width",m[1][0]-m[0][0]).attr("height",m[1][1]-m[0][1]),d.selectAll(".handle").style("display",null).attr("x",function(v){return v.type[v.type.length-1]==="e"?m[1][0]-a/2:m[0][0]-a/2}).attr("y",function(v){return v.type[0]==="s"?m[1][1]-a/2:m[0][1]-a/2}).attr("width",function(v){return v.type==="n"||v.type==="s"?m[1][0]-m[0][0]+a:a}).attr("height",function(v){return v.type==="e"||v.type==="w"?m[1][1]-m[0][1]+a:a})):d.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(d,m,v){var b=d.__brush.emitter;return b&&(!v||!b.clean)?b:new h(d,m,v)}function h(d,m,v){this.that=d,this.args=m,this.state=d.__brush,this.active=0,this.clean=v}h.prototype={beforestart:function(){return++this.active===1&&(this.state.emitter=this,this.starting=!0),this},start:function(d,m){return this.starting?(this.starting=!1,this.emit("start",d,m)):this.emit("brush",d),this},brush:function(d,m){return this.emit("brush",d,m),this},end:function(d,m){return--this.active===0&&(delete this.state.emitter,this.emit("end",d,m)),this},emit:function(d,m,v){var b=Tt(this.that).datum();i.call(d,this.that,new Gc(d,{sourceEvent:m,target:u,selection:t.output(this.state.selection),mode:v,dispatch:i}),b)}};function l(d){if(f&&!d.touches||!n.apply(this,arguments))return;var m=this,v=d.target.__data__.type,b=(o&&d.metaKey?v="overlay":v)==="selection"?Om:o&&d.altKey?po:ho,y=t===wf?null:Mw[v],_=t===_f?null:Sw[v],w=Qc(m),E=w.extent,N=w.selection,P=E[0][0],T,S,C=E[0][1],R,M,A=E[1][0],k,I,q=E[1][1],O,Y,X=0,$=0,lt,j=y&&_&&o&&d.shiftKey,ht,Rt,ut=Array.from(d.touches||[d],Q=>{let St=Q.identifier;return Q=qt(Q,m),Q.point0=Q.slice(),Q.identifier=St,Q});Ce(m);var kt=c(m,arguments,!0).beforestart();if(v==="overlay"){N&&(lt=!0);let Q=[ut[0],ut[1]||ut[0]];w.selection=N=[[T=t===wf?P:Vt(Q[0][0],Q[1][0]),R=t===_f?C:Vt(Q[0][1],Q[1][1])],[k=t===wf?A:$t(Q[0][0],Q[1][0]),O=t===_f?q:$t(Q[0][1],Q[1][1])]],ut.length>1&&Mt(d)}else T=N[0][0],R=N[0][1],k=N[1][0],O=N[1][1];S=T,M=R,I=k,Y=O;var B=Tt(m).attr("pointer-events","none"),J=B.selectAll(".overlay").attr("cursor",mn[v]);if(d.touches)kt.moved=F,kt.ended=pt;else{var nt=Tt(d.view).on("mousemove.brush",F,!0).on("mouseup.brush",pt,!0);o&&nt.on("keydown.brush",Qt,!0).on("keyup.brush",Kt,!0),qn(d.view)}s.call(m),kt.start(d,b.name);function F(Q){for(let St of Q.changedTouches||[Q])for(let ti of ut)ti.identifier===St.identifier&&(ti.cur=qt(St,m));if(j&&!ht&&!Rt&&ut.length===1){let St=ut[0];Fm(St.cur[0]-St[0])>Fm(St.cur[1]-St[1])?Rt=!0:ht=!0}for(let St of ut)St.cur&&(St[0]=St.cur[0],St[1]=St.cur[1]);lt=!0,vf(Q),Mt(Q)}function Mt(Q){let St=ut[0],ti=St.point0;var En;switch(X=St[0]-ti[0],$=St[1]-ti[1],b){case Zc:case Om:{y&&(X=$t(P-T,Vt(A-k,X)),S=T+X,I=k+X),_&&($=$t(C-R,Vt(q-O,$)),M=R+$,Y=O+$);break}case ho:{ut[1]?(y&&(S=$t(P,Vt(A,ut[0][0])),I=$t(P,Vt(A,ut[1][0])),y=1),_&&(M=$t(C,Vt(q,ut[0][1])),Y=$t(C,Vt(q,ut[1][1])),_=1)):(y<0?(X=$t(P-T,Vt(A-T,X)),S=T+X,I=k):y>0&&(X=$t(P-k,Vt(A-k,X)),S=T,I=k+X),_<0?($=$t(C-R,Vt(q-R,$)),M=R+$,Y=O):_>0&&($=$t(C-O,Vt(q-O,$)),M=R,Y=O+$));break}case po:{y&&(S=$t(P,Vt(A,T-X*y)),I=$t(P,Vt(A,k+X*y))),_&&(M=$t(C,Vt(q,R-$*_)),Y=$t(C,Vt(q,O+$*_)));break}}I<S&&(y*=-1,En=T,T=k,k=En,En=S,S=I,I=En,v in Lm&&J.attr("cursor",mn[v=Lm[v]])),Y<M&&(_*=-1,En=R,R=O,O=En,En=M,M=Y,Y=En,v in Ym&&J.attr("cursor",mn[v=Ym[v]])),w.selection&&(N=w.selection),ht&&(S=N[0][0],I=N[1][0]),Rt&&(M=N[0][1],Y=N[1][1]),(N[0][0]!==S||N[0][1]!==M||N[1][0]!==I||N[1][1]!==Y)&&(w.selection=[[S,M],[I,Y]],s.call(m),kt.brush(Q,b.name))}function pt(Q){if(qm(Q),Q.touches){if(Q.touches.length)return;f&&clearTimeout(f),f=setTimeout(function(){f=null},500)}else On(Q.view,lt),nt.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);B.attr("pointer-events","all"),J.attr("cursor",mn.overlay),w.selection&&(N=w.selection),Ew(N)&&(w.selection=null,s.call(m)),kt.end(Q,b.name)}function Qt(Q){switch(Q.keyCode){case 16:{j=y&&_;break}case 18:{b===ho&&(y&&(k=I-X*y,T=S+X*y),_&&(O=Y-$*_,R=M+$*_),b=po,Mt(Q));break}case 32:{(b===ho||b===po)&&(y<0?k=I-X:y>0&&(T=S-X),_<0?O=Y-$:_>0&&(R=M-$),b=Zc,J.attr("cursor",mn.selection),Mt(Q));break}default:return}vf(Q)}function Kt(Q){switch(Q.keyCode){case 16:{j&&(ht=Rt=j=!1,Mt(Q));break}case 18:{b===po&&(y<0?k=I:y>0&&(T=S),_<0?O=Y:_>0&&(R=M),b=ho,Mt(Q));break}case 32:{b===Zc&&(Q.altKey?(y&&(k=I-X*y,T=S+X*y),_&&(O=Y-$*_,R=M+$*_),b=po):(y<0?k=I:y>0&&(T=S),_<0?O=Y:_>0&&(R=M),b=ho),J.attr("cursor",mn[v]),Mt(Q));break}default:return}vf(Q)}}function p(d){c(this,arguments).moved(d)}function g(d){c(this,arguments).ended(d)}function x(){var d=this.__brush||{selection:null};return d.extent=Kc(e.apply(this,arguments)),d.dim=t,d}return u.extent=function(d){return arguments.length?(e=typeof d=="function"?d:bf(Kc(d)),u):e},u.filter=function(d){return arguments.length?(n=typeof d=="function"?d:bf(!!d),u):n},u.touchable=function(d){return arguments.length?(r=typeof d=="function"?d:bf(!!d),u):r},u.handleSize=function(d){return arguments.length?(a=+d,u):a},u.keyModifiers=function(d){return arguments.length?(o=!!d,u):o},u.on=function(){var d=i.on.apply(i,arguments);return d===i?u:d},u}var jc=Math.abs,xr=Math.cos,yr=Math.sin,Wm=Math.PI,qi=Wm/2,tl=Wm*2,el=Math.max,Mf=1e-12;function nl(t,e){return Array.from({length:e-t},(n,r)=>t+r)}function Nw(t){return function(e,n){return t(e.source.value+e.target.value,n.source.value+n.target.value)}}function $m(){return rl(!1,!1)}function Vm(){return rl(!1,!0)}function Gm(){return rl(!0,!1)}function rl(t,e){var n=0,r=null,o=null,i=null;function a(f){var u=f.length,s=new Array(u),c=nl(0,u),h=new Array(u*u),l=new Array(u),p=0,g;f=Float64Array.from({length:u*u},e?(x,d)=>f[d%u][d/u|0]:(x,d)=>f[d/u|0][d%u]);for(let x=0;x<u;++x){let d=0;for(let m=0;m<u;++m)d+=f[x*u+m]+t*f[m*u+x];p+=s[x]=d}p=el(0,tl-n*u)/p,g=p?n:tl/u;{let x=0;r&&c.sort((d,m)=>r(s[d],s[m]));for(let d of c){let m=x;if(t){let v=nl(~u+1,u).filter(b=>b<0?f[~b*u+d]:f[d*u+b]);o&&v.sort((b,y)=>o(b<0?-f[~b*u+d]:f[d*u+b],y<0?-f[~y*u+d]:f[d*u+y]));for(let b of v)if(b<0){let y=h[~b*u+d]||(h[~b*u+d]={source:null,target:null});y.target={index:d,startAngle:x,endAngle:x+=f[~b*u+d]*p,value:f[~b*u+d]}}else{let y=h[d*u+b]||(h[d*u+b]={source:null,target:null});y.source={index:d,startAngle:x,endAngle:x+=f[d*u+b]*p,value:f[d*u+b]}}l[d]={index:d,startAngle:m,endAngle:x,value:s[d]}}else{let v=nl(0,u).filter(b=>f[d*u+b]||f[b*u+d]);o&&v.sort((b,y)=>o(f[d*u+b],f[d*u+y]));for(let b of v){let y;if(d<b?(y=h[d*u+b]||(h[d*u+b]={source:null,target:null}),y.source={index:d,startAngle:x,endAngle:x+=f[d*u+b]*p,value:f[d*u+b]}):(y=h[b*u+d]||(h[b*u+d]={source:null,target:null}),y.target={index:d,startAngle:x,endAngle:x+=f[d*u+b]*p,value:f[d*u+b]},d===b&&(y.source=y.target)),y.source&&y.target&&y.source.value<y.target.value){let _=y.source;y.source=y.target,y.target=_}}l[d]={index:d,startAngle:m,endAngle:x,value:s[d]}}x+=g}}return h=Object.values(h),h.groups=l,i?h.sort(i):h}return a.padAngle=function(f){return arguments.length?(n=el(0,f),a):n},a.sortGroups=function(f){return arguments.length?(r=f,a):r},a.sortSubgroups=function(f){return arguments.length?(o=f,a):o},a.sortChords=function(f){return arguments.length?(f==null?i=null:(i=Nw(f))._=f,a):i&&i._},a}var ol=Math.PI,il=2*ol,br=1e-6,Rw=il-br;function al(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Zm(){return new al}al.prototype=Zm.prototype={constructor:al,moveTo:function(t,e){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)},closePath:function(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,e){this._+="L"+(this._x1=+t)+","+(this._y1=+e)},quadraticCurveTo:function(t,e,n,r){this._+="Q"+ +t+","+ +e+","+(this._x1=+n)+","+(this._y1=+r)},bezierCurveTo:function(t,e,n,r,o,i){this._+="C"+ +t+","+ +e+","+ +n+","+ +r+","+(this._x1=+o)+","+(this._y1=+i)},arcTo:function(t,e,n,r,o){t=+t,e=+e,n=+n,r=+r,o=+o;var i=this._x1,a=this._y1,f=n-t,u=r-e,s=i-t,c=a-e,h=s*s+c*c;if(o<0)throw new Error("negative radius: "+o);if(this._x1===null)this._+="M"+(this._x1=t)+","+(this._y1=e);else if(h>br)if(!(Math.abs(c*f-u*s)>br)||!o)this._+="L"+(this._x1=t)+","+(this._y1=e);else{var l=n-i,p=r-a,g=f*f+u*u,x=l*l+p*p,d=Math.sqrt(g),m=Math.sqrt(h),v=o*Math.tan((ol-Math.acos((g+h-x)/(2*d*m)))/2),b=v/m,y=v/d;Math.abs(b-1)>br&&(this._+="L"+(t+b*s)+","+(e+b*c)),this._+="A"+o+","+o+",0,0,"+ +(c*l>s*p)+","+(this._x1=t+y*f)+","+(this._y1=e+y*u)}},arc:function(t,e,n,r,o,i){t=+t,e=+e,n=+n,i=!!i;var a=n*Math.cos(r),f=n*Math.sin(r),u=t+a,s=e+f,c=1^i,h=i?r-o:o-r;if(n<0)throw new Error("negative radius: "+n);this._x1===null?this._+="M"+u+","+s:(Math.abs(this._x1-u)>br||Math.abs(this._y1-s)>br)&&(this._+="L"+u+","+s),n&&(h<0&&(h=h%il+il),h>Rw?this._+="A"+n+","+n+",0,1,"+c+","+(t-a)+","+(e-f)+"A"+n+","+n+",0,1,"+c+","+(this._x1=u)+","+(this._y1=s):h>br&&(this._+="A"+n+","+n+",0,"+ +(h>=ol)+","+c+","+(this._x1=t+n*Math.cos(o))+","+(this._y1=e+n*Math.sin(o))))},rect:function(t,e,n,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)+"h"+ +n+"v"+ +r+"h"+-n+"Z"},toString:function(){return this._}};var fe=Zm;var Qm=Array.prototype.slice;function Xn(t){return function(){return t}}function Cw(t){return t.source}function Iw(t){return t.target}function Km(t){return t.radius}function Pw(t){return t.startAngle}function Dw(t){return t.endAngle}function qw(){return 0}function Ow(){return 10}function Jm(t){var e=Cw,n=Iw,r=Km,o=Km,i=Pw,a=Dw,f=qw,u=null;function s(){var c,h=e.apply(this,arguments),l=n.apply(this,arguments),p=f.apply(this,arguments)/2,g=Qm.call(arguments),x=+r.apply(this,(g[0]=h,g)),d=i.apply(this,g)-qi,m=a.apply(this,g)-qi,v=+o.apply(this,(g[0]=l,g)),b=i.apply(this,g)-qi,y=a.apply(this,g)-qi;if(u||(u=c=fe()),p>Mf&&(jc(m-d)>p*2+Mf?m>d?(d+=p,m-=p):(d-=p,m+=p):d=m=(d+m)/2,jc(y-b)>p*2+Mf?y>b?(b+=p,y-=p):(b-=p,y+=p):b=y=(b+y)/2),u.moveTo(x*xr(d),x*yr(d)),u.arc(0,0,x,d,m),d!==b||m!==y)if(t){var _=+t.apply(this,arguments),w=v-_,E=(b+y)/2;u.quadraticCurveTo(0,0,w*xr(b),w*yr(b)),u.lineTo(v*xr(E),v*yr(E)),u.lineTo(w*xr(y),w*yr(y))}else u.quadraticCurveTo(0,0,v*xr(b),v*yr(b)),u.arc(0,0,v,b,y);if(u.quadraticCurveTo(0,0,x*xr(d),x*yr(d)),u.closePath(),c)return u=null,c+""||null}return t&&(s.headRadius=function(c){return arguments.length?(t=typeof c=="function"?c:Xn(+c),s):t}),s.radius=function(c){return arguments.length?(r=o=typeof c=="function"?c:Xn(+c),s):r},s.sourceRadius=function(c){return arguments.length?(r=typeof c=="function"?c:Xn(+c),s):r},s.targetRadius=function(c){return arguments.length?(o=typeof c=="function"?c:Xn(+c),s):o},s.startAngle=function(c){return arguments.length?(i=typeof c=="function"?c:Xn(+c),s):i},s.endAngle=function(c){return arguments.length?(a=typeof c=="function"?c:Xn(+c),s):a},s.padAngle=function(c){return arguments.length?(f=typeof c=="function"?c:Xn(+c),s):f},s.source=function(c){return arguments.length?(e=c,s):e},s.target=function(c){return arguments.length?(n=c,s):n},s.context=function(c){return arguments.length?(u=c==null?null:c,s):u},s}function jm(){return Jm()}function t1(){return Jm(Ow)}var Fw=Array.prototype,Sf=Fw.slice;function e1(t,e){return t-e}function n1(t){for(var e=0,n=t.length,r=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];++e<n;)r+=t[e-1][1]*t[e][0]-t[e-1][0]*t[e][1];return r}var Ze=t=>()=>t;function r1(t,e){for(var n=-1,r=e.length,o;++n<r;)if(o=zw(t,e[n]))return o;return 0}function zw(t,e){for(var n=e[0],r=e[1],o=-1,i=0,a=t.length,f=a-1;i<a;f=i++){var u=t[i],s=u[0],c=u[1],h=t[f],l=h[0],p=h[1];if(Lw(u,h,e))return 0;c>r!=p>r&&n<(l-s)*(r-c)/(p-c)+s&&(o=-o)}return o}function Lw(t,e,n){var r;return Yw(t,e,n)&&Uw(t[r=+(t[0]===e[0])],n[r],e[r])}function Yw(t,e,n){return(e[0]-t[0])*(n[1]-t[1])===(n[0]-t[0])*(e[1]-t[1])}function Uw(t,e,n){return t<=e&&e<=n||n<=e&&e<=t}function o1(){}var gn=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function Tf(){var t=1,e=1,n=ir,r=u;function o(s){var c=n(s);if(Array.isArray(c))c=c.slice().sort(e1);else{let h=sn(s),l=Ee(h[0],h[1],c);c=he(Math.floor(h[0]/l)*l,Math.floor(h[1]/l-1)*l,c)}return c.map(h=>i(s,h))}function i(s,c){var h=[],l=[];return a(s,c,function(p){r(p,s,c),n1(p)>0?h.push([p]):l.push(p)}),l.forEach(function(p){for(var g=0,x=h.length,d;g<x;++g)if(r1((d=h[g])[0],p)!==-1){d.push(p);return}}),{type:"MultiPolygon",value:c,coordinates:h}}function a(s,c,h){var l=new Array,p=new Array,g,x,d,m,v,b;for(g=x=-1,m=s[0]>=c,gn[m<<1].forEach(y);++g<t-1;)d=m,m=s[g+1]>=c,gn[d|m<<1].forEach(y);for(gn[m<<0].forEach(y);++x<e-1;){for(g=-1,m=s[x*t+t]>=c,v=s[x*t]>=c,gn[m<<1|v<<2].forEach(y);++g<t-1;)d=m,m=s[x*t+t+g+1]>=c,b=v,v=s[x*t+g+1]>=c,gn[d|m<<1|v<<2|b<<3].forEach(y);gn[m|v<<3].forEach(y)}for(g=-1,v=s[x*t]>=c,gn[v<<2].forEach(y);++g<t-1;)b=v,v=s[x*t+g+1]>=c,gn[v<<2|b<<3].forEach(y);gn[v<<3].forEach(y);function y(_){var w=[_[0][0]+g,_[0][1]+x],E=[_[1][0]+g,_[1][1]+x],N=f(w),P=f(E),T,S;(T=p[N])?(S=l[P])?(delete p[T.end],delete l[S.start],T===S?(T.ring.push(E),h(T.ring)):l[T.start]=p[S.end]={start:T.start,end:S.end,ring:T.ring.concat(S.ring)}):(delete p[T.end],T.ring.push(E),p[T.end=P]=T):(T=l[P])?(S=p[N])?(delete l[T.start],delete p[S.end],T===S?(T.ring.push(E),h(T.ring)):l[S.start]=p[T.end]={start:S.start,end:T.end,ring:S.ring.concat(T.ring)}):(delete l[T.start],T.ring.unshift(w),l[T.start=N]=T):l[N]=p[P]={start:N,end:P,ring:[w,E]}}}function f(s){return s[0]*2+s[1]*(t+1)*4}function u(s,c,h){s.forEach(function(l){var p=l[0],g=l[1],x=p|0,d=g|0,m,v=c[d*t+x];p>0&&p<t&&x===p&&(m=c[d*t+x-1],l[0]=p+(h-m)/(v-m)-.5),g>0&&g<e&&d===g&&(m=c[(d-1)*t+x],l[1]=g+(h-m)/(v-m)-.5)})}return o.contour=i,o.size=function(s){if(!arguments.length)return[t,e];var c=Math.floor(s[0]),h=Math.floor(s[1]);if(!(c>=0&&h>=0))throw new Error("invalid size");return t=c,e=h,o},o.thresholds=function(s){return arguments.length?(n=typeof s=="function"?s:Array.isArray(s)?Ze(Sf.call(s)):Ze(s),o):n},o.smooth=function(s){return arguments.length?(r=s?u:o1,o):r===u},o}function Af(t,e,n){for(var r=t.width,o=t.height,i=(n<<1)+1,a=0;a<o;++a)for(var f=0,u=0;f<r+n;++f)f<r&&(u+=t.data[f+a*r]),f>=n&&(f>=i&&(u-=t.data[f-i+a*r]),e.data[f-n+a*r]=u/Math.min(f+1,r-1+i-f,i))}function kf(t,e,n){for(var r=t.width,o=t.height,i=(n<<1)+1,a=0;a<r;++a)for(var f=0,u=0;f<o+n;++f)f<o&&(u+=t.data[a+f*r]),f>=n&&(f>=i&&(u-=t.data[a+(f-i)*r]),e.data[a+(f-n)*r]=u/Math.min(f+1,o-1+i-f,i))}function Bw(t){return t[0]}function Hw(t){return t[1]}function Xw(){return 1}function i1(){var t=Bw,e=Hw,n=Xw,r=960,o=500,i=20,a=2,f=i*3,u=r+f*2>>a,s=o+f*2>>a,c=Ze(20);function h(m){var v=new Float32Array(u*s),b=new Float32Array(u*s),y=Math.pow(2,-a);m.forEach(function(E,N,P){var T=(t(E,N,P)+f)*y,S=(e(E,N,P)+f)*y,C=+n(E,N,P);if(T>=0&&T<u&&S>=0&&S<s){var R=Math.floor(T),M=Math.floor(S),A=T-R-.5,k=S-M-.5;v[R+M*u]+=(1-A)*(1-k)*C,v[R+1+M*u]+=A*(1-k)*C,v[R+1+(M+1)*u]+=A*k*C,v[R+(M+1)*u]+=(1-A)*k*C}}),Af({width:u,height:s,data:v},{width:u,height:s,data:b},i>>a),kf({width:u,height:s,data:b},{width:u,height:s,data:v},i>>a),Af({width:u,height:s,data:v},{width:u,height:s,data:b},i>>a),kf({width:u,height:s,data:b},{width:u,height:s,data:v},i>>a),Af({width:u,height:s,data:v},{width:u,height:s,data:b},i>>a),kf({width:u,height:s,data:b},{width:u,height:s,data:v},i>>a);var _=c(v);if(!Array.isArray(_)){var w=Rn(v);_=Ee(0,w,_),_=ae(0,Math.floor(w/_)*_,_),_.shift()}return Tf().thresholds(_).size([u,s])(v).map(l)}function l(m){return m.value*=Math.pow(2,-2*a),m.coordinates.forEach(p),m}function p(m){m.forEach(g)}function g(m){m.forEach(x)}function x(m){m[0]=m[0]*Math.pow(2,a)-f,m[1]=m[1]*Math.pow(2,a)-f}function d(){return f=i*3,u=r+f*2>>a,s=o+f*2>>a,h}return h.x=function(m){return arguments.length?(t=typeof m=="function"?m:Ze(+m),h):t},h.y=function(m){return arguments.length?(e=typeof m=="function"?m:Ze(+m),h):e},h.weight=function(m){return arguments.length?(n=typeof m=="function"?m:Ze(+m),h):n},h.size=function(m){if(!arguments.length)return[r,o];var v=+m[0],b=+m[1];if(!(v>=0&&b>=0))throw new Error("invalid size");return r=v,o=b,d()},h.cellSize=function(m){if(!arguments.length)return 1<<a;if(!((m=+m)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(m)/Math.LN2),d()},h.thresholds=function(m){return arguments.length?(c=typeof m=="function"?m:Array.isArray(m)?Ze(Sf.call(m)):Ze(m),h):c},h.bandwidth=function(m){if(!arguments.length)return Math.sqrt(i*(i+1));if(!((m=+m)>=0))throw new Error("invalid bandwidth");return i=Math.round((Math.sqrt(4*m*m+1)-1)/2),d()},h}var it=11102230246251565e-32,It=134217729,Oi=(3+8*it)*it;function vr(t,e,n,r,o){let i,a,f,u,s=e[0],c=r[0],h=0,l=0;c>s==c>-s?(i=s,s=e[++h]):(i=c,c=r[++l]);let p=0;if(h<t&&l<n)for(c>s==c>-s?(a=s+i,f=i-(a-s),s=e[++h]):(a=c+i,f=i-(a-c),c=r[++l]),i=a,f!==0&&(o[p++]=f);h<t&&l<n;)c>s==c>-s?(a=i+s,u=a-i,f=i-(a-u)+(s-u),s=e[++h]):(a=i+c,u=a-i,f=i-(a-u)+(c-u),c=r[++l]),i=a,f!==0&&(o[p++]=f);for(;h<t;)a=i+s,u=a-i,f=i-(a-u)+(s-u),s=e[++h],i=a,f!==0&&(o[p++]=f);for(;l<n;)a=i+c,u=a-i,f=i-(a-u)+(c-u),c=r[++l],i=a,f!==0&&(o[p++]=f);return(i!==0||p===0)&&(o[p++]=i),p}function Fi(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}function D(t){return new Float64Array(t)}var Ww=(3+16*it)*it,$w=(2+12*it)*it,Vw=(9+64*it)*it*it,mo=D(4),a1=D(8),f1=D(12),u1=D(16),Jt=D(4);function Gw(t,e,n,r,o,i,a){let f,u,s,c,h,l,p,g,x,d,m,v,b,y,_,w,E,N,P=t-o,T=n-o,S=e-i,C=r-i;y=P*C,l=It*P,p=l-(l-P),g=P-p,l=It*C,x=l-(l-C),d=C-x,_=g*d-(y-p*x-g*x-p*d),w=S*T,l=It*S,p=l-(l-S),g=S-p,l=It*T,x=l-(l-T),d=T-x,E=g*d-(w-p*x-g*x-p*d),m=_-E,h=_-m,mo[0]=_-(m+h)+(h-E),v=y+m,h=v-y,b=y-(v-h)+(m-h),m=b-w,h=b-m,mo[1]=b-(m+h)+(h-w),N=v+m,h=N-v,mo[2]=v-(N-h)+(m-h),mo[3]=N;let R=Fi(4,mo),M=$w*a;if(R>=M||-R>=M||(h=t-P,f=t-(P+h)+(h-o),h=n-T,s=n-(T+h)+(h-o),h=e-S,u=e-(S+h)+(h-i),h=r-C,c=r-(C+h)+(h-i),f===0&&u===0&&s===0&&c===0)||(M=Vw*a+Oi*Math.abs(R),R+=P*c+C*f-(S*s+T*u),R>=M||-R>=M))return R;y=f*C,l=It*f,p=l-(l-f),g=f-p,l=It*C,x=l-(l-C),d=C-x,_=g*d-(y-p*x-g*x-p*d),w=u*T,l=It*u,p=l-(l-u),g=u-p,l=It*T,x=l-(l-T),d=T-x,E=g*d-(w-p*x-g*x-p*d),m=_-E,h=_-m,Jt[0]=_-(m+h)+(h-E),v=y+m,h=v-y,b=y-(v-h)+(m-h),m=b-w,h=b-m,Jt[1]=b-(m+h)+(h-w),N=v+m,h=N-v,Jt[2]=v-(N-h)+(m-h),Jt[3]=N;let A=vr(4,mo,4,Jt,a1);y=P*c,l=It*P,p=l-(l-P),g=P-p,l=It*c,x=l-(l-c),d=c-x,_=g*d-(y-p*x-g*x-p*d),w=S*s,l=It*S,p=l-(l-S),g=S-p,l=It*s,x=l-(l-s),d=s-x,E=g*d-(w-p*x-g*x-p*d),m=_-E,h=_-m,Jt[0]=_-(m+h)+(h-E),v=y+m,h=v-y,b=y-(v-h)+(m-h),m=b-w,h=b-m,Jt[1]=b-(m+h)+(h-w),N=v+m,h=N-v,Jt[2]=v-(N-h)+(m-h),Jt[3]=N;let k=vr(A,a1,4,Jt,f1);y=f*c,l=It*f,p=l-(l-f),g=f-p,l=It*c,x=l-(l-c),d=c-x,_=g*d-(y-p*x-g*x-p*d),w=u*s,l=It*u,p=l-(l-u),g=u-p,l=It*s,x=l-(l-s),d=s-x,E=g*d-(w-p*x-g*x-p*d),m=_-E,h=_-m,Jt[0]=_-(m+h)+(h-E),v=y+m,h=v-y,b=y-(v-h)+(m-h),m=b-w,h=b-m,Jt[1]=b-(m+h)+(h-w),N=v+m,h=N-v,Jt[2]=v-(N-h)+(m-h),Jt[3]=N;let I=vr(k,f1,4,Jt,u1);return u1[I-1]}function go(t,e,n,r,o,i){let a=(e-i)*(n-o),f=(t-o)*(r-i),u=a-f;if(a===0||f===0||a>0!=f>0)return u;let s=Math.abs(a+f);return Math.abs(u)>=Ww*s?u:-Gw(t,e,n,r,o,i,s)}var WC=(7+56*it)*it,$C=(3+28*it)*it,VC=(26+288*it)*it*it,GC=D(4),ZC=D(4),QC=D(4),KC=D(4),JC=D(4),jC=D(4),tI=D(4),eI=D(4),nI=D(4),rI=D(8),oI=D(8),iI=D(8),aI=D(4),fI=D(8),uI=D(8),sI=D(8),cI=D(12),lI=D(192),hI=D(192);var mI=(10+96*it)*it,gI=(4+48*it)*it,xI=(44+576*it)*it*it,yI=D(4),bI=D(4),vI=D(4),_I=D(4),wI=D(4),MI=D(4),SI=D(4),TI=D(4),AI=D(8),kI=D(8),EI=D(8),NI=D(8),RI=D(8),CI=D(8),II=D(8),PI=D(8),DI=D(8),qI=D(4),OI=D(4),FI=D(4),zI=D(8),LI=D(16),YI=D(16),UI=D(16),BI=D(32),HI=D(32),XI=D(48),WI=D(64),$I=D(1152),VI=D(1152);var KI=(16+224*it)*it,JI=(5+72*it)*it,jI=(71+1408*it)*it*it,tP=D(4),eP=D(4),nP=D(4),rP=D(4),oP=D(4),iP=D(4),aP=D(4),fP=D(4),uP=D(4),sP=D(4),cP=D(24),lP=D(24),hP=D(24),pP=D(24),dP=D(24),mP=D(24),gP=D(24),xP=D(24),yP=D(24),bP=D(24),vP=D(1152),_P=D(1152),wP=D(1152),MP=D(1152),SP=D(1152),TP=D(2304),AP=D(2304),kP=D(3456),EP=D(5760),NP=D(8),RP=D(8),CP=D(8),IP=D(16),PP=D(24),DP=D(48),qP=D(48),OP=D(96),FP=D(192),zP=D(384),LP=D(384),YP=D(384),UP=D(768);var BP=D(96),HP=D(96),XP=D(96),WP=D(1152);var c1=Math.pow(2,-52),Ef=new Uint32Array(512),Wn=class{static from(e,n=t6,r=e6){let o=e.length,i=new Float64Array(o*2);for(let a=0;a<o;a++){let f=e[a];i[2*a]=n(f),i[2*a+1]=r(f)}return new Wn(i)}constructor(e){let n=e.length>>1;if(n>0&&typeof e[0]!="number")throw new Error("Expected coords to contain numbers.");this.coords=e;let r=Math.max(2*n-5,0);this._triangles=new Uint32Array(r*3),this._halfedges=new Int32Array(r*3),this._hashSize=Math.ceil(Math.sqrt(n)),this._hullPrev=new Uint32Array(n),this._hullNext=new Uint32Array(n),this._hullTri=new Uint32Array(n),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(n),this._dists=new Float64Array(n),this.update()}update(){let{coords:e,_hullPrev:n,_hullNext:r,_hullTri:o,_hullHash:i}=this,a=e.length>>1,f=1/0,u=1/0,s=-1/0,c=-1/0;for(let T=0;T<a;T++){let S=e[2*T],C=e[2*T+1];S<f&&(f=S),C<u&&(u=C),S>s&&(s=S),C>c&&(c=C),this._ids[T]=T}let h=(f+s)/2,l=(u+c)/2,p=1/0,g,x,d;for(let T=0;T<a;T++){let S=fl(h,l,e[2*T],e[2*T+1]);S<p&&(g=T,p=S)}let m=e[2*g],v=e[2*g+1];p=1/0;for(let T=0;T<a;T++){if(T===g)continue;let S=fl(m,v,e[2*T],e[2*T+1]);S<p&&S>0&&(x=T,p=S)}let b=e[2*x],y=e[2*x+1],_=1/0;for(let T=0;T<a;T++){if(T===g||T===x)continue;let S=Jw(m,v,b,y,e[2*T],e[2*T+1]);S<_&&(d=T,_=S)}let w=e[2*d],E=e[2*d+1];if(_===1/0){for(let C=0;C<a;C++)this._dists[C]=e[2*C]-e[0]||e[2*C+1]-e[1];xo(this._ids,this._dists,0,a-1);let T=new Uint32Array(a),S=0;for(let C=0,R=-1/0;C<a;C++){let M=this._ids[C];this._dists[M]>R&&(T[S++]=M,R=this._dists[M])}this.hull=T.subarray(0,S),this.triangles=new Uint32Array(0),this.halfedges=new Uint32Array(0);return}if(go(m,v,b,y,w,E)<0){let T=x,S=b,C=y;x=d,b=w,y=E,d=T,w=S,E=C}let N=jw(m,v,b,y,w,E);this._cx=N.x,this._cy=N.y;for(let T=0;T<a;T++)this._dists[T]=fl(e[2*T],e[2*T+1],N.x,N.y);xo(this._ids,this._dists,0,a-1),this._hullStart=g;let P=3;r[g]=n[d]=x,r[x]=n[g]=d,r[d]=n[x]=g,o[g]=0,o[x]=1,o[d]=2,i.fill(-1),i[this._hashKey(m,v)]=g,i[this._hashKey(b,y)]=x,i[this._hashKey(w,E)]=d,this.trianglesLen=0,this._addTriangle(g,x,d,-1,-1,-1);for(let T=0,S,C;T<this._ids.length;T++){let R=this._ids[T],M=e[2*R],A=e[2*R+1];if(T>0&&Math.abs(M-S)<=c1&&Math.abs(A-C)<=c1||(S=M,C=A,R===g||R===x||R===d))continue;let k=0;for(let X=0,$=this._hashKey(M,A);X<this._hashSize&&(k=i[($+X)%this._hashSize],!(k!==-1&&k!==r[k]));X++);k=n[k];let I=k,q;for(;q=r[I],go(M,A,e[2*I],e[2*I+1],e[2*q],e[2*q+1])>=0;)if(I=q,I===k){I=-1;break}if(I===-1)continue;let O=this._addTriangle(I,R,r[I],-1,-1,o[I]);o[R]=this._legalize(O+2),o[I]=O,P++;let Y=r[I];for(;q=r[Y],go(M,A,e[2*Y],e[2*Y+1],e[2*q],e[2*q+1])<0;)O=this._addTriangle(Y,R,q,o[R],-1,o[Y]),o[R]=this._legalize(O+2),r[Y]=Y,P--,Y=q;if(I===k)for(;q=n[I],go(M,A,e[2*q],e[2*q+1],e[2*I],e[2*I+1])<0;)O=this._addTriangle(q,R,I,-1,o[I],o[q]),this._legalize(O+2),o[q]=O,r[I]=I,P--,I=q;this._hullStart=n[R]=I,r[I]=n[Y]=R,r[R]=Y,i[this._hashKey(M,A)]=R,i[this._hashKey(e[2*I],e[2*I+1])]=I}this.hull=new Uint32Array(P);for(let T=0,S=this._hullStart;T<P;T++)this.hull[T]=S,S=r[S];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(e,n){return Math.floor(Qw(e-this._cx,n-this._cy)*this._hashSize)%this._hashSize}_legalize(e){let{_triangles:n,_halfedges:r,coords:o}=this,i=0,a=0;for(;;){let f=r[e],u=e-e%3;if(a=u+(e+2)%3,f===-1){if(i===0)break;e=Ef[--i];continue}let s=f-f%3,c=u+(e+1)%3,h=s+(f+2)%3,l=n[a],p=n[e],g=n[c],x=n[h];if(Kw(o[2*l],o[2*l+1],o[2*p],o[2*p+1],o[2*g],o[2*g+1],o[2*x],o[2*x+1])){n[e]=x,n[f]=l;let m=r[h];if(m===-1){let b=this._hullStart;do{if(this._hullTri[b]===h){this._hullTri[b]=e;break}b=this._hullPrev[b]}while(b!==this._hullStart)}this._link(e,m),this._link(f,r[a]),this._link(a,h);let v=s+(f+1)%3;i<Ef.length&&(Ef[i++]=v)}else{if(i===0)break;e=Ef[--i]}}return a}_link(e,n){this._halfedges[e]=n,n!==-1&&(this._halfedges[n]=e)}_addTriangle(e,n,r,o,i,a){let f=this.trianglesLen;return this._triangles[f]=e,this._triangles[f+1]=n,this._triangles[f+2]=r,this._link(f,o),this._link(f+1,i),this._link(f+2,a),this.trianglesLen+=3,f}};function Qw(t,e){let n=t/(Math.abs(t)+Math.abs(e));return(e>0?3-n:1+n)/4}function fl(t,e,n,r){let o=t-n,i=e-r;return o*o+i*i}function Kw(t,e,n,r,o,i,a,f){let u=t-a,s=e-f,c=n-a,h=r-f,l=o-a,p=i-f,g=u*u+s*s,x=c*c+h*h,d=l*l+p*p;return u*(h*d-x*p)-s*(c*d-x*l)+g*(c*p-h*l)<0}function Jw(t,e,n,r,o,i){let a=n-t,f=r-e,u=o-t,s=i-e,c=a*a+f*f,h=u*u+s*s,l=.5/(a*s-f*u),p=(s*c-f*h)*l,g=(a*h-u*c)*l;return p*p+g*g}function jw(t,e,n,r,o,i){let a=n-t,f=r-e,u=o-t,s=i-e,c=a*a+f*f,h=u*u+s*s,l=.5/(a*s-f*u),p=t+(s*c-f*h)*l,g=e+(a*h-u*c)*l;return{x:p,y:g}}function xo(t,e,n,r){if(r-n<=20)for(let o=n+1;o<=r;o++){let i=t[o],a=e[i],f=o-1;for(;f>=n&&e[t[f]]>a;)t[f+1]=t[f--];t[f+1]=i}else{let o=n+r>>1,i=n+1,a=r;zi(t,o,i),e[t[n]]>e[t[r]]&&zi(t,n,r),e[t[i]]>e[t[r]]&&zi(t,i,r),e[t[n]]>e[t[i]]&&zi(t,n,i);let f=t[i],u=e[f];for(;;){do i++;while(e[t[i]]<u);do a--;while(e[t[a]]>u);if(a<i)break;zi(t,i,a)}t[n+1]=t[a],t[a]=f,r-i+1>=a-n?(xo(t,e,i,r),xo(t,e,n,a-1)):(xo(t,e,n,a-1),xo(t,e,i,r))}}function zi(t,e,n){let r=t[e];t[e]=t[n],t[n]=r}function t6(t){return t[0]}function e6(t){return t[1]}var me=class{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(e,n){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+n}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(e,n){this._+=`L${this._x1=+e},${this._y1=+n}`}arc(e,n,r){e=+e,n=+n,r=+r;let o=e+r,i=n;if(r<0)throw new Error("negative radius");this._x1===null?this._+=`M${o},${i}`:(Math.abs(this._x1-o)>1e-6||Math.abs(this._y1-i)>1e-6)&&(this._+="L"+o+","+i),r&&(this._+=`A${r},${r},0,1,1,${e-r},${n}A${r},${r},0,1,1,${this._x1=o},${this._y1=i}`)}rect(e,n,r,o){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+n}h${+r}v${+o}h${-r}Z`}value(){return this._||null}};var $n=class{constructor(){this._=[]}moveTo(e,n){this._.push([e,n])}closePath(){this._.push(this._[0].slice())}lineTo(e,n){this._.push([e,n])}value(){return this._.length?this._:null}};var _r=class{constructor(e,[n,r,o,i]=[0,0,960,500]){if(!((o=+o)>=(n=+n))||!((i=+i)>=(r=+r)))throw new Error("invalid bounds");this.delaunay=e,this._circumcenters=new Float64Array(e.points.length*2),this.vectors=new Float64Array(e.points.length*2),this.xmax=o,this.xmin=n,this.ymax=i,this.ymin=r,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){let{delaunay:{points:e,hull:n,triangles:r},vectors:o}=this,i=this.circumcenters=this._circumcenters.subarray(0,r.length/3*2);for(let p=0,g=0,x=r.length,d,m;p<x;p+=3,g+=2){let v=r[p]*2,b=r[p+1]*2,y=r[p+2]*2,_=e[v],w=e[v+1],E=e[b],N=e[b+1],P=e[y],T=e[y+1],S=E-_,C=N-w,R=P-_,M=T-w,A=(S*M-C*R)*2;if(Math.abs(A)<1e-9){let k=1e9,I=r[0]*2;k*=Math.sign((e[I]-_)*M-(e[I+1]-w)*R),d=(_+P)/2-k*M,m=(w+T)/2+k*R}else{let k=1/A,I=S*S+C*C,q=R*R+M*M;d=_+(M*I-C*q)*k,m=w+(S*q-R*I)*k}i[g]=d,i[g+1]=m}let a=n[n.length-1],f,u=a*4,s,c=e[2*a],h,l=e[2*a+1];o.fill(0);for(let p=0;p<n.length;++p)a=n[p],f=u,s=c,h=l,u=a*4,c=e[2*a],l=e[2*a+1],o[f+2]=o[u]=h-l,o[f+3]=o[u+1]=c-s}render(e){let n=e==null?e=new me:void 0,{delaunay:{halfedges:r,inedges:o,hull:i},circumcenters:a,vectors:f}=this;if(i.length<=1)return null;for(let c=0,h=r.length;c<h;++c){let l=r[c];if(l<c)continue;let p=Math.floor(c/3)*2,g=Math.floor(l/3)*2,x=a[p],d=a[p+1],m=a[g],v=a[g+1];this._renderSegment(x,d,m,v,e)}let u,s=i[i.length-1];for(let c=0;c<i.length;++c){u=s,s=i[c];let h=Math.floor(o[s]/3)*2,l=a[h],p=a[h+1],g=u*4,x=this._project(l,p,f[g+2],f[g+3]);x&&this._renderSegment(l,p,x[0],x[1],e)}return n&&n.value()}renderBounds(e){let n=e==null?e=new me:void 0;return e.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),n&&n.value()}renderCell(e,n){let r=n==null?n=new me:void 0,o=this._clip(e);if(o===null||!o.length)return;n.moveTo(o[0],o[1]);let i=o.length;for(;o[0]===o[i-2]&&o[1]===o[i-1]&&i>1;)i-=2;for(let a=2;a<i;a+=2)(o[a]!==o[a-2]||o[a+1]!==o[a-1])&&n.lineTo(o[a],o[a+1]);return n.closePath(),r&&r.value()}*cellPolygons(){let{delaunay:{points:e}}=this;for(let n=0,r=e.length/2;n<r;++n){let o=this.cellPolygon(n);o&&(o.index=n,yield o)}}cellPolygon(e){let n=new $n;return this.renderCell(e,n),n.value()}_renderSegment(e,n,r,o,i){let a,f=this._regioncode(e,n),u=this._regioncode(r,o);f===0&&u===0?(i.moveTo(e,n),i.lineTo(r,o)):(a=this._clipSegment(e,n,r,o,f,u))&&(i.moveTo(a[0],a[1]),i.lineTo(a[2],a[3]))}contains(e,n,r){return n=+n,n!==n||(r=+r,r!==r)?!1:this.delaunay._step(e,n,r)===e}*neighbors(e){let n=this._clip(e);if(n)for(let r of this.delaunay.neighbors(e)){let o=this._clip(r);if(o){t:for(let i=0,a=n.length;i<a;i+=2)for(let f=0,u=o.length;f<u;f+=2)if(n[i]==o[f]&&n[i+1]==o[f+1]&&n[(i+2)%a]==o[(f+u-2)%u]&&n[(i+3)%a]==o[(f+u-1)%u]){yield r;break t}}}}_cell(e){let{circumcenters:n,delaunay:{inedges:r,halfedges:o,triangles:i}}=this,a=r[e];if(a===-1)return null;let f=[],u=a;do{let s=Math.floor(u/3);if(f.push(n[s*2],n[s*2+1]),u=u%3===2?u-2:u+1,i[u]!==e)break;u=o[u]}while(u!==a&&u!==-1);return f}_clip(e){if(e===0&&this.delaunay.hull.length===1)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];let n=this._cell(e);if(n===null)return null;let{vectors:r}=this,o=e*4;return r[o]||r[o+1]?this._clipInfinite(e,n,r[o],r[o+1],r[o+2],r[o+3]):this._clipFinite(e,n)}_clipFinite(e,n){let r=n.length,o=null,i,a,f=n[r-2],u=n[r-1],s,c=this._regioncode(f,u),h,l=0;for(let p=0;p<r;p+=2)if(i=f,a=u,f=n[p],u=n[p+1],s=c,c=this._regioncode(f,u),s===0&&c===0)h=l,l=0,o?o.push(f,u):o=[f,u];else{let g,x,d,m,v;if(s===0){if((g=this._clipSegment(i,a,f,u,s,c))===null)continue;[x,d,m,v]=g}else{if((g=this._clipSegment(f,u,i,a,c,s))===null)continue;[m,v,x,d]=g,h=l,l=this._edgecode(x,d),h&&l&&this._edge(e,h,l,o,o.length),o?o.push(x,d):o=[x,d]}h=l,l=this._edgecode(m,v),h&&l&&this._edge(e,h,l,o,o.length),o?o.push(m,v):o=[m,v]}if(o)h=l,l=this._edgecode(o[0],o[1]),h&&l&&this._edge(e,h,l,o,o.length);else if(this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return o}_clipSegment(e,n,r,o,i,a){for(;;){if(i===0&&a===0)return[e,n,r,o];if(i&a)return null;let f,u,s=i||a;s&8?(f=e+(r-e)*(this.ymax-n)/(o-n),u=this.ymax):s&4?(f=e+(r-e)*(this.ymin-n)/(o-n),u=this.ymin):s&2?(u=n+(o-n)*(this.xmax-e)/(r-e),f=this.xmax):(u=n+(o-n)*(this.xmin-e)/(r-e),f=this.xmin),i?(e=f,n=u,i=this._regioncode(e,n)):(r=f,o=u,a=this._regioncode(r,o))}}_clipInfinite(e,n,r,o,i,a){let f=Array.from(n),u;if((u=this._project(f[0],f[1],r,o))&&f.unshift(u[0],u[1]),(u=this._project(f[f.length-2],f[f.length-1],i,a))&&f.push(u[0],u[1]),f=this._clipFinite(e,f))for(let s=0,c=f.length,h,l=this._edgecode(f[c-2],f[c-1]);s<c;s+=2)h=l,l=this._edgecode(f[s],f[s+1]),h&&l&&(s=this._edge(e,h,l,f,s),c=f.length);else this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(f=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return f}_edge(e,n,r,o,i){for(;n!==r;){let a,f;switch(n){case 5:n=4;continue;case 4:n=6,a=this.xmax,f=this.ymin;break;case 6:n=2;continue;case 2:n=10,a=this.xmax,f=this.ymax;break;case 10:n=8;continue;case 8:n=9,a=this.xmin,f=this.ymax;break;case 9:n=1;continue;case 1:n=5,a=this.xmin,f=this.ymin;break}(o[i]!==a||o[i+1]!==f)&&this.contains(e,a,f)&&(o.splice(i,0,a,f),i+=2)}if(o.length>4)for(let a=0;a<o.length;a+=2){let f=(a+2)%o.length,u=(a+4)%o.length;(o[a]===o[f]&&o[f]===o[u]||o[a+1]===o[f+1]&&o[f+1]===o[u+1])&&(o.splice(f,2),a-=2)}return i}_project(e,n,r,o){let i=1/0,a,f,u;if(o<0){if(n<=this.ymin)return null;(a=(this.ymin-n)/o)<i&&(u=this.ymin,f=e+(i=a)*r)}else if(o>0){if(n>=this.ymax)return null;(a=(this.ymax-n)/o)<i&&(u=this.ymax,f=e+(i=a)*r)}if(r>0){if(e>=this.xmax)return null;(a=(this.xmax-e)/r)<i&&(f=this.xmax,u=n+(i=a)*o)}else if(r<0){if(e<=this.xmin)return null;(a=(this.xmin-e)/r)<i&&(f=this.xmin,u=n+(i=a)*o)}return[f,u]}_edgecode(e,n){return(e===this.xmin?1:e===this.xmax?2:0)|(n===this.ymin?4:n===this.ymax?8:0)}_regioncode(e,n){return(e<this.xmin?1:e>this.xmax?2:0)|(n<this.ymin?4:n>this.ymax?8:0)}};var n6=2*Math.PI,yo=Math.pow;function r6(t){return t[0]}function o6(t){return t[1]}function i6(t){let{triangles:e,coords:n}=t;for(let r=0;r<e.length;r+=3){let o=2*e[r],i=2*e[r+1],a=2*e[r+2];if((n[a]-n[o])*(n[i+1]-n[o+1])-(n[i]-n[o])*(n[a+1]-n[o+1])>1e-10)return!1}return!0}function a6(t,e,n){return[t+Math.sin(t+e)*n,e+Math.cos(t-e)*n]}var wr=class{static from(e,n=r6,r=o6,o){return new wr("length"in e?f6(e,n,r,o):Float64Array.from(u6(e,n,r,o)))}constructor(e){this._delaunator=new Wn(e),this.inedges=new Int32Array(e.length/2),this._hullIndex=new Int32Array(e.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){let e=this._delaunator,n=this.points;if(e.hull&&e.hull.length>2&&i6(e)){this.collinear=Int32Array.from({length:n.length/2},(l,p)=>p).sort((l,p)=>n[2*l]-n[2*p]||n[2*l+1]-n[2*p+1]);let u=this.collinear[0],s=this.collinear[this.collinear.length-1],c=[n[2*u],n[2*u+1],n[2*s],n[2*s+1]],h=1e-8*Math.hypot(c[3]-c[1],c[2]-c[0]);for(let l=0,p=n.length/2;l<p;++l){let g=a6(n[2*l],n[2*l+1],h);n[2*l]=g[0],n[2*l+1]=g[1]}this._delaunator=new Wn(n)}else delete this.collinear;let r=this.halfedges=this._delaunator.halfedges,o=this.hull=this._delaunator.hull,i=this.triangles=this._delaunator.triangles,a=this.inedges.fill(-1),f=this._hullIndex.fill(-1);for(let u=0,s=r.length;u<s;++u){let c=i[u%3===2?u-2:u+1];(r[u]===-1||a[c]===-1)&&(a[c]=u)}for(let u=0,s=o.length;u<s;++u)f[o[u]]=u;o.length<=2&&o.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=o[0],a[o[0]]=1,o.length===2&&(a[o[1]]=0,this.triangles[1]=o[1],this.triangles[2]=o[1]))}voronoi(e){return new _r(this,e)}*neighbors(e){let{inedges:n,hull:r,_hullIndex:o,halfedges:i,triangles:a,collinear:f}=this;if(f){let h=f.indexOf(e);h>0&&(yield f[h-1]),h<f.length-1&&(yield f[h+1]);return}let u=n[e];if(u===-1)return;let s=u,c=-1;do{if(yield c=a[s],s=s%3===2?s-2:s+1,a[s]!==e)return;if(s=i[s],s===-1){let h=r[(o[e]+1)%r.length];h!==c&&(yield h);return}}while(s!==u)}find(e,n,r=0){if(e=+e,e!==e||(n=+n,n!==n))return-1;let o=r,i;for(;(i=this._step(r,e,n))>=0&&i!==r&&i!==o;)r=i;return i}_step(e,n,r){let{inedges:o,hull:i,_hullIndex:a,halfedges:f,triangles:u,points:s}=this;if(o[e]===-1||!s.length)return(e+1)%(s.length>>1);let c=e,h=yo(n-s[e*2],2)+yo(r-s[e*2+1],2),l=o[e],p=l;do{let g=u[p],x=yo(n-s[g*2],2)+yo(r-s[g*2+1],2);if(x<h&&(h=x,c=g),p=p%3===2?p-2:p+1,u[p]!==e)break;if(p=f[p],p===-1){if(p=i[(a[e]+1)%i.length],p!==g&&yo(n-s[p*2],2)+yo(r-s[p*2+1],2)<h)return p;break}}while(p!==l);return c}render(e){let n=e==null?e=new me:void 0,{points:r,halfedges:o,triangles:i}=this;for(let a=0,f=o.length;a<f;++a){let u=o[a];if(u<a)continue;let s=i[a]*2,c=i[u]*2;e.moveTo(r[s],r[s+1]),e.lineTo(r[c],r[c+1])}return this.renderHull(e),n&&n.value()}renderPoints(e,n){n===void 0&&(!e||typeof e.moveTo!="function")&&(n=e,e=null),n=n==null?2:+n;let r=e==null?e=new me:void 0,{points:o}=this;for(let i=0,a=o.length;i<a;i+=2){let f=o[i],u=o[i+1];e.moveTo(f+n,u),e.arc(f,u,n,0,n6)}return r&&r.value()}renderHull(e){let n=e==null?e=new me:void 0,{hull:r,points:o}=this,i=r[0]*2,a=r.length;e.moveTo(o[i],o[i+1]);for(let f=1;f<a;++f){let u=2*r[f];e.lineTo(o[u],o[u+1])}return e.closePath(),n&&n.value()}hullPolygon(){let e=new $n;return this.renderHull(e),e.value()}renderTriangle(e,n){let r=n==null?n=new me:void 0,{points:o,triangles:i}=this,a=i[e*=3]*2,f=i[e+1]*2,u=i[e+2]*2;return n.moveTo(o[a],o[a+1]),n.lineTo(o[f],o[f+1]),n.lineTo(o[u],o[u+1]),n.closePath(),r&&r.value()}*trianglePolygons(){let{triangles:e}=this;for(let n=0,r=e.length/3;n<r;++n)yield this.trianglePolygon(n)}trianglePolygon(e){let n=new $n;return this.renderTriangle(e,n),n.value()}};function f6(t,e,n,r){let o=t.length,i=new Float64Array(o*2);for(let a=0;a<o;++a){let f=t[a];i[a*2]=e.call(r,f,a,t),i[a*2+1]=n.call(r,f,a,t)}return i}function*u6(t,e,n,r){let o=0;for(let i of t)yield e.call(r,i,o,t),yield n.call(r,i,o,t),++o}var l1={},ul={},sl=34,Li=10,cl=13;function p1(t){return new Function("d","return {"+t.map(function(e,n){return JSON.stringify(e)+": d["+n+'] || ""'}).join(",")+"}")}function s6(t,e){var n=p1(t);return function(r,o){return e(n(r),o,t)}}function h1(t){var e=Object.create(null),n=[];return t.forEach(function(r){for(var o in r)o in e||n.push(e[o]=o)}),n}function ue(t,e){var n=t+"",r=n.length;return r<e?new Array(e-r+1).join(0)+n:n}function c6(t){return t<0?"-"+ue(-t,6):t>9999?"+"+ue(t,6):ue(t,4)}function l6(t){var e=t.getUTCHours(),n=t.getUTCMinutes(),r=t.getUTCSeconds(),o=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":c6(t.getUTCFullYear(),4)+"-"+ue(t.getUTCMonth()+1,2)+"-"+ue(t.getUTCDate(),2)+(o?"T"+ue(e,2)+":"+ue(n,2)+":"+ue(r,2)+"."+ue(o,3)+"Z":r?"T"+ue(e,2)+":"+ue(n,2)+":"+ue(r,2)+"Z":n||e?"T"+ue(e,2)+":"+ue(n,2)+"Z":"")}function Vn(t){var e=new RegExp('["'+t+`
\r]`),n=t.charCodeAt(0);function r(h,l){var p,g,x=o(h,function(d,m){if(p)return p(d,m-1);g=d,p=l?s6(d,l):p1(d)});return x.columns=g||[],x}function o(h,l){var p=[],g=h.length,x=0,d=0,m,v=g<=0,b=!1;h.charCodeAt(g-1)===Li&&--g,h.charCodeAt(g-1)===cl&&--g;function y(){if(v)return ul;if(b)return b=!1,l1;var w,E=x,N;if(h.charCodeAt(E)===sl){for(;x++<g&&h.charCodeAt(x)!==sl||h.charCodeAt(++x)===sl;);return(w=x)>=g?v=!0:(N=h.charCodeAt(x++))===Li?b=!0:N===cl&&(b=!0,h.charCodeAt(x)===Li&&++x),h.slice(E+1,w-1).replace(/""/g,'"')}for(;x<g;){if((N=h.charCodeAt(w=x++))===Li)b=!0;else if(N===cl)b=!0,h.charCodeAt(x)===Li&&++x;else if(N!==n)continue;return h.slice(E,w)}return v=!0,h.slice(E,g)}for(;(m=y())!==ul;){for(var _=[];m!==l1&&m!==ul;)_.push(m),m=y();l&&(_=l(_,d++))==null||p.push(_)}return p}function i(h,l){return h.map(function(p){return l.map(function(g){return c(p[g])}).join(t)})}function a(h,l){return l==null&&(l=h1(h)),[l.map(c).join(t)].concat(i(h,l)).join(`
`)}function f(h,l){return l==null&&(l=h1(h)),i(h,l).join(`
`)}function u(h){return h.map(s).join(`
`)}function s(h){return h.map(c).join(t)}function c(h){return h==null?"":h instanceof Date?l6(h):e.test(h+="")?'"'+h.replace(/"/g,'""')+'"':h}return{parse:r,parseRows:o,format:a,formatBody:f,formatRows:u,formatRow:s,formatValue:c}}var Mr=Vn(","),Nf=Mr.parse,d1=Mr.parseRows,m1=Mr.format,g1=Mr.formatBody,x1=Mr.formatRows,y1=Mr.formatRow,b1=Mr.formatValue;var Sr=Vn("	"),Rf=Sr.parse,v1=Sr.parseRows,_1=Sr.format,w1=Sr.formatBody,M1=Sr.formatRows,S1=Sr.formatRow,T1=Sr.formatValue;function ll(t){for(var e in t){var n=t[e].trim(),r,o;if(!n)n=null;else if(n==="true")n=!0;else if(n==="false")n=!1;else if(n==="NaN")n=NaN;else if(!isNaN(r=+n))n=r;else if(o=n.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/))h6&&!!o[4]&&!o[7]&&(n=n.replace(/-/g,"/").replace(/T/," ")),n=new Date(n);else continue;t[e]=n}return t}var h6=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function p6(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}function A1(t,e){return fetch(t,e).then(p6)}function d6(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}function k1(t,e){return fetch(t,e).then(d6)}function m6(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}function Tr(t,e){return fetch(t,e).then(m6)}function E1(t){return function(e,n,r){return arguments.length===2&&typeof n=="function"&&(r=n,n=void 0),Tr(e,n).then(function(o){return t(o,r)})}}function hl(t,e,n,r){arguments.length===3&&typeof n=="function"&&(r=n,n=void 0);var o=Vn(t);return Tr(e,n).then(function(i){return o.parse(i,r)})}var N1=E1(Nf),R1=E1(Rf);function C1(t,e){return new Promise(function(n,r){var o=new Image;for(var i in e)o[i]=e[i];o.onerror=r,o.onload=function(){n(o)},o.src=t})}function g6(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);if(!(t.status===204||t.status===205))return t.json()}function I1(t,e){return fetch(t,e).then(g6)}function pl(t){return(e,n)=>Tr(e,n).then(r=>new DOMParser().parseFromString(r,t))}var P1=pl("application/xml"),D1=pl("text/html"),q1=pl("image/svg+xml");function O1(t,e){var n,r=1;t==null&&(t=0),e==null&&(e=0);function o(){var i,a=n.length,f,u=0,s=0;for(i=0;i<a;++i)f=n[i],u+=f.x,s+=f.y;for(u=(u/a-t)*r,s=(s/a-e)*r,i=0;i<a;++i)f=n[i],f.x-=u,f.y-=s}return o.initialize=function(i){n=i},o.x=function(i){return arguments.length?(t=+i,o):t},o.y=function(i){return arguments.length?(e=+i,o):e},o.strength=function(i){return arguments.length?(r=+i,o):r},o}function F1(t){let e=+this._x.call(null,t),n=+this._y.call(null,t);return z1(this.cover(e,n),e,n,t)}function z1(t,e,n,r){if(isNaN(e)||isNaN(n))return t;var o,i=t._root,a={data:r},f=t._x0,u=t._y0,s=t._x1,c=t._y1,h,l,p,g,x,d,m,v;if(!i)return t._root=a,t;for(;i.length;)if((x=e>=(h=(f+s)/2))?f=h:s=h,(d=n>=(l=(u+c)/2))?u=l:c=l,o=i,!(i=i[m=d<<1|x]))return o[m]=a,t;if(p=+t._x.call(null,i.data),g=+t._y.call(null,i.data),e===p&&n===g)return a.next=i,o?o[m]=a:t._root=a,t;do o=o?o[m]=new Array(4):t._root=new Array(4),(x=e>=(h=(f+s)/2))?f=h:s=h,(d=n>=(l=(u+c)/2))?u=l:c=l;while((m=d<<1|x)===(v=(g>=l)<<1|p>=h));return o[v]=i,o[m]=a,t}function L1(t){var e,n,r=t.length,o,i,a=new Array(r),f=new Array(r),u=1/0,s=1/0,c=-1/0,h=-1/0;for(n=0;n<r;++n)isNaN(o=+this._x.call(null,e=t[n]))||isNaN(i=+this._y.call(null,e))||(a[n]=o,f[n]=i,o<u&&(u=o),o>c&&(c=o),i<s&&(s=i),i>h&&(h=i));if(u>c||s>h)return this;for(this.cover(u,s).cover(c,h),n=0;n<r;++n)z1(this,a[n],f[n],t[n]);return this}function Y1(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,r=this._y0,o=this._x1,i=this._y1;if(isNaN(n))o=(n=Math.floor(t))+1,i=(r=Math.floor(e))+1;else{for(var a=o-n||1,f=this._root,u,s;n>t||t>=o||r>e||e>=i;)switch(s=(e<r)<<1|t<n,u=new Array(4),u[s]=f,f=u,a*=2,s){case 0:o=n+a,i=r+a;break;case 1:n=o-a,i=r+a;break;case 2:o=n+a,r=i-a;break;case 3:n=o-a,r=i-a;break}this._root&&this._root.length&&(this._root=f)}return this._x0=n,this._y0=r,this._x1=o,this._y1=i,this}function U1(){var t=[];return this.visit(function(e){if(!e.length)do t.push(e.data);while(e=e.next)}),t}function B1(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function Ft(t,e,n,r,o){this.node=t,this.x0=e,this.y0=n,this.x1=r,this.y1=o}function H1(t,e,n){var r,o=this._x0,i=this._y0,a,f,u,s,c=this._x1,h=this._y1,l=[],p=this._root,g,x;for(p&&l.push(new Ft(p,o,i,c,h)),n==null?n=1/0:(o=t-n,i=e-n,c=t+n,h=e+n,n*=n);g=l.pop();)if(!(!(p=g.node)||(a=g.x0)>c||(f=g.y0)>h||(u=g.x1)<o||(s=g.y1)<i))if(p.length){var d=(a+u)/2,m=(f+s)/2;l.push(new Ft(p[3],d,m,u,s),new Ft(p[2],a,m,d,s),new Ft(p[1],d,f,u,m),new Ft(p[0],a,f,d,m)),(x=(e>=m)<<1|t>=d)&&(g=l[l.length-1],l[l.length-1]=l[l.length-1-x],l[l.length-1-x]=g)}else{var v=t-+this._x.call(null,p.data),b=e-+this._y.call(null,p.data),y=v*v+b*b;if(y<n){var _=Math.sqrt(n=y);o=t-_,i=e-_,c=t+_,h=e+_,r=p.data}}return r}function X1(t){if(isNaN(c=+this._x.call(null,t))||isNaN(h=+this._y.call(null,t)))return this;var e,n=this._root,r,o,i,a=this._x0,f=this._y0,u=this._x1,s=this._y1,c,h,l,p,g,x,d,m;if(!n)return this;if(n.length)for(;;){if((g=c>=(l=(a+u)/2))?a=l:u=l,(x=h>=(p=(f+s)/2))?f=p:s=p,e=n,!(n=n[d=x<<1|g]))return this;if(!n.length)break;(e[d+1&3]||e[d+2&3]||e[d+3&3])&&(r=e,m=d)}for(;n.data!==t;)if(o=n,!(n=n.next))return this;return(i=n.next)&&delete n.next,o?(i?o.next=i:delete o.next,this):e?(i?e[d]=i:delete e[d],(n=e[0]||e[1]||e[2]||e[3])&&n===(e[3]||e[2]||e[1]||e[0])&&!n.length&&(r?r[m]=n:this._root=n),this):(this._root=i,this)}function W1(t){for(var e=0,n=t.length;e<n;++e)this.remove(t[e]);return this}function $1(){return this._root}function V1(){var t=0;return this.visit(function(e){if(!e.length)do++t;while(e=e.next)}),t}function G1(t){var e=[],n,r=this._root,o,i,a,f,u;for(r&&e.push(new Ft(r,this._x0,this._y0,this._x1,this._y1));n=e.pop();)if(!t(r=n.node,i=n.x0,a=n.y0,f=n.x1,u=n.y1)&&r.length){var s=(i+f)/2,c=(a+u)/2;(o=r[3])&&e.push(new Ft(o,s,c,f,u)),(o=r[2])&&e.push(new Ft(o,i,c,s,u)),(o=r[1])&&e.push(new Ft(o,s,a,f,c)),(o=r[0])&&e.push(new Ft(o,i,a,s,c))}return this}function Z1(t){var e=[],n=[],r;for(this._root&&e.push(new Ft(this._root,this._x0,this._y0,this._x1,this._y1));r=e.pop();){var o=r.node;if(o.length){var i,a=r.x0,f=r.y0,u=r.x1,s=r.y1,c=(a+u)/2,h=(f+s)/2;(i=o[0])&&e.push(new Ft(i,a,f,c,h)),(i=o[1])&&e.push(new Ft(i,c,f,u,h)),(i=o[2])&&e.push(new Ft(i,a,h,c,s)),(i=o[3])&&e.push(new Ft(i,c,h,u,s))}n.push(r)}for(;r=n.pop();)t(r.node,r.x0,r.y0,r.x1,r.y1);return this}function Q1(t){return t[0]}function K1(t){return arguments.length?(this._x=t,this):this._x}function J1(t){return t[1]}function j1(t){return arguments.length?(this._y=t,this):this._y}function Gn(t,e,n){var r=new dl(e==null?Q1:e,n==null?J1:n,NaN,NaN,NaN,NaN);return t==null?r:r.addAll(t)}function dl(t,e,n,r,o,i){this._x=t,this._y=e,this._x0=n,this._y0=r,this._x1=o,this._y1=i,this._root=void 0}function tg(t){for(var e={data:t.data},n=e;t=t.next;)n=n.next={data:t.data};return e}var jt=Gn.prototype=dl.prototype;jt.copy=function(){var t=new dl(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root,n,r;if(!e)return t;if(!e.length)return t._root=tg(e),t;for(n=[{source:e,target:t._root=new Array(4)}];e=n.pop();)for(var o=0;o<4;++o)(r=e.source[o])&&(r.length?n.push({source:r,target:e.target[o]=new Array(4)}):e.target[o]=tg(r));return t};jt.add=F1;jt.addAll=L1;jt.cover=Y1;jt.data=U1;jt.extent=B1;jt.find=H1;jt.remove=X1;jt.removeAll=W1;jt.root=$1;jt.size=V1;jt.visit=G1;jt.visitAfter=Z1;jt.x=K1;jt.y=j1;function bt(t){return function(){return t}}function Ie(t){return(t()-.5)*1e-6}function x6(t){return t.x+t.vx}function y6(t){return t.y+t.vy}function eg(t){var e,n,r,o=1,i=1;typeof t!="function"&&(t=bt(t==null?1:+t));function a(){for(var s,c=e.length,h,l,p,g,x,d,m=0;m<i;++m)for(h=Gn(e,x6,y6).visitAfter(f),s=0;s<c;++s)l=e[s],x=n[l.index],d=x*x,p=l.x+l.vx,g=l.y+l.vy,h.visit(v);function v(b,y,_,w,E){var N=b.data,P=b.r,T=x+P;if(N){if(N.index>l.index){var S=p-N.x-N.vx,C=g-N.y-N.vy,R=S*S+C*C;R<T*T&&(S===0&&(S=Ie(r),R+=S*S),C===0&&(C=Ie(r),R+=C*C),R=(T-(R=Math.sqrt(R)))/R*o,l.vx+=(S*=R)*(T=(P*=P)/(d+P)),l.vy+=(C*=R)*T,N.vx-=S*(T=1-T),N.vy-=C*T)}return}return y>p+T||w<p-T||_>g+T||E<g-T}}function f(s){if(s.data)return s.r=n[s.data.index];for(var c=s.r=0;c<4;++c)s[c]&&s[c].r>s.r&&(s.r=s[c].r)}function u(){if(!!e){var s,c=e.length,h;for(n=new Array(c),s=0;s<c;++s)h=e[s],n[h.index]=+t(h,s,e)}}return a.initialize=function(s,c){e=s,r=c,u()},a.iterations=function(s){return arguments.length?(i=+s,a):i},a.strength=function(s){return arguments.length?(o=+s,a):o},a.radius=function(s){return arguments.length?(t=typeof s=="function"?s:bt(+s),u(),a):t},a}function b6(t){return t.index}function ng(t,e){var n=t.get(e);if(!n)throw new Error("node not found: "+e);return n}function rg(t){var e=b6,n=h,r,o=bt(30),i,a,f,u,s,c=1;t==null&&(t=[]);function h(d){return 1/Math.min(f[d.source.index],f[d.target.index])}function l(d){for(var m=0,v=t.length;m<c;++m)for(var b=0,y,_,w,E,N,P,T;b<v;++b)y=t[b],_=y.source,w=y.target,E=w.x+w.vx-_.x-_.vx||Ie(s),N=w.y+w.vy-_.y-_.vy||Ie(s),P=Math.sqrt(E*E+N*N),P=(P-i[b])/P*d*r[b],E*=P,N*=P,w.vx-=E*(T=u[b]),w.vy-=N*T,_.vx+=E*(T=1-T),_.vy+=N*T}function p(){if(!!a){var d,m=a.length,v=t.length,b=new Map(a.map((_,w)=>[e(_,w,a),_])),y;for(d=0,f=new Array(m);d<v;++d)y=t[d],y.index=d,typeof y.source!="object"&&(y.source=ng(b,y.source)),typeof y.target!="object"&&(y.target=ng(b,y.target)),f[y.source.index]=(f[y.source.index]||0)+1,f[y.target.index]=(f[y.target.index]||0)+1;for(d=0,u=new Array(v);d<v;++d)y=t[d],u[d]=f[y.source.index]/(f[y.source.index]+f[y.target.index]);r=new Array(v),g(),i=new Array(v),x()}}function g(){if(!!a)for(var d=0,m=t.length;d<m;++d)r[d]=+n(t[d],d,t)}function x(){if(!!a)for(var d=0,m=t.length;d<m;++d)i[d]=+o(t[d],d,t)}return l.initialize=function(d,m){a=d,s=m,p()},l.links=function(d){return arguments.length?(t=d,p(),l):t},l.id=function(d){return arguments.length?(e=d,l):e},l.iterations=function(d){return arguments.length?(c=+d,l):c},l.strength=function(d){return arguments.length?(n=typeof d=="function"?d:bt(+d),g(),l):n},l.distance=function(d){return arguments.length?(o=typeof d=="function"?d:bt(+d),x(),l):o},l}function og(){let t=1;return()=>(t=(1664525*t+1013904223)%4294967296)/4294967296}function ig(t){return t.x}function ag(t){return t.y}var v6=10,_6=Math.PI*(3-Math.sqrt(5));function fg(t){var e,n=1,r=.001,o=1-Math.pow(r,1/300),i=0,a=.6,f=new Map,u=gr(h),s=pe("tick","end"),c=og();t==null&&(t=[]);function h(){l(),s.call("tick",e),n<r&&(u.stop(),s.call("end",e))}function l(x){var d,m=t.length,v;x===void 0&&(x=1);for(var b=0;b<x;++b)for(n+=(i-n)*o,f.forEach(function(y){y(n)}),d=0;d<m;++d)v=t[d],v.fx==null?v.x+=v.vx*=a:(v.x=v.fx,v.vx=0),v.fy==null?v.y+=v.vy*=a:(v.y=v.fy,v.vy=0);return e}function p(){for(var x=0,d=t.length,m;x<d;++x){if(m=t[x],m.index=x,m.fx!=null&&(m.x=m.fx),m.fy!=null&&(m.y=m.fy),isNaN(m.x)||isNaN(m.y)){var v=v6*Math.sqrt(.5+x),b=x*_6;m.x=v*Math.cos(b),m.y=v*Math.sin(b)}(isNaN(m.vx)||isNaN(m.vy))&&(m.vx=m.vy=0)}}function g(x){return x.initialize&&x.initialize(t,c),x}return p(),e={tick:l,restart:function(){return u.restart(h),e},stop:function(){return u.stop(),e},nodes:function(x){return arguments.length?(t=x,p(),f.forEach(g),e):t},alpha:function(x){return arguments.length?(n=+x,e):n},alphaMin:function(x){return arguments.length?(r=+x,e):r},alphaDecay:function(x){return arguments.length?(o=+x,e):+o},alphaTarget:function(x){return arguments.length?(i=+x,e):i},velocityDecay:function(x){return arguments.length?(a=1-x,e):1-a},randomSource:function(x){return arguments.length?(c=x,f.forEach(g),e):c},force:function(x,d){return arguments.length>1?(d==null?f.delete(x):f.set(x,g(d)),e):f.get(x)},find:function(x,d,m){var v=0,b=t.length,y,_,w,E,N;for(m==null?m=1/0:m*=m,v=0;v<b;++v)E=t[v],y=x-E.x,_=d-E.y,w=y*y+_*_,w<m&&(N=E,m=w);return N},on:function(x,d){return arguments.length>1?(s.on(x,d),e):s.on(x)}}}function ug(){var t,e,n,r,o=bt(-30),i,a=1,f=1/0,u=.81;function s(p){var g,x=t.length,d=Gn(t,ig,ag).visitAfter(h);for(r=p,g=0;g<x;++g)e=t[g],d.visit(l)}function c(){if(!!t){var p,g=t.length,x;for(i=new Array(g),p=0;p<g;++p)x=t[p],i[x.index]=+o(x,p,t)}}function h(p){var g=0,x,d,m=0,v,b,y;if(p.length){for(v=b=y=0;y<4;++y)(x=p[y])&&(d=Math.abs(x.value))&&(g+=x.value,m+=d,v+=d*x.x,b+=d*x.y);p.x=v/m,p.y=b/m}else{x=p,x.x=x.data.x,x.y=x.data.y;do g+=i[x.data.index];while(x=x.next)}p.value=g}function l(p,g,x,d){if(!p.value)return!0;var m=p.x-e.x,v=p.y-e.y,b=d-g,y=m*m+v*v;if(b*b/u<y)return y<f&&(m===0&&(m=Ie(n),y+=m*m),v===0&&(v=Ie(n),y+=v*v),y<a&&(y=Math.sqrt(a*y)),e.vx+=m*p.value*r/y,e.vy+=v*p.value*r/y),!0;if(p.length||y>=f)return;(p.data!==e||p.next)&&(m===0&&(m=Ie(n),y+=m*m),v===0&&(v=Ie(n),y+=v*v),y<a&&(y=Math.sqrt(a*y)));do p.data!==e&&(b=i[p.data.index]*r/y,e.vx+=m*b,e.vy+=v*b);while(p=p.next)}return s.initialize=function(p,g){t=p,n=g,c()},s.strength=function(p){return arguments.length?(o=typeof p=="function"?p:bt(+p),c(),s):o},s.distanceMin=function(p){return arguments.length?(a=p*p,s):Math.sqrt(a)},s.distanceMax=function(p){return arguments.length?(f=p*p,s):Math.sqrt(f)},s.theta=function(p){return arguments.length?(u=p*p,s):Math.sqrt(u)},s}function sg(t,e,n){var r,o=bt(.1),i,a;typeof t!="function"&&(t=bt(+t)),e==null&&(e=0),n==null&&(n=0);function f(s){for(var c=0,h=r.length;c<h;++c){var l=r[c],p=l.x-e||1e-6,g=l.y-n||1e-6,x=Math.sqrt(p*p+g*g),d=(a[c]-x)*i[c]*s/x;l.vx+=p*d,l.vy+=g*d}}function u(){if(!!r){var s,c=r.length;for(i=new Array(c),a=new Array(c),s=0;s<c;++s)a[s]=+t(r[s],s,r),i[s]=isNaN(a[s])?0:+o(r[s],s,r)}}return f.initialize=function(s){r=s,u()},f.strength=function(s){return arguments.length?(o=typeof s=="function"?s:bt(+s),u(),f):o},f.radius=function(s){return arguments.length?(t=typeof s=="function"?s:bt(+s),u(),f):t},f.x=function(s){return arguments.length?(e=+s,f):e},f.y=function(s){return arguments.length?(n=+s,f):n},f}function cg(t){var e=bt(.1),n,r,o;typeof t!="function"&&(t=bt(t==null?0:+t));function i(f){for(var u=0,s=n.length,c;u<s;++u)c=n[u],c.vx+=(o[u]-c.x)*r[u]*f}function a(){if(!!n){var f,u=n.length;for(r=new Array(u),o=new Array(u),f=0;f<u;++f)r[f]=isNaN(o[f]=+t(n[f],f,n))?0:+e(n[f],f,n)}}return i.initialize=function(f){n=f,a()},i.strength=function(f){return arguments.length?(e=typeof f=="function"?f:bt(+f),a(),i):e},i.x=function(f){return arguments.length?(t=typeof f=="function"?f:bt(+f),a(),i):t},i}function lg(t){var e=bt(.1),n,r,o;typeof t!="function"&&(t=bt(t==null?0:+t));function i(f){for(var u=0,s=n.length,c;u<s;++u)c=n[u],c.vy+=(o[u]-c.y)*r[u]*f}function a(){if(!!n){var f,u=n.length;for(r=new Array(u),o=new Array(u),f=0;f<u;++f)r[f]=isNaN(o[f]=+t(n[f],f,n))?0:+e(n[f],f,n)}}return i.initialize=function(f){n=f,a()},i.strength=function(f){return arguments.length?(e=typeof f=="function"?f:bt(+f),a(),i):e},i.y=function(f){return arguments.length?(t=typeof f=="function"?f:bt(+f),a(),i):t},i}function hg(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)}function Ar(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,r=t.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+t.slice(n+1)]}function Qe(t){return t=Ar(Math.abs(t)),t?t[1]:NaN}function pg(t,e){return function(n,r){for(var o=n.length,i=[],a=0,f=t[0],u=0;o>0&&f>0&&(u+f+1>r&&(f=Math.max(1,r-u)),i.push(n.substring(o-=f,o+f)),!((u+=f+1)>r));)f=t[a=(a+1)%t.length];return i.reverse().join(e)}}function dg(t){return function(e){return e.replace(/[0-9]/g,function(n){return t[+n]})}}var w6=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Pe(t){if(!(e=w6.exec(t)))throw new Error("invalid format: "+t);var e;return new Yi({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}Pe.prototype=Yi.prototype;function Yi(t){this.fill=t.fill===void 0?" ":t.fill+"",this.align=t.align===void 0?">":t.align+"",this.sign=t.sign===void 0?"-":t.sign+"",this.symbol=t.symbol===void 0?"":t.symbol+"",this.zero=!!t.zero,this.width=t.width===void 0?void 0:+t.width,this.comma=!!t.comma,this.precision=t.precision===void 0?void 0:+t.precision,this.trim=!!t.trim,this.type=t.type===void 0?"":t.type+""}Yi.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function mg(t){t:for(var e=t.length,n=1,r=-1,o;n<e;++n)switch(t[n]){case".":r=o=n;break;case"0":r===0&&(r=n),o=n;break;default:if(!+t[n])break t;r>0&&(r=0);break}return r>0?t.slice(0,r)+t.slice(o+1):t}var ml;function gg(t,e){var n=Ar(t,e);if(!n)return t+"";var r=n[0],o=n[1],i=o-(ml=Math.max(-8,Math.min(8,Math.floor(o/3)))*3)+1,a=r.length;return i===a?r:i>a?r+new Array(i-a+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+Ar(t,Math.max(0,e+i-1))[0]}function gl(t,e){var n=Ar(t,e);if(!n)return t+"";var r=n[0],o=n[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")}var xl={"%":(t,e)=>(t*100).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:hg,e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>gl(t*100,e),r:gl,s:gg,X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function yl(t){return t}var xg=Array.prototype.map,yg=["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];function Cf(t){var e=t.grouping===void 0||t.thousands===void 0?yl:pg(xg.call(t.grouping,Number),t.thousands+""),n=t.currency===void 0?"":t.currency[0]+"",r=t.currency===void 0?"":t.currency[1]+"",o=t.decimal===void 0?".":t.decimal+"",i=t.numerals===void 0?yl:dg(xg.call(t.numerals,String)),a=t.percent===void 0?"%":t.percent+"",f=t.minus===void 0?"\u2212":t.minus+"",u=t.nan===void 0?"NaN":t.nan+"";function s(h){h=Pe(h);var l=h.fill,p=h.align,g=h.sign,x=h.symbol,d=h.zero,m=h.width,v=h.comma,b=h.precision,y=h.trim,_=h.type;_==="n"?(v=!0,_="g"):xl[_]||(b===void 0&&(b=12),y=!0,_="g"),(d||l==="0"&&p==="=")&&(d=!0,l="0",p="=");var w=x==="$"?n:x==="#"&&/[boxX]/.test(_)?"0"+_.toLowerCase():"",E=x==="$"?r:/[%p]/.test(_)?a:"",N=xl[_],P=/[defgprs%]/.test(_);b=b===void 0?6:/[gprs]/.test(_)?Math.max(1,Math.min(21,b)):Math.max(0,Math.min(20,b));function T(S){var C=w,R=E,M,A,k;if(_==="c")R=N(S)+R,S="";else{S=+S;var I=S<0||1/S<0;if(S=isNaN(S)?u:N(Math.abs(S),b),y&&(S=mg(S)),I&&+S==0&&g!=="+"&&(I=!1),C=(I?g==="("?g:f:g==="-"||g==="("?"":g)+C,R=(_==="s"?yg[8+ml/3]:"")+R+(I&&g==="("?")":""),P){for(M=-1,A=S.length;++M<A;)if(k=S.charCodeAt(M),48>k||k>57){R=(k===46?o+S.slice(M+1):S.slice(M))+R,S=S.slice(0,M);break}}}v&&!d&&(S=e(S,1/0));var q=C.length+S.length+R.length,O=q<m?new Array(m-q+1).join(l):"";switch(v&&d&&(S=e(O+S,O.length?m-R.length:1/0),O=""),p){case"<":S=C+S+R+O;break;case"=":S=C+O+S+R;break;case"^":S=O.slice(0,q=O.length>>1)+C+S+R+O.slice(q);break;default:S=O+C+S+R;break}return i(S)}return T.toString=function(){return h+""},T}function c(h,l){var p=s((h=Pe(h),h.type="f",h)),g=Math.max(-8,Math.min(8,Math.floor(Qe(l)/3)))*3,x=Math.pow(10,-g),d=yg[8+g/3];return function(m){return p(x*m)+d}}return{format:s,formatPrefix:c}}var If,kr,Ui;Pf({thousands:",",grouping:[3],currency:["$",""]});function Pf(t){return If=Cf(t),kr=If.format,Ui=If.formatPrefix,If}function Df(t){return Math.max(0,-Qe(Math.abs(t)))}function qf(t,e){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(Qe(e)/3)))*3-Qe(Math.abs(t)))}function Of(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,Qe(e)-Qe(t))+1}var H=1e-6,xn=1e-12,K=Math.PI,mt=K/2,bo=K/4,Et=K*2,rt=180/K,W=K/180,G=Math.abs,ge=Math.atan,gt=Math.atan2,L=Math.cos,Bi=Math.ceil,Ff=Math.exp;var zf=Math.hypot,Er=Math.log,Lf=Math.pow,z=Math.sin,Gt=Math.sign||function(t){return t>0?1:t<0?-1:0},ft=Math.sqrt,vo=Math.tan;function Yf(t){return t>1?0:t<-1?K:Math.acos(t)}function xt(t){return t>1?mt:t<-1?-mt:Math.asin(t)}function bl(t){return(t=z(t/2))*t}function st(){}function Uf(t,e){t&&vg.hasOwnProperty(t.type)&&vg[t.type](t,e)}var bg={Feature:function(t,e){Uf(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,o=n.length;++r<o;)Uf(n[r].geometry,e)}},vg={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){vl(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)vl(n[r],e,0)},Polygon:function(t,e){_g(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)_g(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,o=n.length;++r<o;)Uf(n[r],e)}};function vl(t,e,n){var r=-1,o=t.length-n,i;for(e.lineStart();++r<o;)i=t[r],e.point(i[0],i[1],i[2]);e.lineEnd()}function _g(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)vl(t[n],e,1);e.polygonEnd()}function zt(t,e){t&&bg.hasOwnProperty(t.type)?bg[t.type](t,e):Uf(t,e)}var Hi=new dt,Bf=new dt,wg,Mg,_l,wl,Ml,De={point:st,lineStart:st,lineEnd:st,polygonStart:function(){Hi=new dt,De.lineStart=M6,De.lineEnd=S6},polygonEnd:function(){var t=+Hi;Bf.add(t<0?Et+t:t),this.lineStart=this.lineEnd=this.point=st},sphere:function(){Bf.add(Et)}};function M6(){De.point=T6}function S6(){Sg(wg,Mg)}function T6(t,e){De.point=Sg,wg=t,Mg=e,t*=W,e*=W,_l=t,wl=L(e=e/2+bo),Ml=z(e)}function Sg(t,e){t*=W,e*=W,e=e/2+bo;var n=t-_l,r=n>=0?1:-1,o=r*n,i=L(e),a=z(e),f=Ml*a,u=wl*i+f*L(o),s=f*r*z(o);Hi.add(gt(s,u)),_l=t,wl=i,Ml=a}function Tg(t){return Bf=new dt,zt(t,De),Bf*2}function Nr(t){return[gt(t[1],t[0]),xt(t[2])]}function xe(t){var e=t[0],n=t[1],r=L(n);return[r*L(e),r*z(e),z(n)]}function Xi(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function yn(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function Hf(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function Wi(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function Rr(t){var e=ft(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}var wt,se,At,le,Cr,Ng,Rg,_o,$i,Zn,vn,bn={point:Sl,lineStart:Ag,lineEnd:kg,polygonStart:function(){bn.point=Ig,bn.lineStart=A6,bn.lineEnd=k6,$i=new dt,De.polygonStart()},polygonEnd:function(){De.polygonEnd(),bn.point=Sl,bn.lineStart=Ag,bn.lineEnd=kg,Hi<0?(wt=-(At=180),se=-(le=90)):$i>H?le=90:$i<-H&&(se=-90),vn[0]=wt,vn[1]=At},sphere:function(){wt=-(At=180),se=-(le=90)}};function Sl(t,e){Zn.push(vn=[wt=t,At=t]),e<se&&(se=e),e>le&&(le=e)}function Cg(t,e){var n=xe([t*W,e*W]);if(_o){var r=yn(_o,n),o=[r[1],-r[0],0],i=yn(o,r);Rr(i),i=Nr(i);var a=t-Cr,f=a>0?1:-1,u=i[0]*rt*f,s,c=G(a)>180;c^(f*Cr<u&&u<f*t)?(s=i[1]*rt,s>le&&(le=s)):(u=(u+360)%360-180,c^(f*Cr<u&&u<f*t)?(s=-i[1]*rt,s<se&&(se=s)):(e<se&&(se=e),e>le&&(le=e))),c?t<Cr?ce(wt,t)>ce(wt,At)&&(At=t):ce(t,At)>ce(wt,At)&&(wt=t):At>=wt?(t<wt&&(wt=t),t>At&&(At=t)):t>Cr?ce(wt,t)>ce(wt,At)&&(At=t):ce(t,At)>ce(wt,At)&&(wt=t)}else Zn.push(vn=[wt=t,At=t]);e<se&&(se=e),e>le&&(le=e),_o=n,Cr=t}function Ag(){bn.point=Cg}function kg(){vn[0]=wt,vn[1]=At,bn.point=Sl,_o=null}function Ig(t,e){if(_o){var n=t-Cr;$i.add(G(n)>180?n+(n>0?360:-360):n)}else Ng=t,Rg=e;De.point(t,e),Cg(t,e)}function A6(){De.lineStart()}function k6(){Ig(Ng,Rg),De.lineEnd(),G($i)>H&&(wt=-(At=180)),vn[0]=wt,vn[1]=At,_o=null}function ce(t,e){return(e-=t)<0?e+360:e}function E6(t,e){return t[0]-e[0]}function Eg(t,e){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}function Pg(t){var e,n,r,o,i,a,f;if(le=At=-(wt=se=1/0),Zn=[],zt(t,bn),n=Zn.length){for(Zn.sort(E6),e=1,r=Zn[0],i=[r];e<n;++e)o=Zn[e],Eg(r,o[0])||Eg(r,o[1])?(ce(r[0],o[1])>ce(r[0],r[1])&&(r[1]=o[1]),ce(o[0],r[1])>ce(r[0],r[1])&&(r[0]=o[0])):i.push(r=o);for(a=-1/0,n=i.length-1,e=0,r=i[n];e<=n;r=o,++e)o=i[e],(f=ce(r[1],o[0]))>a&&(a=f,wt=o[0],At=r[1])}return Zn=vn=null,wt===1/0||se===1/0?[[NaN,NaN],[NaN,NaN]]:[[wt,se],[At,le]]}var Vi,Xf,Wf,$f,Vf,Gf,Zf,Qf,Tl,Al,kl,Og,Fg,te,ee,ne,qe={sphere:st,point:El,lineStart:Dg,lineEnd:qg,polygonStart:function(){qe.lineStart=C6,qe.lineEnd=I6},polygonEnd:function(){qe.lineStart=Dg,qe.lineEnd=qg}};function El(t,e){t*=W,e*=W;var n=L(e);Gi(n*L(t),n*z(t),z(e))}function Gi(t,e,n){++Vi,Wf+=(t-Wf)/Vi,$f+=(e-$f)/Vi,Vf+=(n-Vf)/Vi}function Dg(){qe.point=N6}function N6(t,e){t*=W,e*=W;var n=L(e);te=n*L(t),ee=n*z(t),ne=z(e),qe.point=R6,Gi(te,ee,ne)}function R6(t,e){t*=W,e*=W;var n=L(e),r=n*L(t),o=n*z(t),i=z(e),a=gt(ft((a=ee*i-ne*o)*a+(a=ne*r-te*i)*a+(a=te*o-ee*r)*a),te*r+ee*o+ne*i);Xf+=a,Gf+=a*(te+(te=r)),Zf+=a*(ee+(ee=o)),Qf+=a*(ne+(ne=i)),Gi(te,ee,ne)}function qg(){qe.point=El}function C6(){qe.point=P6}function I6(){zg(Og,Fg),qe.point=El}function P6(t,e){Og=t,Fg=e,t*=W,e*=W,qe.point=zg;var n=L(e);te=n*L(t),ee=n*z(t),ne=z(e),Gi(te,ee,ne)}function zg(t,e){t*=W,e*=W;var n=L(e),r=n*L(t),o=n*z(t),i=z(e),a=ee*i-ne*o,f=ne*r-te*i,u=te*o-ee*r,s=zf(a,f,u),c=xt(s),h=s&&-c/s;Tl.add(h*a),Al.add(h*f),kl.add(h*u),Xf+=c,Gf+=c*(te+(te=r)),Zf+=c*(ee+(ee=o)),Qf+=c*(ne+(ne=i)),Gi(te,ee,ne)}function Lg(t){Vi=Xf=Wf=$f=Vf=Gf=Zf=Qf=0,Tl=new dt,Al=new dt,kl=new dt,zt(t,qe);var e=+Tl,n=+Al,r=+kl,o=zf(e,n,r);return o<xn&&(e=Gf,n=Zf,r=Qf,Xf<H&&(e=Wf,n=$f,r=Vf),o=zf(e,n,r),o<xn)?[NaN,NaN]:[gt(n,e)*rt,xt(r/o)*rt]}function Ir(t){return function(){return t}}function Zi(t,e){function n(r,o){return r=t(r,o),e(r[0],r[1])}return t.invert&&e.invert&&(n.invert=function(r,o){return r=e.invert(r,o),r&&t.invert(r[0],r[1])}),n}function Nl(t,e){return[G(t)>K?t+Math.round(-t/Et)*Et:t,e]}Nl.invert=Nl;function Qi(t,e,n){return(t%=Et)?e||n?Zi(Ug(t),Bg(e,n)):Ug(t):e||n?Bg(e,n):Nl}function Yg(t){return function(e,n){return e+=t,[e>K?e-Et:e<-K?e+Et:e,n]}}function Ug(t){var e=Yg(t);return e.invert=Yg(-t),e}function Bg(t,e){var n=L(t),r=z(t),o=L(e),i=z(e);function a(f,u){var s=L(u),c=L(f)*s,h=z(f)*s,l=z(u),p=l*n+c*r;return[gt(h*o-p*i,c*n-l*r),xt(p*o+h*i)]}return a.invert=function(f,u){var s=L(u),c=L(f)*s,h=z(f)*s,l=z(u),p=l*o-h*i;return[gt(h*o+l*i,c*n+p*r),xt(p*n-c*r)]},a}function Kf(t){t=Qi(t[0]*W,t[1]*W,t.length>2?t[2]*W:0);function e(n){return n=t(n[0]*W,n[1]*W),n[0]*=rt,n[1]*=rt,n}return e.invert=function(n){return n=t.invert(n[0]*W,n[1]*W),n[0]*=rt,n[1]*=rt,n},e}function Rl(t,e,n,r,o,i){if(!!n){var a=L(e),f=z(e),u=r*n;o==null?(o=e+r*Et,i=e-u/2):(o=Hg(a,o),i=Hg(a,i),(r>0?o<i:o>i)&&(o+=r*Et));for(var s,c=o;r>0?c>i:c<i;c-=u)s=Nr([a,-f*L(c),-f*z(c)]),t.point(s[0],s[1])}}function Hg(t,e){e=xe(e),e[0]-=t,Rr(e);var n=Yf(-e[1]);return((-e[2]<0?-n:n)+Et-H)%Et}function Xg(){var t=Ir([0,0]),e=Ir(90),n=Ir(6),r,o,i={point:a};function a(u,s){r.push(u=o(u,s)),u[0]*=rt,u[1]*=rt}function f(){var u=t.apply(this,arguments),s=e.apply(this,arguments)*W,c=n.apply(this,arguments)*W;return r=[],o=Qi(-u[0]*W,-u[1]*W,0).invert,Rl(i,s,c,1),u={type:"Polygon",coordinates:[r]},r=o=null,u}return f.center=function(u){return arguments.length?(t=typeof u=="function"?u:Ir([+u[0],+u[1]]),f):t},f.radius=function(u){return arguments.length?(e=typeof u=="function"?u:Ir(+u),f):e},f.precision=function(u){return arguments.length?(n=typeof u=="function"?u:Ir(+u),f):n},f}function Jf(){var t=[],e;return{point:function(n,r,o){e.push([n,r,o])},lineStart:function(){t.push(e=[])},lineEnd:st,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}}function wo(t,e){return G(t[0]-e[0])<H&&G(t[1]-e[1])<H}function jf(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function tu(t,e,n,r,o){var i=[],a=[],f,u;if(t.forEach(function(g){if(!((x=g.length-1)<=0)){var x,d=g[0],m=g[x],v;if(wo(d,m)){if(!d[2]&&!m[2]){for(o.lineStart(),f=0;f<x;++f)o.point((d=g[f])[0],d[1]);o.lineEnd();return}m[0]+=2*H}i.push(v=new jf(d,g,null,!0)),a.push(v.o=new jf(d,null,v,!1)),i.push(v=new jf(m,g,null,!1)),a.push(v.o=new jf(m,null,v,!0))}}),!!i.length){for(a.sort(e),Wg(i),Wg(a),f=0,u=a.length;f<u;++f)a[f].e=n=!n;for(var s=i[0],c,h;;){for(var l=s,p=!0;l.v;)if((l=l.n)===s)return;c=l.z,o.lineStart();do{if(l.v=l.o.v=!0,l.e){if(p)for(f=0,u=c.length;f<u;++f)o.point((h=c[f])[0],h[1]);else r(l.x,l.n.x,1,o);l=l.n}else{if(p)for(c=l.p.z,f=c.length-1;f>=0;--f)o.point((h=c[f])[0],h[1]);else r(l.x,l.p.x,-1,o);l=l.p}l=l.o,c=l.z,p=!p}while(!l.v);o.lineEnd()}}}function Wg(t){if(!!(e=t.length)){for(var e,n=0,r=t[0],o;++n<e;)r.n=o=t[n],o.p=r,r=o;r.n=o=t[0],o.p=r}}function Cl(t){return G(t[0])<=K?t[0]:Gt(t[0])*((G(t[0])+K)%Et-K)}function eu(t,e){var n=Cl(e),r=e[1],o=z(r),i=[z(n),-L(n),0],a=0,f=0,u=new dt;o===1?r=mt+H:o===-1&&(r=-mt-H);for(var s=0,c=t.length;s<c;++s)if(!!(l=(h=t[s]).length))for(var h,l,p=h[l-1],g=Cl(p),x=p[1]/2+bo,d=z(x),m=L(x),v=0;v<l;++v,g=y,d=w,m=E,p=b){var b=h[v],y=Cl(b),_=b[1]/2+bo,w=z(_),E=L(_),N=y-g,P=N>=0?1:-1,T=P*N,S=T>K,C=d*w;if(u.add(gt(C*P*z(T),m*E+C*L(T))),a+=S?N+P*Et:N,S^g>=n^y>=n){var R=yn(xe(p),xe(b));Rr(R);var M=yn(i,R);Rr(M);var A=(S^N>=0?-1:1)*xt(M[2]);(r>A||r===A&&(R[0]||R[1]))&&(f+=S^N>=0?1:-1)}}return(a<-H||a<H&&u<-xn)^f&1}function nu(t,e,n,r){return function(o){var i=e(o),a=Jf(),f=e(a),u=!1,s,c,h,l={point:p,lineStart:x,lineEnd:d,polygonStart:function(){l.point=m,l.lineStart=v,l.lineEnd=b,c=[],s=[]},polygonEnd:function(){l.point=p,l.lineStart=x,l.lineEnd=d,c=ar(c);var y=eu(s,r);c.length?(u||(o.polygonStart(),u=!0),tu(c,q6,y,n,o)):y&&(u||(o.polygonStart(),u=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),u&&(o.polygonEnd(),u=!1),c=s=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function p(y,_){t(y,_)&&o.point(y,_)}function g(y,_){i.point(y,_)}function x(){l.point=g,i.lineStart()}function d(){l.point=p,i.lineEnd()}function m(y,_){h.push([y,_]),f.point(y,_)}function v(){f.lineStart(),h=[]}function b(){m(h[0][0],h[0][1]),f.lineEnd();var y=f.clean(),_=a.result(),w,E=_.length,N,P,T;if(h.pop(),s.push(h),h=null,!!E){if(y&1){if(P=_[0],(N=P.length-1)>0){for(u||(o.polygonStart(),u=!0),o.lineStart(),w=0;w<N;++w)o.point((T=P[w])[0],T[1]);o.lineEnd()}return}E>1&&y&2&&_.push(_.pop().concat(_.shift())),c.push(_.filter(D6))}}return l}}function D6(t){return t.length>1}function q6(t,e){return((t=t.x)[0]<0?t[1]-mt-H:mt-t[1])-((e=e.x)[0]<0?e[1]-mt-H:mt-e[1])}var Ki=nu(function(){return!0},O6,z6,[-K,-mt]);function O6(t){var e=NaN,n=NaN,r=NaN,o;return{lineStart:function(){t.lineStart(),o=1},point:function(i,a){var f=i>0?K:-K,u=G(i-e);G(u-K)<H?(t.point(e,n=(n+a)/2>0?mt:-mt),t.point(r,n),t.lineEnd(),t.lineStart(),t.point(f,n),t.point(i,n),o=0):r!==f&&u>=K&&(G(e-r)<H&&(e-=r*H),G(i-f)<H&&(i-=f*H),n=F6(e,n,i,a),t.point(r,n),t.lineEnd(),t.lineStart(),t.point(f,n),o=0),t.point(e=i,n=a),r=f},lineEnd:function(){t.lineEnd(),e=n=NaN},clean:function(){return 2-o}}}function F6(t,e,n,r){var o,i,a=z(t-n);return G(a)>H?ge((z(e)*(i=L(r))*z(n)-z(r)*(o=L(e))*z(t))/(o*i*a)):(e+r)/2}function z6(t,e,n,r){var o;if(t==null)o=n*mt,r.point(-K,o),r.point(0,o),r.point(K,o),r.point(K,0),r.point(K,-o),r.point(0,-o),r.point(-K,-o),r.point(-K,0),r.point(-K,o);else if(G(t[0]-e[0])>H){var i=t[0]<e[0]?K:-K;o=n*i/2,r.point(-i,o),r.point(0,o),r.point(i,o)}else r.point(e[0],e[1])}function ru(t){var e=L(t),n=6*W,r=e>0,o=G(e)>H;function i(c,h,l,p){Rl(p,t,n,l,c,h)}function a(c,h){return L(c)*L(h)>e}function f(c){var h,l,p,g,x;return{lineStart:function(){g=p=!1,x=1},point:function(d,m){var v=[d,m],b,y=a(d,m),_=r?y?0:s(d,m):y?s(d+(d<0?K:-K),m):0;if(!h&&(g=p=y)&&c.lineStart(),y!==p&&(b=u(h,v),(!b||wo(h,b)||wo(v,b))&&(v[2]=1)),y!==p)x=0,y?(c.lineStart(),b=u(v,h),c.point(b[0],b[1])):(b=u(h,v),c.point(b[0],b[1],2),c.lineEnd()),h=b;else if(o&&h&&r^y){var w;!(_&l)&&(w=u(v,h,!0))&&(x=0,r?(c.lineStart(),c.point(w[0][0],w[0][1]),c.point(w[1][0],w[1][1]),c.lineEnd()):(c.point(w[1][0],w[1][1]),c.lineEnd(),c.lineStart(),c.point(w[0][0],w[0][1],3)))}y&&(!h||!wo(h,v))&&c.point(v[0],v[1]),h=v,p=y,l=_},lineEnd:function(){p&&c.lineEnd(),h=null},clean:function(){return x|(g&&p)<<1}}}function u(c,h,l){var p=xe(c),g=xe(h),x=[1,0,0],d=yn(p,g),m=Xi(d,d),v=d[0],b=m-v*v;if(!b)return!l&&c;var y=e*m/b,_=-e*v/b,w=yn(x,d),E=Wi(x,y),N=Wi(d,_);Hf(E,N);var P=w,T=Xi(E,P),S=Xi(P,P),C=T*T-S*(Xi(E,E)-1);if(!(C<0)){var R=ft(C),M=Wi(P,(-T-R)/S);if(Hf(M,E),M=Nr(M),!l)return M;var A=c[0],k=h[0],I=c[1],q=h[1],O;k<A&&(O=A,A=k,k=O);var Y=k-A,X=G(Y-K)<H,$=X||Y<H;if(!X&&q<I&&(O=I,I=q,q=O),$?X?I+q>0^M[1]<(G(M[0]-A)<H?I:q):I<=M[1]&&M[1]<=q:Y>K^(A<=M[0]&&M[0]<=k)){var lt=Wi(P,(-T+R)/S);return Hf(lt,E),[M,Nr(lt)]}}}function s(c,h){var l=r?t:K-t,p=0;return c<-l?p|=1:c>l&&(p|=2),h<-l?p|=4:h>l&&(p|=8),p}return nu(a,f,i,r?[0,-t]:[-K,t-K])}function $g(t,e,n,r,o,i){var a=t[0],f=t[1],u=e[0],s=e[1],c=0,h=1,l=u-a,p=s-f,g;if(g=n-a,!(!l&&g>0)){if(g/=l,l<0){if(g<c)return;g<h&&(h=g)}else if(l>0){if(g>h)return;g>c&&(c=g)}if(g=o-a,!(!l&&g<0)){if(g/=l,l<0){if(g>h)return;g>c&&(c=g)}else if(l>0){if(g<c)return;g<h&&(h=g)}if(g=r-f,!(!p&&g>0)){if(g/=p,p<0){if(g<c)return;g<h&&(h=g)}else if(p>0){if(g>h)return;g>c&&(c=g)}if(g=i-f,!(!p&&g<0)){if(g/=p,p<0){if(g>h)return;g>c&&(c=g)}else if(p>0){if(g<c)return;g<h&&(h=g)}return c>0&&(t[0]=a+c*l,t[1]=f+c*p),h<1&&(e[0]=a+h*l,e[1]=f+h*p),!0}}}}}var Ji=1e9,ou=-Ji;function _n(t,e,n,r){function o(s,c){return t<=s&&s<=n&&e<=c&&c<=r}function i(s,c,h,l){var p=0,g=0;if(s==null||(p=a(s,h))!==(g=a(c,h))||u(s,c)<0^h>0)do l.point(p===0||p===3?t:n,p>1?r:e);while((p=(p+h+4)%4)!==g);else l.point(c[0],c[1])}function a(s,c){return G(s[0]-t)<H?c>0?0:3:G(s[0]-n)<H?c>0?2:1:G(s[1]-e)<H?c>0?1:0:c>0?3:2}function f(s,c){return u(s.x,c.x)}function u(s,c){var h=a(s,1),l=a(c,1);return h!==l?h-l:h===0?c[1]-s[1]:h===1?s[0]-c[0]:h===2?s[1]-c[1]:c[0]-s[0]}return function(s){var c=s,h=Jf(),l,p,g,x,d,m,v,b,y,_,w,E={point:N,lineStart:C,lineEnd:R,polygonStart:T,polygonEnd:S};function N(A,k){o(A,k)&&c.point(A,k)}function P(){for(var A=0,k=0,I=p.length;k<I;++k)for(var q=p[k],O=1,Y=q.length,X=q[0],$,lt,j=X[0],ht=X[1];O<Y;++O)$=j,lt=ht,X=q[O],j=X[0],ht=X[1],lt<=r?ht>r&&(j-$)*(r-lt)>(ht-lt)*(t-$)&&++A:ht<=r&&(j-$)*(r-lt)<(ht-lt)*(t-$)&&--A;return A}function T(){c=h,l=[],p=[],w=!0}function S(){var A=P(),k=w&&A,I=(l=ar(l)).length;(k||I)&&(s.polygonStart(),k&&(s.lineStart(),i(null,null,1,s),s.lineEnd()),I&&tu(l,f,A,i,s),s.polygonEnd()),c=s,l=p=g=null}function C(){E.point=M,p&&p.push(g=[]),_=!0,y=!1,v=b=NaN}function R(){l&&(M(x,d),m&&y&&h.rejoin(),l.push(h.result())),E.point=N,y&&c.lineEnd()}function M(A,k){var I=o(A,k);if(p&&g.push([A,k]),_)x=A,d=k,m=I,_=!1,I&&(c.lineStart(),c.point(A,k));else if(I&&y)c.point(A,k);else{var q=[v=Math.max(ou,Math.min(Ji,v)),b=Math.max(ou,Math.min(Ji,b))],O=[A=Math.max(ou,Math.min(Ji,A)),k=Math.max(ou,Math.min(Ji,k))];$g(q,O,t,e,n,r)?(y||(c.lineStart(),c.point(q[0],q[1])),c.point(O[0],O[1]),I||c.lineEnd(),w=!1):I&&(c.lineStart(),c.point(A,k),w=!1)}v=A,b=k,y=I}return E}}function Vg(){var t=0,e=0,n=960,r=500,o,i,a;return a={stream:function(f){return o&&i===f?o:o=_n(t,e,n,r)(i=f)},extent:function(f){return arguments.length?(t=+f[0][0],e=+f[0][1],n=+f[1][0],r=+f[1][1],o=i=null,a):[[t,e],[n,r]]}}}var Il,Pl,iu,au,Mo={sphere:st,point:st,lineStart:L6,lineEnd:st,polygonStart:st,polygonEnd:st};function L6(){Mo.point=U6,Mo.lineEnd=Y6}function Y6(){Mo.point=Mo.lineEnd=st}function U6(t,e){t*=W,e*=W,Pl=t,iu=z(e),au=L(e),Mo.point=B6}function B6(t,e){t*=W,e*=W;var n=z(e),r=L(e),o=G(t-Pl),i=L(o),a=z(o),f=r*a,u=au*n-iu*r*i,s=iu*n+au*r*i;Il.add(gt(ft(f*f+u*u),s)),Pl=t,iu=n,au=r}function fu(t){return Il=new dt,zt(t,Mo),+Il}var Dl=[null,null],H6={type:"LineString",coordinates:Dl};function So(t,e){return Dl[0]=t,Dl[1]=e,fu(H6)}var Gg={Feature:function(t,e){return uu(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,o=n.length;++r<o;)if(uu(n[r].geometry,e))return!0;return!1}},Zg={Sphere:function(){return!0},Point:function(t,e){return Qg(t.coordinates,e)},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Qg(n[r],e))return!0;return!1},LineString:function(t,e){return Kg(t.coordinates,e)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Kg(n[r],e))return!0;return!1},Polygon:function(t,e){return Jg(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Jg(n[r],e))return!0;return!1},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,o=n.length;++r<o;)if(uu(n[r],e))return!0;return!1}};function uu(t,e){return t&&Zg.hasOwnProperty(t.type)?Zg[t.type](t,e):!1}function Qg(t,e){return So(t,e)===0}function Kg(t,e){for(var n,r,o,i=0,a=t.length;i<a;i++){if(r=So(t[i],e),r===0||i>0&&(o=So(t[i],t[i-1]),o>0&&n<=o&&r<=o&&(n+r-o)*(1-Math.pow((n-r)/o,2))<xn*o))return!0;n=r}return!1}function Jg(t,e){return!!eu(t.map(X6),jg(e))}function X6(t){return t=t.map(jg),t.pop(),t}function jg(t){return[t[0]*W,t[1]*W]}function tx(t,e){return(t&&Gg.hasOwnProperty(t.type)?Gg[t.type]:uu)(t,e)}function ex(t,e,n){var r=ae(t,e-H,n).concat(e);return function(o){return r.map(function(i){return[o,i]})}}function nx(t,e,n){var r=ae(t,e-H,n).concat(e);return function(o){return r.map(function(i){return[i,o]})}}function su(){var t,e,n,r,o,i,a,f,u=10,s=u,c=90,h=360,l,p,g,x,d=2.5;function m(){return{type:"MultiLineString",coordinates:v()}}function v(){return ae(Bi(r/c)*c,n,c).map(g).concat(ae(Bi(f/h)*h,a,h).map(x)).concat(ae(Bi(e/u)*u,t,u).filter(function(b){return G(b%c)>H}).map(l)).concat(ae(Bi(i/s)*s,o,s).filter(function(b){return G(b%h)>H}).map(p))}return m.lines=function(){return v().map(function(b){return{type:"LineString",coordinates:b}})},m.outline=function(){return{type:"Polygon",coordinates:[g(r).concat(x(a).slice(1),g(n).reverse().slice(1),x(f).reverse().slice(1))]}},m.extent=function(b){return arguments.length?m.extentMajor(b).extentMinor(b):m.extentMinor()},m.extentMajor=function(b){return arguments.length?(r=+b[0][0],n=+b[1][0],f=+b[0][1],a=+b[1][1],r>n&&(b=r,r=n,n=b),f>a&&(b=f,f=a,a=b),m.precision(d)):[[r,f],[n,a]]},m.extentMinor=function(b){return arguments.length?(e=+b[0][0],t=+b[1][0],i=+b[0][1],o=+b[1][1],e>t&&(b=e,e=t,t=b),i>o&&(b=i,i=o,o=b),m.precision(d)):[[e,i],[t,o]]},m.step=function(b){return arguments.length?m.stepMajor(b).stepMinor(b):m.stepMinor()},m.stepMajor=function(b){return arguments.length?(c=+b[0],h=+b[1],m):[c,h]},m.stepMinor=function(b){return arguments.length?(u=+b[0],s=+b[1],m):[u,s]},m.precision=function(b){return arguments.length?(d=+b,l=ex(i,o,90),p=nx(e,t,d),g=ex(f,a,90),x=nx(r,n,d),m):d},m.extentMajor([[-180,-90+H],[180,90-H]]).extentMinor([[-180,-80-H],[180,80+H]])}function rx(){return su()()}function ox(t,e){var n=t[0]*W,r=t[1]*W,o=e[0]*W,i=e[1]*W,a=L(r),f=z(r),u=L(i),s=z(i),c=a*L(n),h=a*z(n),l=u*L(o),p=u*z(o),g=2*xt(ft(bl(i-r)+a*u*bl(o-n))),x=z(g),d=g?function(m){var v=z(m*=g)/x,b=z(g-m)/x,y=b*c+v*l,_=b*h+v*p,w=b*f+v*s;return[gt(_,y)*rt,gt(w,ft(y*y+_*_))*rt]}:function(){return[n*rt,r*rt]};return d.distance=g,d}var Qn=t=>t;var ql=new dt,Ol=new dt,ix,ax,Fl,zl,Kn={point:st,lineStart:st,lineEnd:st,polygonStart:function(){Kn.lineStart=W6,Kn.lineEnd=V6},polygonEnd:function(){Kn.lineStart=Kn.lineEnd=Kn.point=st,ql.add(G(Ol)),Ol=new dt},result:function(){var t=ql/2;return ql=new dt,t}};function W6(){Kn.point=$6}function $6(t,e){Kn.point=fx,ix=Fl=t,ax=zl=e}function fx(t,e){Ol.add(zl*t-Fl*e),Fl=t,zl=e}function V6(){fx(ix,ax)}var Ll=Kn;var To=1/0,cu=To,ji=-To,lu=ji,G6={point:Z6,lineStart:st,lineEnd:st,polygonStart:st,polygonEnd:st,result:function(){var t=[[To,cu],[ji,lu]];return ji=lu=-(cu=To=1/0),t}};function Z6(t,e){t<To&&(To=t),t>ji&&(ji=t),e<cu&&(cu=e),e>lu&&(lu=e)}var Ao=G6;var Yl=0,Ul=0,ta=0,hu=0,pu=0,ko=0,Bl=0,Hl=0,ea=0,cx,lx,Ke,Je,Oe={point:Pr,lineStart:ux,lineEnd:sx,polygonStart:function(){Oe.lineStart=J6,Oe.lineEnd=j6},polygonEnd:function(){Oe.point=Pr,Oe.lineStart=ux,Oe.lineEnd=sx},result:function(){var t=ea?[Bl/ea,Hl/ea]:ko?[hu/ko,pu/ko]:ta?[Yl/ta,Ul/ta]:[NaN,NaN];return Yl=Ul=ta=hu=pu=ko=Bl=Hl=ea=0,t}};function Pr(t,e){Yl+=t,Ul+=e,++ta}function ux(){Oe.point=Q6}function Q6(t,e){Oe.point=K6,Pr(Ke=t,Je=e)}function K6(t,e){var n=t-Ke,r=e-Je,o=ft(n*n+r*r);hu+=o*(Ke+t)/2,pu+=o*(Je+e)/2,ko+=o,Pr(Ke=t,Je=e)}function sx(){Oe.point=Pr}function J6(){Oe.point=t4}function j6(){hx(cx,lx)}function t4(t,e){Oe.point=hx,Pr(cx=Ke=t,lx=Je=e)}function hx(t,e){var n=t-Ke,r=e-Je,o=ft(n*n+r*r);hu+=o*(Ke+t)/2,pu+=o*(Je+e)/2,ko+=o,o=Je*t-Ke*e,Bl+=o*(Ke+t),Hl+=o*(Je+e),ea+=o*3,Pr(Ke=t,Je=e)}var Xl=Oe;function du(t){this._context=t}du.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:{this._context.moveTo(t,e),this._point=1;break}case 1:{this._context.lineTo(t,e);break}default:{this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,Et);break}}},result:st};var $l=new dt,Wl,px,dx,na,ra,mu={point:st,lineStart:function(){mu.point=e4},lineEnd:function(){Wl&&mx(px,dx),mu.point=st},polygonStart:function(){Wl=!0},polygonEnd:function(){Wl=null},result:function(){var t=+$l;return $l=new dt,t}};function e4(t,e){mu.point=mx,px=na=t,dx=ra=e}function mx(t,e){na-=t,ra-=e,$l.add(ft(na*na+ra*ra)),na=t,ra=e}var Vl=mu;function gu(){this._string=[]}gu.prototype={_radius:4.5,_circle:gx(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._string.push("Z"),this._point=NaN},point:function(t,e){switch(this._point){case 0:{this._string.push("M",t,",",e),this._point=1;break}case 1:{this._string.push("L",t,",",e);break}default:{this._circle==null&&(this._circle=gx(this._radius)),this._string.push("M",t,",",e,this._circle);break}}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}else return null}};function gx(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}function xx(t,e){var n=4.5,r,o;function i(a){return a&&(typeof n=="function"&&o.pointRadius(+n.apply(this,arguments)),zt(a,r(o))),o.result()}return i.area=function(a){return zt(a,r(Ll)),Ll.result()},i.measure=function(a){return zt(a,r(Vl)),Vl.result()},i.bounds=function(a){return zt(a,r(Ao)),Ao.result()},i.centroid=function(a){return zt(a,r(Xl)),Xl.result()},i.projection=function(a){return arguments.length?(r=a==null?(t=null,Qn):(t=a).stream,i):t},i.context=function(a){return arguments.length?(o=a==null?(e=null,new gu):new du(e=a),typeof n!="function"&&o.pointRadius(n),i):e},i.pointRadius=function(a){return arguments.length?(n=typeof a=="function"?a:(o.pointRadius(+a),+a),i):n},i.projection(t).context(e)}function yx(t){return{stream:Jn(t)}}function Jn(t){return function(e){var n=new Gl;for(var r in t)n[r]=t[r];return n.stream=e,n}}function Gl(){}Gl.prototype={constructor:Gl,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function Zl(t,e,n){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),r!=null&&t.clipExtent(null),zt(n,t.stream(Ao)),e(Ao.result()),r!=null&&t.clipExtent(r),t}function Dr(t,e,n){return Zl(t,function(r){var o=e[1][0]-e[0][0],i=e[1][1]-e[0][1],a=Math.min(o/(r[1][0]-r[0][0]),i/(r[1][1]-r[0][1])),f=+e[0][0]+(o-a*(r[1][0]+r[0][0]))/2,u=+e[0][1]+(i-a*(r[1][1]+r[0][1]))/2;t.scale(150*a).translate([f,u])},n)}function Eo(t,e,n){return Dr(t,[[0,0],e],n)}function No(t,e,n){return Zl(t,function(r){var o=+e,i=o/(r[1][0]-r[0][0]),a=(o-i*(r[1][0]+r[0][0]))/2,f=-i*r[0][1];t.scale(150*i).translate([a,f])},n)}function Ro(t,e,n){return Zl(t,function(r){var o=+e,i=o/(r[1][1]-r[0][1]),a=-i*r[0][0],f=(o-i*(r[1][1]+r[0][1]))/2;t.scale(150*i).translate([a,f])},n)}var bx=16,n4=L(30*W);function Ql(t,e){return+e?o4(t,e):r4(t)}function r4(t){return Jn({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}function o4(t,e){function n(r,o,i,a,f,u,s,c,h,l,p,g,x,d){var m=s-r,v=c-o,b=m*m+v*v;if(b>4*e&&x--){var y=a+l,_=f+p,w=u+g,E=ft(y*y+_*_+w*w),N=xt(w/=E),P=G(G(w)-1)<H||G(i-h)<H?(i+h)/2:gt(_,y),T=t(P,N),S=T[0],C=T[1],R=S-r,M=C-o,A=v*R-m*M;(A*A/b>e||G((m*R+v*M)/b-.5)>.3||a*l+f*p+u*g<n4)&&(n(r,o,i,a,f,u,S,C,P,y/=E,_/=E,w,x,d),d.point(S,C),n(S,C,P,y,_,w,s,c,h,l,p,g,x,d))}}return function(r){var o,i,a,f,u,s,c,h,l,p,g,x,d={point:m,lineStart:v,lineEnd:y,polygonStart:function(){r.polygonStart(),d.lineStart=_},polygonEnd:function(){r.polygonEnd(),d.lineStart=v}};function m(N,P){N=t(N,P),r.point(N[0],N[1])}function v(){h=NaN,d.point=b,r.lineStart()}function b(N,P){var T=xe([N,P]),S=t(N,P);n(h,l,c,p,g,x,h=S[0],l=S[1],c=N,p=T[0],g=T[1],x=T[2],bx,r),r.point(h,l)}function y(){d.point=m,r.lineEnd()}function _(){v(),d.point=w,d.lineEnd=E}function w(N,P){b(o=N,P),i=h,a=l,f=p,u=g,s=x,d.point=b}function E(){n(h,l,c,p,g,x,i,a,o,f,u,s,bx,r),d.lineEnd=y,y()}return d}}var i4=Jn({point:function(t,e){this.stream.point(t*W,e*W)}});function a4(t){return Jn({point:function(e,n){var r=t(e,n);return this.stream.point(r[0],r[1])}})}function f4(t,e,n,r,o){function i(a,f){return a*=r,f*=o,[e+t*a,n-t*f]}return i.invert=function(a,f){return[(a-e)/t*r,(n-f)/t*o]},i}function vx(t,e,n,r,o,i){if(!i)return f4(t,e,n,r,o);var a=L(i),f=z(i),u=a*t,s=f*t,c=a/t,h=f/t,l=(f*n-a*e)/t,p=(f*e+a*n)/t;function g(x,d){return x*=r,d*=o,[u*x-s*d+e,n-s*x-u*d]}return g.invert=function(x,d){return[r*(c*x-h*d+l),o*(p-h*x-c*d)]},g}function Nt(t){return oa(function(){return t})()}function oa(t){var e,n=150,r=480,o=250,i=0,a=0,f=0,u=0,s=0,c,h=0,l=1,p=1,g=null,x=Ki,d=null,m,v,b,y=Qn,_=.5,w,E,N,P,T;function S(A){return N(A[0]*W,A[1]*W)}function C(A){return A=N.invert(A[0],A[1]),A&&[A[0]*rt,A[1]*rt]}S.stream=function(A){return P&&T===A?P:P=i4(a4(c)(x(w(y(T=A)))))},S.preclip=function(A){return arguments.length?(x=A,g=void 0,M()):x},S.postclip=function(A){return arguments.length?(y=A,d=m=v=b=null,M()):y},S.clipAngle=function(A){return arguments.length?(x=+A?ru(g=A*W):(g=null,Ki),M()):g*rt},S.clipExtent=function(A){return arguments.length?(y=A==null?(d=m=v=b=null,Qn):_n(d=+A[0][0],m=+A[0][1],v=+A[1][0],b=+A[1][1]),M()):d==null?null:[[d,m],[v,b]]},S.scale=function(A){return arguments.length?(n=+A,R()):n},S.translate=function(A){return arguments.length?(r=+A[0],o=+A[1],R()):[r,o]},S.center=function(A){return arguments.length?(i=A[0]%360*W,a=A[1]%360*W,R()):[i*rt,a*rt]},S.rotate=function(A){return arguments.length?(f=A[0]%360*W,u=A[1]%360*W,s=A.length>2?A[2]%360*W:0,R()):[f*rt,u*rt,s*rt]},S.angle=function(A){return arguments.length?(h=A%360*W,R()):h*rt},S.reflectX=function(A){return arguments.length?(l=A?-1:1,R()):l<0},S.reflectY=function(A){return arguments.length?(p=A?-1:1,R()):p<0},S.precision=function(A){return arguments.length?(w=Ql(E,_=A*A),M()):ft(_)},S.fitExtent=function(A,k){return Dr(S,A,k)},S.fitSize=function(A,k){return Eo(S,A,k)},S.fitWidth=function(A,k){return No(S,A,k)},S.fitHeight=function(A,k){return Ro(S,A,k)};function R(){var A=vx(n,0,0,l,p,h).apply(null,e(i,a)),k=vx(n,r-A[0],o-A[1],l,p,h);return c=Qi(f,u,s),E=Zi(e,k),N=Zi(c,E),w=Ql(E,_),M()}function M(){return P=T=null,S}return function(){return e=t.apply(this,arguments),S.invert=e.invert&&C,R()}}function Co(t){var e=0,n=K/3,r=oa(t),o=r(e,n);return o.parallels=function(i){return arguments.length?r(e=i[0]*W,n=i[1]*W):[e*rt,n*rt]},o}function _x(t){var e=L(t);function n(r,o){return[r*e,z(o)/e]}return n.invert=function(r,o){return[r/e,xt(o*e)]},n}function Kl(t,e){var n=z(t),r=(n+z(e))/2;if(G(r)<H)return _x(t);var o=1+n*(2*r-n),i=ft(o)/r;function a(f,u){var s=ft(o-2*r*z(u))/r;return[s*z(f*=r),i-s*L(f)]}return a.invert=function(f,u){var s=i-u,c=gt(f,G(s))*Gt(s);return s*r<0&&(c-=K*Gt(f)*Gt(s)),[c/r,xt((o-(f*f+s*s)*r*r)/(2*r))]},a}function qr(){return Co(Kl).scale(155.424).center([0,33.6442])}function xu(){return qr().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function u4(t){var e=t.length;return{point:function(n,r){for(var o=-1;++o<e;)t[o].point(n,r)},sphere:function(){for(var n=-1;++n<e;)t[n].sphere()},lineStart:function(){for(var n=-1;++n<e;)t[n].lineStart()},lineEnd:function(){for(var n=-1;++n<e;)t[n].lineEnd()},polygonStart:function(){for(var n=-1;++n<e;)t[n].polygonStart()},polygonEnd:function(){for(var n=-1;++n<e;)t[n].polygonEnd()}}}function wx(){var t,e,n=xu(),r,o=qr().rotate([154,0]).center([-2,58.5]).parallels([55,65]),i,a=qr().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f,u,s={point:function(l,p){u=[l,p]}};function c(l){var p=l[0],g=l[1];return u=null,r.point(p,g),u||(i.point(p,g),u)||(f.point(p,g),u)}c.invert=function(l){var p=n.scale(),g=n.translate(),x=(l[0]-g[0])/p,d=(l[1]-g[1])/p;return(d>=.12&&d<.234&&x>=-.425&&x<-.214?o:d>=.166&&d<.234&&x>=-.214&&x<-.115?a:n).invert(l)},c.stream=function(l){return t&&e===l?t:t=u4([n.stream(e=l),o.stream(l),a.stream(l)])},c.precision=function(l){return arguments.length?(n.precision(l),o.precision(l),a.precision(l),h()):n.precision()},c.scale=function(l){return arguments.length?(n.scale(l),o.scale(l*.35),a.scale(l),c.translate(n.translate())):n.scale()},c.translate=function(l){if(!arguments.length)return n.translate();var p=n.scale(),g=+l[0],x=+l[1];return r=n.translate(l).clipExtent([[g-.455*p,x-.238*p],[g+.455*p,x+.238*p]]).stream(s),i=o.translate([g-.307*p,x+.201*p]).clipExtent([[g-.425*p+H,x+.12*p+H],[g-.214*p-H,x+.234*p-H]]).stream(s),f=a.translate([g-.205*p,x+.212*p]).clipExtent([[g-.214*p+H,x+.166*p+H],[g-.115*p-H,x+.234*p-H]]).stream(s),h()},c.fitExtent=function(l,p){return Dr(c,l,p)},c.fitSize=function(l,p){return Eo(c,l,p)},c.fitWidth=function(l,p){return No(c,l,p)},c.fitHeight=function(l,p){return Ro(c,l,p)};function h(){return t=e=null,c}return c.scale(1070)}function yu(t){return function(e,n){var r=L(e),o=L(n),i=t(r*o);return i===1/0?[2,0]:[i*o*z(e),i*z(n)]}}function je(t){return function(e,n){var r=ft(e*e+n*n),o=t(r),i=z(o),a=L(o);return[gt(e*i,r*a),xt(r&&n*i/r)]}}var bu=yu(function(t){return ft(2/(1+t))});bu.invert=je(function(t){return 2*xt(t/2)});function Mx(){return Nt(bu).scale(124.75).clipAngle(180-.001)}var vu=yu(function(t){return(t=Yf(t))&&t/z(t)});vu.invert=je(function(t){return t});function Sx(){return Nt(vu).scale(79.4188).clipAngle(180-.001)}function Or(t,e){return[t,Er(vo((mt+e)/2))]}Or.invert=function(t,e){return[t,2*ge(Ff(e))-mt]};function Tx(){return Jl(Or).scale(961/Et)}function Jl(t){var e=Nt(t),n=e.center,r=e.scale,o=e.translate,i=e.clipExtent,a=null,f,u,s;e.scale=function(h){return arguments.length?(r(h),c()):r()},e.translate=function(h){return arguments.length?(o(h),c()):o()},e.center=function(h){return arguments.length?(n(h),c()):n()},e.clipExtent=function(h){return arguments.length?(h==null?a=f=u=s=null:(a=+h[0][0],f=+h[0][1],u=+h[1][0],s=+h[1][1]),c()):a==null?null:[[a,f],[u,s]]};function c(){var h=K*r(),l=e(Kf(e.rotate()).invert([0,0]));return i(a==null?[[l[0]-h,l[1]-h],[l[0]+h,l[1]+h]]:t===Or?[[Math.max(l[0]-h,a),f],[Math.min(l[0]+h,u),s]]:[[a,Math.max(l[1]-h,f)],[u,Math.min(l[1]+h,s)]])}return c()}function _u(t){return vo((mt+t)/2)}function jl(t,e){var n=L(t),r=t===e?z(t):Er(n/L(e))/Er(_u(e)/_u(t)),o=n*Lf(_u(t),r)/r;if(!r)return Or;function i(a,f){o>0?f<-mt+H&&(f=-mt+H):f>mt-H&&(f=mt-H);var u=o/Lf(_u(f),r);return[u*z(r*a),o-u*L(r*a)]}return i.invert=function(a,f){var u=o-f,s=Gt(r)*ft(a*a+u*u),c=gt(a,G(u))*Gt(u);return u*r<0&&(c-=K*Gt(a)*Gt(u)),[c/r,2*ge(Lf(o/s,1/r))-mt]},i}function Ax(){return Co(jl).scale(109.5).parallels([30,30])}function Fr(t,e){return[t,e]}Fr.invert=Fr;function kx(){return Nt(Fr).scale(152.63)}function th(t,e){var n=L(t),r=t===e?z(t):(n-L(e))/(e-t),o=n/r+t;if(G(r)<H)return Fr;function i(a,f){var u=o-f,s=r*a;return[u*z(s),o-u*L(s)]}return i.invert=function(a,f){var u=o-f,s=gt(a,G(u))*Gt(u);return u*r<0&&(s-=K*Gt(a)*Gt(u)),[s/r,o-Gt(r)*ft(a*a+u*u)]},i}function Ex(){return Co(th).scale(131.154).center([0,13.9389])}var ia=1.340264,aa=-.081106,fa=893e-6,ua=.003796,wu=ft(3)/2,s4=12;function Mu(t,e){var n=xt(wu*z(e)),r=n*n,o=r*r*r;return[t*L(n)/(wu*(ia+3*aa*r+o*(7*fa+9*ua*r))),n*(ia+aa*r+o*(fa+ua*r))]}Mu.invert=function(t,e){for(var n=e,r=n*n,o=r*r*r,i=0,a,f,u;i<s4&&(f=n*(ia+aa*r+o*(fa+ua*r))-e,u=ia+3*aa*r+o*(7*fa+9*ua*r),n-=a=f/u,r=n*n,o=r*r*r,!(G(a)<xn));++i);return[wu*t*(ia+3*aa*r+o*(7*fa+9*ua*r))/L(n),xt(z(n)/wu)]};function Nx(){return Nt(Mu).scale(177.158)}function Su(t,e){var n=L(e),r=L(t)*n;return[n*z(t)/r,z(e)/r]}Su.invert=je(ge);function Rx(){return Nt(Su).scale(144.049).clipAngle(60)}function Cx(){var t=1,e=0,n=0,r=1,o=1,i=0,a,f,u=null,s,c,h,l=1,p=1,g=Jn({point:function(y,_){var w=b([y,_]);this.stream.point(w[0],w[1])}}),x=Qn,d,m;function v(){return l=t*r,p=t*o,d=m=null,b}function b(y){var _=y[0]*l,w=y[1]*p;if(i){var E=w*a-_*f;_=_*a+w*f,w=E}return[_+e,w+n]}return b.invert=function(y){var _=y[0]-e,w=y[1]-n;if(i){var E=w*a+_*f;_=_*a-w*f,w=E}return[_/l,w/p]},b.stream=function(y){return d&&m===y?d:d=g(x(m=y))},b.postclip=function(y){return arguments.length?(x=y,u=s=c=h=null,v()):x},b.clipExtent=function(y){return arguments.length?(x=y==null?(u=s=c=h=null,Qn):_n(u=+y[0][0],s=+y[0][1],c=+y[1][0],h=+y[1][1]),v()):u==null?null:[[u,s],[c,h]]},b.scale=function(y){return arguments.length?(t=+y,v()):t},b.translate=function(y){return arguments.length?(e=+y[0],n=+y[1],v()):[e,n]},b.angle=function(y){return arguments.length?(i=y%360*W,f=z(i),a=L(i),v()):i*rt},b.reflectX=function(y){return arguments.length?(r=y?-1:1,v()):r<0},b.reflectY=function(y){return arguments.length?(o=y?-1:1,v()):o<0},b.fitExtent=function(y,_){return Dr(b,y,_)},b.fitSize=function(y,_){return Eo(b,y,_)},b.fitWidth=function(y,_){return No(b,y,_)},b.fitHeight=function(y,_){return Ro(b,y,_)},b}function Tu(t,e){var n=e*e,r=n*n;return[t*(.8707-.131979*n+r*(-.013791+r*(.003971*n-.001529*r))),e*(1.007226+n*(.015085+r*(-.044475+.028874*n-.005916*r)))]}Tu.invert=function(t,e){var n=e,r=25,o;do{var i=n*n,a=i*i;n-=o=(n*(1.007226+i*(.015085+a*(-.044475+.028874*i-.005916*a)))-e)/(1.007226+i*(.015085*3+a*(-.044475*7+.028874*9*i-.005916*11*a)))}while(G(o)>H&&--r>0);return[t/(.8707+(i=n*n)*(-.131979+i*(-.013791+i*i*i*(.003971-.001529*i)))),n]};function Ix(){return Nt(Tu).scale(175.295)}function Au(t,e){return[L(e)*z(t),z(e)]}Au.invert=je(xt);function Px(){return Nt(Au).scale(249.5).clipAngle(90+H)}function ku(t,e){var n=L(e),r=1+L(t)*n;return[n*z(t)/r,z(e)/r]}ku.invert=je(function(t){return 2*ge(t)});function Dx(){return Nt(ku).scale(250).clipAngle(142)}function Eu(t,e){return[Er(vo((mt+e)/2)),-t]}Eu.invert=function(t,e){return[-e,2*ge(Ff(t))-mt]};function qx(){var t=Jl(Eu),e=t.center,n=t.rotate;return t.center=function(r){return arguments.length?e([-r[1],r[0]]):(r=e(),[r[1],-r[0]])},t.rotate=function(r){return arguments.length?n([r[0],r[1],r.length>2?r[2]+90:90]):(r=n(),[r[0],r[1],r[2]-90])},n([0,0,90]).scale(159.155)}function c4(t,e){return t.parent===e.parent?1:2}function l4(t){return t.reduce(h4,0)/t.length}function h4(t,e){return t+e.x}function p4(t){return 1+t.reduce(d4,0)}function d4(t,e){return Math.max(t,e.y)}function m4(t){for(var e;e=t.children;)t=e[0];return t}function g4(t){for(var e;e=t.children;)t=e[e.length-1];return t}function Ox(){var t=c4,e=1,n=1,r=!1;function o(i){var a,f=0;i.eachAfter(function(l){var p=l.children;p?(l.x=l4(p),l.y=p4(p)):(l.x=a?f+=t(l,a):0,l.y=0,a=l)});var u=m4(i),s=g4(i),c=u.x-t(u,s)/2,h=s.x+t(s,u)/2;return i.eachAfter(r?function(l){l.x=(l.x-i.x)*e,l.y=(i.y-l.y)*n}:function(l){l.x=(l.x-c)/(h-c)*e,l.y=(1-(i.y?l.y/i.y:1))*n})}return o.separation=function(i){return arguments.length?(t=i,o):t},o.size=function(i){return arguments.length?(r=!1,e=+i[0],n=+i[1],o):r?null:[e,n]},o.nodeSize=function(i){return arguments.length?(r=!0,e=+i[0],n=+i[1],o):r?[e,n]:null},o}function x4(t){var e=0,n=t.children,r=n&&n.length;if(!r)e=1;else for(;--r>=0;)e+=n[r].value;t.value=e}function Fx(){return this.eachAfter(x4)}function zx(t,e){let n=-1;for(let r of this)t.call(e,r,++n,this);return this}function Lx(t,e){for(var n=this,r=[n],o,i,a=-1;n=r.pop();)if(t.call(e,n,++a,this),o=n.children)for(i=o.length-1;i>=0;--i)r.push(o[i]);return this}function Yx(t,e){for(var n=this,r=[n],o=[],i,a,f,u=-1;n=r.pop();)if(o.push(n),i=n.children)for(a=0,f=i.length;a<f;++a)r.push(i[a]);for(;n=o.pop();)t.call(e,n,++u,this);return this}function Ux(t,e){let n=-1;for(let r of this)if(t.call(e,r,++n,this))return r}function Bx(t){return this.eachAfter(function(e){for(var n=+t(e.data)||0,r=e.children,o=r&&r.length;--o>=0;)n+=r[o].value;e.value=n})}function Hx(t){return this.eachBefore(function(e){e.children&&e.children.sort(t)})}function Xx(t){for(var e=this,n=y4(e,t),r=[e];e!==n;)e=e.parent,r.push(e);for(var o=r.length;t!==n;)r.splice(o,0,t),t=t.parent;return r}function y4(t,e){if(t===e)return t;var n=t.ancestors(),r=e.ancestors(),o=null;for(t=n.pop(),e=r.pop();t===e;)o=t,t=n.pop(),e=r.pop();return o}function Wx(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e}function $x(){return Array.from(this)}function Vx(){var t=[];return this.eachBefore(function(e){e.children||t.push(e)}),t}function Gx(){var t=this,e=[];return t.each(function(n){n!==t&&e.push({source:n.parent,target:n})}),e}function*Zx(){var t=this,e,n=[t],r,o,i;do for(e=n.reverse(),n=[];t=e.pop();)if(yield t,r=t.children)for(o=0,i=r.length;o<i;++o)n.push(r[o]);while(n.length)}function sa(t,e){t instanceof Map?(t=[void 0,t],e===void 0&&(e=_4)):e===void 0&&(e=v4);for(var n=new tn(t),r,o=[n],i,a,f,u;r=o.pop();)if((a=e(r.data))&&(u=(a=Array.from(a)).length))for(r.children=a,f=u-1;f>=0;--f)o.push(i=a[f]=new tn(a[f])),i.parent=r,i.depth=r.depth+1;return n.eachBefore(eh)}function b4(){return sa(this).eachBefore(w4)}function v4(t){return t.children}function _4(t){return Array.isArray(t)?t[1]:null}function w4(t){t.data.value!==void 0&&(t.value=t.data.value),t.data=t.data.data}function eh(t){var e=0;do t.height=e;while((t=t.parent)&&t.height<++e)}function tn(t){this.data=t,this.depth=this.height=0,this.parent=null}tn.prototype=sa.prototype={constructor:tn,count:Fx,each:zx,eachAfter:Yx,eachBefore:Lx,find:Ux,sum:Bx,sort:Hx,path:Xx,ancestors:Wx,descendants:$x,leaves:Vx,links:Gx,copy:b4,[Symbol.iterator]:Zx};function Io(t){return t==null?null:nh(t)}function nh(t){if(typeof t!="function")throw new Error;return t}function wn(){return 0}function jn(t){return function(){return t}}function Po(){let t=1;return()=>(t=(1664525*t+1013904223)%4294967296)/4294967296}function Qx(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Kx(t,e){let n=t.length,r,o;for(;n;)o=e()*n--|0,r=t[n],t[n]=t[o],t[o]=r;return t}function Jx(t){return oh(t,Po())}function oh(t,e){for(var n=0,r=(t=Kx(Array.from(t),e)).length,o=[],i,a;n<r;)i=t[n],a&&jx(a,i)?++n:(a=S4(o=M4(o,i)),n=0);return a}function M4(t,e){var n,r;if(rh(e,t))return[e];for(n=0;n<t.length;++n)if(Nu(e,t[n])&&rh(ca(t[n],e),t))return[t[n],e];for(n=0;n<t.length-1;++n)for(r=n+1;r<t.length;++r)if(Nu(ca(t[n],t[r]),e)&&Nu(ca(t[n],e),t[r])&&Nu(ca(t[r],e),t[n])&&rh(t2(t[n],t[r],e),t))return[t[n],t[r],e];throw new Error}function Nu(t,e){var n=t.r-e.r,r=e.x-t.x,o=e.y-t.y;return n<0||n*n<r*r+o*o}function jx(t,e){var n=t.r-e.r+Math.max(t.r,e.r,1)*1e-9,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function rh(t,e){for(var n=0;n<e.length;++n)if(!jx(t,e[n]))return!1;return!0}function S4(t){switch(t.length){case 1:return T4(t[0]);case 2:return ca(t[0],t[1]);case 3:return t2(t[0],t[1],t[2])}}function T4(t){return{x:t.x,y:t.y,r:t.r}}function ca(t,e){var n=t.x,r=t.y,o=t.r,i=e.x,a=e.y,f=e.r,u=i-n,s=a-r,c=f-o,h=Math.sqrt(u*u+s*s);return{x:(n+i+u/h*c)/2,y:(r+a+s/h*c)/2,r:(h+o+f)/2}}function t2(t,e,n){var r=t.x,o=t.y,i=t.r,a=e.x,f=e.y,u=e.r,s=n.x,c=n.y,h=n.r,l=r-a,p=r-s,g=o-f,x=o-c,d=u-i,m=h-i,v=r*r+o*o-i*i,b=v-a*a-f*f+u*u,y=v-s*s-c*c+h*h,_=p*g-l*x,w=(g*y-x*b)/(_*2)-r,E=(x*d-g*m)/_,N=(p*b-l*y)/(_*2)-o,P=(l*m-p*d)/_,T=E*E+P*P-1,S=2*(i+w*E+N*P),C=w*w+N*N-i*i,R=-(Math.abs(T)>1e-6?(S+Math.sqrt(S*S-4*T*C))/(2*T):C/S);return{x:r+w+E*R,y:o+N+P*R,r:R}}function e2(t,e,n){var r=t.x-e.x,o,i,a=t.y-e.y,f,u,s=r*r+a*a;s?(i=e.r+n.r,i*=i,u=t.r+n.r,u*=u,i>u?(o=(s+u-i)/(2*s),f=Math.sqrt(Math.max(0,u/s-o*o)),n.x=t.x-o*r-f*a,n.y=t.y-o*a+f*r):(o=(s+i-u)/(2*s),f=Math.sqrt(Math.max(0,i/s-o*o)),n.x=e.x+o*r-f*a,n.y=e.y+o*a+f*r)):(n.x=e.x+n.r,n.y=e.y)}function n2(t,e){var n=t.r+e.r-1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function r2(t){var e=t._,n=t.next._,r=e.r+n.r,o=(e.x*n.r+n.x*e.r)/r,i=(e.y*n.r+n.y*e.r)/r;return o*o+i*i}function Ru(t){this._=t,this.next=null,this.previous=null}function ih(t,e){if(!(i=(t=Qx(t)).length))return 0;var n,r,o,i,a,f,u,s,c,h,l;if(n=t[0],n.x=0,n.y=0,!(i>1))return n.r;if(r=t[1],n.x=-r.r,r.x=n.r,r.y=0,!(i>2))return n.r+r.r;e2(r,n,o=t[2]),n=new Ru(n),r=new Ru(r),o=new Ru(o),n.next=o.previous=r,r.next=n.previous=o,o.next=r.previous=n;t:for(u=3;u<i;++u){e2(n._,r._,o=t[u]),o=new Ru(o),s=r.next,c=n.previous,h=r._.r,l=n._.r;do if(h<=l){if(n2(s._,o._)){r=s,n.next=r,r.previous=n,--u;continue t}h+=s._.r,s=s.next}else{if(n2(c._,o._)){n=c,n.next=r,r.previous=n,--u;continue t}l+=c._.r,c=c.previous}while(s!==c.next);for(o.previous=n,o.next=r,n.next=r.previous=r=o,a=r2(n);(o=o.next)!==r;)(f=r2(o))<a&&(n=o,a=f);r=n.next}for(n=[r._],o=r;(o=o.next)!==r;)n.push(o._);for(o=oh(n,e),u=0;u<i;++u)n=t[u],n.x-=o.x,n.y-=o.y;return o.r}function o2(t){return ih(t,Po()),t}function A4(t){return Math.sqrt(t.value)}function f2(){var t=null,e=1,n=1,r=wn;function o(i){let a=Po();return i.x=e/2,i.y=n/2,t?i.eachBefore(i2(t)).eachAfter(ah(r,.5,a)).eachBefore(a2(1)):i.eachBefore(i2(A4)).eachAfter(ah(wn,1,a)).eachAfter(ah(r,i.r/Math.min(e,n),a)).eachBefore(a2(Math.min(e,n)/(2*i.r))),i}return o.radius=function(i){return arguments.length?(t=Io(i),o):t},o.size=function(i){return arguments.length?(e=+i[0],n=+i[1],o):[e,n]},o.padding=function(i){return arguments.length?(r=typeof i=="function"?i:jn(+i),o):r},o}function i2(t){return function(e){e.children||(e.r=Math.max(0,+t(e)||0))}}function ah(t,e,n){return function(r){if(o=r.children){var o,i,a=o.length,f=t(r)*e||0,u;if(f)for(i=0;i<a;++i)o[i].r+=f;if(u=ih(o,n),f)for(i=0;i<a;++i)o[i].r-=f;r.r=u+f}}}function a2(t){return function(e){var n=e.parent;e.r*=t,n&&(e.x=n.x+t*e.x,e.y=n.y+t*e.y)}}function Cu(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function en(t,e,n,r,o){for(var i=t.children,a,f=-1,u=i.length,s=t.value&&(r-e)/t.value;++f<u;)a=i[f],a.y0=n,a.y1=o,a.x0=e,a.x1=e+=a.value*s}function u2(){var t=1,e=1,n=0,r=!1;function o(a){var f=a.height+1;return a.x0=a.y0=n,a.x1=t,a.y1=e/f,a.eachBefore(i(e,f)),r&&a.eachBefore(Cu),a}function i(a,f){return function(u){u.children&&en(u,u.x0,a*(u.depth+1)/f,u.x1,a*(u.depth+2)/f);var s=u.x0,c=u.y0,h=u.x1-n,l=u.y1-n;h<s&&(s=h=(s+h)/2),l<c&&(c=l=(c+l)/2),u.x0=s,u.y0=c,u.x1=h,u.y1=l}}return o.round=function(a){return arguments.length?(r=!!a,o):r},o.size=function(a){return arguments.length?(t=+a[0],e=+a[1],o):[t,e]},o.padding=function(a){return arguments.length?(n=+a,o):n},o}var k4={depth:-1},s2={},fh={};function E4(t){return t.id}function N4(t){return t.parentId}function l2(){var t=E4,e=N4,n;function r(o){var i=Array.from(o),a=t,f=e,u,s,c,h,l,p,g,x,d=new Map;if(n!=null){let m=i.map((y,_)=>R4(n(y,_,o))),v=m.map(c2),b=new Set(m).add("");for(let y of v)b.has(y)||(b.add(y),m.push(y),v.push(c2(y)),i.push(fh));a=(y,_)=>m[_],f=(y,_)=>v[_]}for(c=0,u=i.length;c<u;++c)s=i[c],p=i[c]=new tn(s),(g=a(s,c,o))!=null&&(g+="")&&(x=p.id=g,d.set(x,d.has(x)?s2:p)),(g=f(s,c,o))!=null&&(g+="")&&(p.parent=g);for(c=0;c<u;++c)if(p=i[c],g=p.parent){if(l=d.get(g),!l)throw new Error("missing: "+g);if(l===s2)throw new Error("ambiguous: "+g);l.children?l.children.push(p):l.children=[p],p.parent=l}else{if(h)throw new Error("multiple roots");h=p}if(!h)throw new Error("no root");if(n!=null){for(;h.data===fh&&h.children.length===1;)h=h.children[0],--u;for(let m=i.length-1;m>=0&&(p=i[m],p.data===fh);--m)p.data=null}if(h.parent=k4,h.eachBefore(function(m){m.depth=m.parent.depth+1,--u}).eachBefore(eh),h.parent=null,u>0)throw new Error("cycle");return h}return r.id=function(o){return arguments.length?(t=Io(o),r):t},r.parentId=function(o){return arguments.length?(e=Io(o),r):e},r.path=function(o){return arguments.length?(n=Io(o),r):n},r}function R4(t){t=`${t}`;let e=t.length;return uh(t,e-1)&&!uh(t,e-2)&&(t=t.slice(0,-1)),t[0]==="/"?t:`/${t}`}function c2(t){let e=t.length;if(e<2)return"";for(;--e>1&&!uh(t,e););return t.slice(0,e)}function uh(t,e){if(t[e]==="/"){let n=0;for(;e>0&&t[--e]==="\\";)++n;if((n&1)===0)return!0}return!1}function C4(t,e){return t.parent===e.parent?1:2}function sh(t){var e=t.children;return e?e[0]:t.t}function ch(t){var e=t.children;return e?e[e.length-1]:t.t}function I4(t,e,n){var r=n/(e.i-t.i);e.c-=r,e.s+=n,t.c+=r,e.z+=n,e.m+=n}function P4(t){for(var e=0,n=0,r=t.children,o=r.length,i;--o>=0;)i=r[o],i.z+=e,i.m+=e,e+=i.s+(n+=i.c)}function D4(t,e,n){return t.a.parent===e.parent?t.a:n}function Iu(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}Iu.prototype=Object.create(tn.prototype);function q4(t){for(var e=new Iu(t,0),n,r=[e],o,i,a,f;n=r.pop();)if(i=n._.children)for(n.children=new Array(f=i.length),a=f-1;a>=0;--a)r.push(o=n.children[a]=new Iu(i[a],a)),o.parent=n;return(e.parent=new Iu(null,0)).children=[e],e}function h2(){var t=C4,e=1,n=1,r=null;function o(s){var c=q4(s);if(c.eachAfter(i),c.parent.m=-c.z,c.eachBefore(a),r)s.eachBefore(u);else{var h=s,l=s,p=s;s.eachBefore(function(v){v.x<h.x&&(h=v),v.x>l.x&&(l=v),v.depth>p.depth&&(p=v)});var g=h===l?1:t(h,l)/2,x=g-h.x,d=e/(l.x+g+x),m=n/(p.depth||1);s.eachBefore(function(v){v.x=(v.x+x)*d,v.y=v.depth*m})}return s}function i(s){var c=s.children,h=s.parent.children,l=s.i?h[s.i-1]:null;if(c){P4(s);var p=(c[0].z+c[c.length-1].z)/2;l?(s.z=l.z+t(s._,l._),s.m=s.z-p):s.z=p}else l&&(s.z=l.z+t(s._,l._));s.parent.A=f(s,l,s.parent.A||h[0])}function a(s){s._.x=s.z+s.parent.m,s.m+=s.parent.m}function f(s,c,h){if(c){for(var l=s,p=s,g=c,x=l.parent.children[0],d=l.m,m=p.m,v=g.m,b=x.m,y;g=ch(g),l=sh(l),g&&l;)x=sh(x),p=ch(p),p.a=s,y=g.z+v-l.z-d+t(g._,l._),y>0&&(I4(D4(g,s,h),s,y),d+=y,m+=y),v+=g.m,d+=l.m,b+=x.m,m+=p.m;g&&!ch(p)&&(p.t=g,p.m+=v-m),l&&!sh(x)&&(x.t=l,x.m+=d-b,h=s)}return h}function u(s){s.x*=e,s.y=s.depth*n}return o.separation=function(s){return arguments.length?(t=s,o):t},o.size=function(s){return arguments.length?(r=!1,e=+s[0],n=+s[1],o):r?null:[e,n]},o.nodeSize=function(s){return arguments.length?(r=!0,e=+s[0],n=+s[1],o):r?[e,n]:null},o}function tr(t,e,n,r,o){for(var i=t.children,a,f=-1,u=i.length,s=t.value&&(o-n)/t.value;++f<u;)a=i[f],a.x0=e,a.x1=r,a.y0=n,a.y1=n+=a.value*s}var lh=(1+Math.sqrt(5))/2;function hh(t,e,n,r,o,i){for(var a=[],f=e.children,u,s,c=0,h=0,l=f.length,p,g,x=e.value,d,m,v,b,y,_,w;c<l;){p=o-n,g=i-r;do d=f[h++].value;while(!d&&h<l);for(m=v=d,_=Math.max(g/p,p/g)/(x*t),w=d*d*_,y=Math.max(v/w,w/m);h<l;++h){if(d+=s=f[h].value,s<m&&(m=s),s>v&&(v=s),w=d*d*_,b=Math.max(v/w,w/m),b>y){d-=s;break}y=b}a.push(u={value:d,dice:p<g,children:f.slice(c,h)}),u.dice?en(u,n,r,o,x?r+=g*d/x:i):tr(u,n,r,x?n+=p*d/x:o,i),x-=d,c=h}return a}var Pu=function t(e){function n(r,o,i,a,f){hh(e,r,o,i,a,f)}return n.ratio=function(r){return t((r=+r)>1?r:1)},n}(lh);function p2(){var t=Pu,e=!1,n=1,r=1,o=[0],i=wn,a=wn,f=wn,u=wn,s=wn;function c(l){return l.x0=l.y0=0,l.x1=n,l.y1=r,l.eachBefore(h),o=[0],e&&l.eachBefore(Cu),l}function h(l){var p=o[l.depth],g=l.x0+p,x=l.y0+p,d=l.x1-p,m=l.y1-p;d<g&&(g=d=(g+d)/2),m<x&&(x=m=(x+m)/2),l.x0=g,l.y0=x,l.x1=d,l.y1=m,l.children&&(p=o[l.depth+1]=i(l)/2,g+=s(l)-p,x+=a(l)-p,d-=f(l)-p,m-=u(l)-p,d<g&&(g=d=(g+d)/2),m<x&&(x=m=(x+m)/2),t(l,g,x,d,m))}return c.round=function(l){return arguments.length?(e=!!l,c):e},c.size=function(l){return arguments.length?(n=+l[0],r=+l[1],c):[n,r]},c.tile=function(l){return arguments.length?(t=nh(l),c):t},c.padding=function(l){return arguments.length?c.paddingInner(l).paddingOuter(l):c.paddingInner()},c.paddingInner=function(l){return arguments.length?(i=typeof l=="function"?l:jn(+l),c):i},c.paddingOuter=function(l){return arguments.length?c.paddingTop(l).paddingRight(l).paddingBottom(l).paddingLeft(l):c.paddingTop()},c.paddingTop=function(l){return arguments.length?(a=typeof l=="function"?l:jn(+l),c):a},c.paddingRight=function(l){return arguments.length?(f=typeof l=="function"?l:jn(+l),c):f},c.paddingBottom=function(l){return arguments.length?(u=typeof l=="function"?l:jn(+l),c):u},c.paddingLeft=function(l){return arguments.length?(s=typeof l=="function"?l:jn(+l),c):s},c}function d2(t,e,n,r,o){var i=t.children,a,f=i.length,u,s=new Array(f+1);for(s[0]=u=a=0;a<f;++a)s[a+1]=u+=i[a].value;c(0,f,t.value,e,n,r,o);function c(h,l,p,g,x,d,m){if(h>=l-1){var v=i[h];v.x0=g,v.y0=x,v.x1=d,v.y1=m;return}for(var b=s[h],y=p/2+b,_=h+1,w=l-1;_<w;){var E=_+w>>>1;s[E]<y?_=E+1:w=E}y-s[_-1]<s[_]-y&&h+1<_&&--_;var N=s[_]-b,P=p-N;if(d-g>m-x){var T=p?(g*P+d*N)/p:d;c(h,_,N,g,x,T,m),c(_,l,P,T,x,d,m)}else{var S=p?(x*P+m*N)/p:m;c(h,_,N,g,x,d,S),c(_,l,P,g,S,d,m)}}}function m2(t,e,n,r,o){(t.depth&1?tr:en)(t,e,n,r,o)}var g2=function t(e){function n(r,o,i,a,f){if((u=r._squarify)&&u.ratio===e)for(var u,s,c,h,l=-1,p,g=u.length,x=r.value;++l<g;){for(s=u[l],c=s.children,h=s.value=0,p=c.length;h<p;++h)s.value+=c[h].value;s.dice?en(s,o,i,a,x?i+=(f-i)*s.value/x:f):tr(s,o,i,x?o+=(a-o)*s.value/x:a,f),x-=s.value}else r._squarify=u=hh(e,r,o,i,a,f),u.ratio=e}return n.ratio=function(r){return t((r=+r)>1?r:1)},n}(lh);function x2(t){for(var e=-1,n=t.length,r,o=t[n-1],i=0;++e<n;)r=o,o=t[e],i+=r[1]*o[0]-r[0]*o[1];return i/2}function y2(t){for(var e=-1,n=t.length,r=0,o=0,i,a=t[n-1],f,u=0;++e<n;)i=a,a=t[e],u+=f=i[0]*a[1]-a[0]*i[1],r+=(i[0]+a[0])*f,o+=(i[1]+a[1])*f;return u*=3,[r/u,o/u]}function b2(t,e,n){return(e[0]-t[0])*(n[1]-t[1])-(e[1]-t[1])*(n[0]-t[0])}function O4(t,e){return t[0]-e[0]||t[1]-e[1]}function v2(t){let e=t.length,n=[0,1],r=2,o;for(o=2;o<e;++o){for(;r>1&&b2(t[n[r-2]],t[n[r-1]],t[o])<=0;)--r;n[r++]=o}return n.slice(0,r)}function _2(t){if((n=t.length)<3)return null;var e,n,r=new Array(n),o=new Array(n);for(e=0;e<n;++e)r[e]=[+t[e][0],+t[e][1],e];for(r.sort(O4),e=0;e<n;++e)o[e]=[r[e][0],-r[e][1]];var i=v2(r),a=v2(o),f=a[0]===i[0],u=a[a.length-1]===i[i.length-1],s=[];for(e=i.length-1;e>=0;--e)s.push(t[r[i[e]][2]]);for(e=+f;e<a.length-u;++e)s.push(t[r[a[e]][2]]);return s}function w2(t,e){for(var n=t.length,r=t[n-1],o=e[0],i=e[1],a=r[0],f=r[1],u,s,c=!1,h=0;h<n;++h)r=t[h],u=r[0],s=r[1],s>i!=f>i&&o<(a-u)*(i-s)/(f-s)+u&&(c=!c),a=u,f=s;return c}function M2(t){for(var e=-1,n=t.length,r=t[n-1],o,i,a=r[0],f=r[1],u=0;++e<n;)o=a,i=f,r=t[e],a=r[0],f=r[1],o-=a,i-=f,u+=Math.hypot(o,i);return u}var at=Math.random;var S2=function t(e){function n(r,o){return r=r==null?0:+r,o=o==null?1:+o,arguments.length===1?(o=r,r=0):o-=r,function(){return e()*o+r}}return n.source=t,n}(at);var T2=function t(e){function n(r,o){return arguments.length<2&&(o=r,r=0),r=Math.floor(r),o=Math.floor(o)-r,function(){return Math.floor(e()*o+r)}}return n.source=t,n}(at);var Do=function t(e){function n(r,o){var i,a;return r=r==null?0:+r,o=o==null?1:+o,function(){var f;if(i!=null)f=i,i=null;else do i=e()*2-1,f=e()*2-1,a=i*i+f*f;while(!a||a>1);return r+o*f*Math.sqrt(-2*Math.log(a)/a)}}return n.source=t,n}(at);var A2=function t(e){var n=Do.source(e);function r(){var o=n.apply(this,arguments);return function(){return Math.exp(o())}}return r.source=t,r}(at);var Du=function t(e){function n(r){return(r=+r)<=0?()=>0:function(){for(var o=0,i=r;i>1;--i)o+=e();return o+i*e()}}return n.source=t,n}(at);var k2=function t(e){var n=Du.source(e);function r(o){if((o=+o)==0)return e;var i=n(o);return function(){return i()/o}}return r.source=t,r}(at);var E2=function t(e){function n(r){return function(){return-Math.log1p(-e())/r}}return n.source=t,n}(at);var N2=function t(e){function n(r){if((r=+r)<0)throw new RangeError("invalid alpha");return r=1/-r,function(){return Math.pow(1-e(),r)}}return n.source=t,n}(at);var R2=function t(e){function n(r){if((r=+r)<0||r>1)throw new RangeError("invalid p");return function(){return Math.floor(e()+r)}}return n.source=t,n}(at);var qu=function t(e){function n(r){if((r=+r)<0||r>1)throw new RangeError("invalid p");return r===0?()=>1/0:r===1?()=>1:(r=Math.log1p(-r),function(){return 1+Math.floor(Math.log1p(-e())/r)})}return n.source=t,n}(at);var qo=function t(e){var n=Do.source(e)();function r(o,i){if((o=+o)<0)throw new RangeError("invalid k");if(o===0)return()=>0;if(i=i==null?1:+i,o===1)return()=>-Math.log1p(-e())*i;var a=(o<1?o+1:o)-1/3,f=1/(3*Math.sqrt(a)),u=o<1?()=>Math.pow(e(),1/o):()=>1;return function(){do{do var s=n(),c=1+f*s;while(c<=0);c*=c*c;var h=1-e()}while(h>=1-.0331*s*s*s*s&&Math.log(h)>=.5*s*s+a*(1-c+Math.log(c)));return a*c*u()*i}}return r.source=t,r}(at);var Ou=function t(e){var n=qo.source(e);function r(o,i){var a=n(o),f=n(i);return function(){var u=a();return u===0?0:u/(u+f())}}return r.source=t,r}(at);var Fu=function t(e){var n=qu.source(e),r=Ou.source(e);function o(i,a){return i=+i,(a=+a)>=1?()=>i:a<=0?()=>0:function(){for(var f=0,u=i,s=a;u*s>16&&u*(1-s)>16;){var c=Math.floor((u+1)*s),h=r(c,u-c+1)();h<=s?(f+=c,u-=c,s=(s-h)/(1-h)):(u=c-1,s/=h)}for(var l=s<.5,p=l?s:1-s,g=n(p),x=g(),d=0;x<=u;++d)x+=g();return f+(l?d:u-d)}}return o.source=t,o}(at);var C2=function t(e){function n(r,o,i){var a;return(r=+r)==0?a=f=>-Math.log(f):(r=1/r,a=f=>Math.pow(f,r)),o=o==null?0:+o,i=i==null?1:+i,function(){return o+i*a(-Math.log1p(-e()))}}return n.source=t,n}(at);var I2=function t(e){function n(r,o){return r=r==null?0:+r,o=o==null?1:+o,function(){return r+o*Math.tan(Math.PI*e())}}return n.source=t,n}(at);var P2=function t(e){function n(r,o){return r=r==null?0:+r,o=o==null?1:+o,function(){var i=e();return r+o*Math.log(i/(1-i))}}return n.source=t,n}(at);var D2=function t(e){var n=qo.source(e),r=Fu.source(e);function o(i){return function(){for(var a=0,f=i;f>16;){var u=Math.floor(.875*f),s=n(u)();if(s>f)return a+r(u-1,f/s)();a+=u,f-=s}for(var c=-Math.log1p(-e()),h=0;c<=f;++h)c-=Math.log1p(-e());return a+h}}return o.source=t,o}(at);var q2=23283064365386963e-26;function ph(t=Math.random()){let e=(0<=t&&t<1?t/q2:Math.abs(t))|0;return()=>(e=1664525*e+1013904223|0,q2*(e>>>0))}function _t(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t);break}return this}function ye(t,e){switch(arguments.length){case 0:break;case 1:{typeof t=="function"?this.interpolator(t):this.range(t);break}default:{this.domain(t),typeof e=="function"?this.interpolator(e):this.range(e);break}}return this}var zu=Symbol("implicit");function Oo(){var t=new ke,e=[],n=[],r=zu;function o(i){let a=t.get(i);if(a===void 0){if(r!==zu)return r;t.set(i,a=e.push(i)-1)}return n[a%n.length]}return o.domain=function(i){if(!arguments.length)return e.slice();e=[],t=new ke;for(let a of i)t.has(a)||t.set(a,e.push(a)-1);return o},o.range=function(i){return arguments.length?(n=Array.from(i),o):n.slice()},o.unknown=function(i){return arguments.length?(r=i,o):r},o.copy=function(){return Oo(e,n).unknown(r)},_t.apply(o,arguments),o}function la(){var t=Oo().unknown(void 0),e=t.domain,n=t.range,r=0,o=1,i,a,f=!1,u=0,s=0,c=.5;delete t.unknown;function h(){var l=e().length,p=o<r,g=p?o:r,x=p?r:o;i=(x-g)/Math.max(1,l-u+s*2),f&&(i=Math.floor(i)),g+=(x-g-i*(l-u))*c,a=i*(1-u),f&&(g=Math.round(g),a=Math.round(a));var d=ae(l).map(function(m){return g+i*m});return n(p?d.reverse():d)}return t.domain=function(l){return arguments.length?(e(l),h()):e()},t.range=function(l){return arguments.length?([r,o]=l,r=+r,o=+o,h()):[r,o]},t.rangeRound=function(l){return[r,o]=l,r=+r,o=+o,f=!0,h()},t.bandwidth=function(){return a},t.step=function(){return i},t.round=function(l){return arguments.length?(f=!!l,h()):f},t.padding=function(l){return arguments.length?(u=Math.min(1,s=+l),h()):u},t.paddingInner=function(l){return arguments.length?(u=Math.min(1,l),h()):u},t.paddingOuter=function(l){return arguments.length?(s=+l,h()):s},t.align=function(l){return arguments.length?(c=Math.max(0,Math.min(1,l)),h()):c},t.copy=function(){return la(e(),[r,o]).round(f).paddingInner(u).paddingOuter(s).align(c)},_t.apply(h(),arguments)}function O2(t){var e=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return O2(e())},t}function F2(){return O2(la.apply(null,arguments).paddingInner(1))}function dh(t){return function(){return t}}function er(t){return+t}var z2=[0,1];function Dt(t){return t}function mh(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:dh(isNaN(e)?NaN:.5)}function F4(t,e){var n;return t>e&&(n=t,t=e,e=n),function(r){return Math.max(t,Math.min(e,r))}}function z4(t,e,n){var r=t[0],o=t[1],i=e[0],a=e[1];return o<r?(r=mh(o,r),i=n(a,i)):(r=mh(r,o),i=n(i,a)),function(f){return i(r(f))}}function L4(t,e,n){var r=Math.min(t.length,e.length)-1,o=new Array(r),i=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++a<r;)o[a]=mh(t[a],t[a+1]),i[a]=n(e[a],e[a+1]);return function(f){var u=oe(t,f,1,r)-1;return i[u](o[u](f))}}function nn(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function zr(){var t=z2,e=z2,n=Wt,r,o,i,a=Dt,f,u,s;function c(){var l=Math.min(t.length,e.length);return a!==Dt&&(a=F4(t[0],t[l-1])),f=l>2?L4:z4,u=s=null,h}function h(l){return l==null||isNaN(l=+l)?i:(u||(u=f(t.map(r),e,n)))(r(a(l)))}return h.invert=function(l){return a(o((s||(s=f(e,t.map(r),Ot)))(l)))},h.domain=function(l){return arguments.length?(t=Array.from(l,er),c()):t.slice()},h.range=function(l){return arguments.length?(e=Array.from(l),c()):e.slice()},h.rangeRound=function(l){return e=Array.from(l),n=Un,c()},h.clamp=function(l){return arguments.length?(a=l?!0:Dt,c()):a!==Dt},h.interpolate=function(l){return arguments.length?(n=l,c()):n},h.unknown=function(l){return arguments.length?(i=l,h):i},function(l,p){return r=l,o=p,c()}}function Lr(){return zr()(Dt,Dt)}function ha(t,e,n,r){var o=Ee(t,e,n),i;switch(r=Pe(r==null?",f":r),r.type){case"s":{var a=Math.max(Math.abs(t),Math.abs(e));return r.precision==null&&!isNaN(i=qf(o,a))&&(r.precision=i),Ui(r,a)}case"":case"e":case"g":case"p":case"r":{r.precision==null&&!isNaN(i=Of(o,Math.max(Math.abs(t),Math.abs(e))))&&(r.precision=i-(r.type==="e"));break}case"f":case"%":{r.precision==null&&!isNaN(i=Df(o))&&(r.precision=i-(r.type==="%")*2);break}}return kr(r)}function re(t){var e=t.domain;return t.ticks=function(n){var r=e();return he(r[0],r[r.length-1],n==null?10:n)},t.tickFormat=function(n,r){var o=e();return ha(o[0],o[o.length-1],n==null?10:n,r)},t.nice=function(n){n==null&&(n=10);var r=e(),o=0,i=r.length-1,a=r[o],f=r[i],u,s,c=10;for(f<a&&(s=a,a=f,f=s,s=o,o=i,i=s);c-- >0;){if(s=Ue(a,f,n),s===u)return r[o]=a,r[i]=f,e(r);if(s>0)a=Math.floor(a/s)*s,f=Math.ceil(f/s)*s;else if(s<0)a=Math.ceil(a*s)/s,f=Math.floor(f*s)/s;else break;u=s}return t},t}function Lu(){var t=Lr();return t.copy=function(){return nn(t,Lu())},_t.apply(t,arguments),re(t)}function Yu(t){var e;function n(r){return r==null||isNaN(r=+r)?e:r}return n.invert=n,n.domain=n.range=function(r){return arguments.length?(t=Array.from(r,er),n):t.slice()},n.unknown=function(r){return arguments.length?(e=r,n):e},n.copy=function(){return Yu(t).unknown(e)},t=arguments.length?Array.from(t,er):[0,1],re(n)}function pa(t,e){t=t.slice();var n=0,r=t.length-1,o=t[n],i=t[r],a;return i<o&&(a=n,n=r,r=a,a=o,o=i,i=a),t[n]=e.floor(o),t[r]=e.ceil(i),t}function L2(t){return Math.log(t)}function Y2(t){return Math.exp(t)}function Y4(t){return-Math.log(-t)}function U4(t){return-Math.exp(-t)}function B4(t){return isFinite(t)?+("1e"+t):t<0?0:t}function H4(t){return t===10?B4:t===Math.E?Math.exp:e=>Math.pow(t,e)}function X4(t){return t===Math.E?Math.log:t===10&&Math.log10||t===2&&Math.log2||(t=Math.log(t),e=>Math.log(e)/t)}function U2(t){return(e,n)=>-t(-e,n)}function da(t){let e=t(L2,Y2),n=e.domain,r=10,o,i;function a(){return o=X4(r),i=H4(r),n()[0]<0?(o=U2(o),i=U2(i),t(Y4,U4)):t(L2,Y2),e}return e.base=function(f){return arguments.length?(r=+f,a()):r},e.domain=function(f){return arguments.length?(n(f),a()):n()},e.ticks=f=>{let u=n(),s=u[0],c=u[u.length-1],h=c<s;h&&([s,c]=[c,s]);let l=o(s),p=o(c),g,x,d=f==null?10:+f,m=[];if(!(r%1)&&p-l<d){if(l=Math.floor(l),p=Math.ceil(p),s>0){for(;l<=p;++l)for(g=1;g<r;++g)if(x=l<0?g/i(-l):g*i(l),!(x<s)){if(x>c)break;m.push(x)}}else for(;l<=p;++l)for(g=r-1;g>=1;--g)if(x=l>0?g/i(-l):g*i(l),!(x<s)){if(x>c)break;m.push(x)}m.length*2<d&&(m=he(s,c,d))}else m=he(l,p,Math.min(p-l,d)).map(i);return h?m.reverse():m},e.tickFormat=(f,u)=>{if(f==null&&(f=10),u==null&&(u=r===10?"s":","),typeof u!="function"&&(!(r%1)&&(u=Pe(u)).precision==null&&(u.trim=!0),u=kr(u)),f===1/0)return u;let s=Math.max(1,r*f/e.ticks().length);return c=>{let h=c/i(Math.round(o(c)));return h*r<r-.5&&(h*=r),h<=s?u(c):""}},e.nice=()=>n(pa(n(),{floor:f=>i(Math.floor(o(f))),ceil:f=>i(Math.ceil(o(f)))})),e}function Uu(){let t=da(zr()).domain([1,10]);return t.copy=()=>nn(t,Uu()).base(t.base()),_t.apply(t,arguments),t}function B2(t){return function(e){return Math.sign(e)*Math.log1p(Math.abs(e/t))}}function H2(t){return function(e){return Math.sign(e)*Math.expm1(Math.abs(e))*t}}function ma(t){var e=1,n=t(B2(e),H2(e));return n.constant=function(r){return arguments.length?t(B2(e=+r),H2(e)):e},re(n)}function Bu(){var t=ma(zr());return t.copy=function(){return nn(t,Bu()).constant(t.constant())},_t.apply(t,arguments)}function X2(t){return function(e){return e<0?-Math.pow(-e,t):Math.pow(e,t)}}function W4(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function $4(t){return t<0?-t*t:t*t}function ga(t){var e=t(Dt,Dt),n=1;function r(){return n===1?t(Dt,Dt):n===.5?t(W4,$4):t(X2(n),X2(1/n))}return e.exponent=function(o){return arguments.length?(n=+o,r()):n},re(e)}function xa(){var t=ga(zr());return t.copy=function(){return nn(t,xa()).exponent(t.exponent())},_t.apply(t,arguments),t}function W2(){return xa.apply(null,arguments).exponent(.5)}function $2(t){return Math.sign(t)*t*t}function V4(t){return Math.sign(t)*Math.sqrt(Math.abs(t))}function Hu(){var t=Lr(),e=[0,1],n=!1,r;function o(i){var a=V4(t(i));return isNaN(a)?r:n?Math.round(a):a}return o.invert=function(i){return t.invert($2(i))},o.domain=function(i){return arguments.length?(t.domain(i),o):t.domain()},o.range=function(i){return arguments.length?(t.range((e=Array.from(i,er)).map($2)),o):e.slice()},o.rangeRound=function(i){return o.range(i).round(!0)},o.round=function(i){return arguments.length?(n=!!i,o):n},o.clamp=function(i){return arguments.length?(t.clamp(i),o):t.clamp()},o.unknown=function(i){return arguments.length?(r=i,o):r},o.copy=function(){return Hu(t.domain(),e).round(n).clamp(t.clamp()).unknown(r)},_t.apply(o,arguments),re(o)}function Xu(){var t=[],e=[],n=[],r;function o(){var a=0,f=Math.max(1,e.length);for(n=new Array(f-1);++a<f;)n[a-1]=Ia(t,a/f);return i}function i(a){return a==null||isNaN(a=+a)?r:e[oe(n,a)]}return i.invertExtent=function(a){var f=e.indexOf(a);return f<0?[NaN,NaN]:[f>0?n[f-1]:t[0],f<n.length?n[f]:t[t.length-1]]},i.domain=function(a){if(!arguments.length)return t.slice();t=[];for(let f of a)f!=null&&!isNaN(f=+f)&&t.push(f);return t.sort(et),o()},i.range=function(a){return arguments.length?(e=Array.from(a),o()):e.slice()},i.unknown=function(a){return arguments.length?(r=a,i):r},i.quantiles=function(){return n.slice()},i.copy=function(){return Xu().domain(t).range(e).unknown(r)},_t.apply(i,arguments)}function Wu(){var t=0,e=1,n=1,r=[.5],o=[0,1],i;function a(u){return u!=null&&u<=u?o[oe(r,u,0,n)]:i}function f(){var u=-1;for(r=new Array(n);++u<n;)r[u]=((u+1)*e-(u-n)*t)/(n+1);return a}return a.domain=function(u){return arguments.length?([t,e]=u,t=+t,e=+e,f()):[t,e]},a.range=function(u){return arguments.length?(n=(o=Array.from(u)).length-1,f()):o.slice()},a.invertExtent=function(u){var s=o.indexOf(u);return s<0?[NaN,NaN]:s<1?[t,r[0]]:s>=n?[r[n-1],e]:[r[s-1],r[s]]},a.unknown=function(u){return arguments.length&&(i=u),a},a.thresholds=function(){return r.slice()},a.copy=function(){return Wu().domain([t,e]).range(o).unknown(i)},_t.apply(re(a),arguments)}function $u(){var t=[.5],e=[0,1],n,r=1;function o(i){return i!=null&&i<=i?e[oe(t,i,0,r)]:n}return o.domain=function(i){return arguments.length?(t=Array.from(i),r=Math.min(t.length,e.length-1),o):t.slice()},o.range=function(i){return arguments.length?(e=Array.from(i),r=Math.min(t.length,e.length-1),o):e.slice()},o.invertExtent=function(i){var a=e.indexOf(i);return[t[a-1],t[a]]},o.unknown=function(i){return arguments.length?(n=i,o):n},o.copy=function(){return $u().domain(t).range(e).unknown(n)},_t.apply(o,arguments)}var gh=new Date,xh=new Date;function ot(t,e,n,r){function o(i){return t(i=arguments.length===0?new Date:new Date(+i)),i}return o.floor=function(i){return t(i=new Date(+i)),i},o.ceil=function(i){return t(i=new Date(i-1)),e(i,1),t(i),i},o.round=function(i){var a=o(i),f=o.ceil(i);return i-a<f-i?a:f},o.offset=function(i,a){return e(i=new Date(+i),a==null?1:Math.floor(a)),i},o.range=function(i,a,f){var u=[],s;if(i=o.ceil(i),f=f==null?1:Math.floor(f),!(i<a)||!(f>0))return u;do u.push(s=new Date(+i)),e(i,f),t(i);while(s<i&&i<a);return u},o.filter=function(i){return ot(function(a){if(a>=a)for(;t(a),!i(a);)a.setTime(a-1)},function(a,f){if(a>=a)if(f<0)for(;++f<=0;)for(;e(a,-1),!i(a););else for(;--f>=0;)for(;e(a,1),!i(a););})},n&&(o.count=function(i,a){return gh.setTime(+i),xh.setTime(+a),t(gh),t(xh),Math.floor(n(gh,xh))},o.every=function(i){return i=Math.floor(i),!isFinite(i)||!(i>0)?null:i>1?o.filter(r?function(a){return r(a)%i===0}:function(a){return o.count(0,a)%i===0}):o}),o}var Vu=ot(function(){},function(t,e){t.setTime(+t+e)},function(t,e){return e-t});Vu.every=function(t){return t=Math.floor(t),!isFinite(t)||!(t>0)?null:t>1?ot(function(e){e.setTime(Math.floor(e/t)*t)},function(e,n){e.setTime(+e+n*t)},function(e,n){return(n-e)/t}):Vu};var ya=Vu,yh=Vu.range;var V2=ot(function(t){t.setTime(t-t.getMilliseconds())},function(t,e){t.setTime(+t+e*1e3)},function(t,e){return(e-t)/1e3},function(t){return t.getUTCSeconds()}),be=V2,bh=V2.range;var G2=ot(function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*1e3)},function(t,e){t.setTime(+t+e*6e4)},function(t,e){return(e-t)/6e4},function(t){return t.getMinutes()}),Fo=G2,Z2=G2.range;var Q2=ot(function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*1e3-t.getMinutes()*6e4)},function(t,e){t.setTime(+t+e*36e5)},function(t,e){return(e-t)/36e5},function(t){return t.getHours()}),zo=Q2,K2=Q2.range;var J2=ot(t=>t.setHours(0,0,0,0),(t,e)=>t.setDate(t.getDate()+e),(t,e)=>(e-t-(e.getTimezoneOffset()-t.getTimezoneOffset())*6e4)/864e5,t=>t.getDate()-1),Mn=J2,j2=J2.range;function Br(t){return ot(function(e){e.setDate(e.getDate()-(e.getDay()+7-t)%7),e.setHours(0,0,0,0)},function(e,n){e.setDate(e.getDate()+n*7)},function(e,n){return(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*6e4)/6048e5})}var on=Br(0),Hr=Br(1),_h=Br(2),wh=Br(3),Sn=Br(4),Mh=Br(5),Sh=Br(6),Th=on.range,ey=Hr.range,ny=_h.range,ry=wh.range,oy=Sn.range,iy=Mh.range,ay=Sh.range;var fy=ot(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,e){t.setMonth(t.getMonth()+e)},function(t,e){return e.getMonth()-t.getMonth()+(e.getFullYear()-t.getFullYear())*12},function(t){return t.getMonth()}),Lo=fy,uy=fy.range;var Ah=ot(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,e){t.setFullYear(t.getFullYear()+e)},function(t,e){return e.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Ah.every=function(t){return!isFinite(t=Math.floor(t))||!(t>0)?null:ot(function(e){e.setFullYear(Math.floor(e.getFullYear()/t)*t),e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,n){e.setFullYear(e.getFullYear()+n*t)})};var ve=Ah,sy=Ah.range;var cy=ot(function(t){t.setUTCSeconds(0,0)},function(t,e){t.setTime(+t+e*6e4)},function(t,e){return(e-t)/6e4},function(t){return t.getUTCMinutes()}),Yo=cy,ly=cy.range;var hy=ot(function(t){t.setUTCMinutes(0,0,0)},function(t,e){t.setTime(+t+e*36e5)},function(t,e){return(e-t)/36e5},function(t){return t.getUTCHours()}),Uo=hy,py=hy.range;var dy=ot(function(t){t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCDate(t.getUTCDate()+e)},function(t,e){return(e-t)/864e5},function(t){return t.getUTCDate()-1}),Tn=dy,my=dy.range;function Xr(t){return ot(function(e){e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+7-t)%7),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCDate(e.getUTCDate()+n*7)},function(e,n){return(n-e)/6048e5})}var an=Xr(0),Wr=Xr(1),kh=Xr(2),Eh=Xr(3),An=Xr(4),Nh=Xr(5),Rh=Xr(6),Ch=an.range,gy=Wr.range,xy=kh.range,yy=Eh.range,by=An.range,vy=Nh.range,_y=Rh.range;var wy=ot(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCMonth(t.getUTCMonth()+e)},function(t,e){return e.getUTCMonth()-t.getUTCMonth()+(e.getUTCFullYear()-t.getUTCFullYear())*12},function(t){return t.getUTCMonth()}),Bo=wy,My=wy.range;var Ih=ot(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCFullYear(t.getUTCFullYear()+e)},function(t,e){return e.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});Ih.every=function(t){return!isFinite(t=Math.floor(t))||!(t>0)?null:ot(function(e){e.setUTCFullYear(Math.floor(e.getUTCFullYear()/t)*t),e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n*t)})};var _e=Ih,Sy=Ih.range;function Ay(t,e,n,r,o,i){let a=[[be,1,1e3],[be,5,5*1e3],[be,15,15*1e3],[be,30,30*1e3],[i,1,6e4],[i,5,5*6e4],[i,15,15*6e4],[i,30,30*6e4],[o,1,36e5],[o,3,3*36e5],[o,6,6*36e5],[o,12,12*36e5],[r,1,864e5],[r,2,2*864e5],[n,1,6048e5],[e,1,2592e6],[e,3,3*2592e6],[t,1,31536e6]];function f(s,c,h){let l=c<s;l&&([s,c]=[c,s]);let p=h&&typeof h.range=="function"?h:u(s,c,h),g=p?p.range(s,+c+1):[];return l?g.reverse():g}function u(s,c,h){let l=Math.abs(c-s)/h,p=Nn(([,,d])=>d).right(a,l);if(p===a.length)return t.every(Ee(s/31536e6,c/31536e6,h));if(p===0)return ya.every(Math.max(Ee(s,c,h),1));let[g,x]=a[l/a[p-1][2]<a[p][2]/l?p-1:p];return g.every(x)}return[f,u]}var[Gu,Zu]=Ay(_e,Bo,an,Tn,Uo,Yo),[Qu,Ku]=Ay(ve,Lo,on,Mn,zo,Fo);function Ph(t){if(0<=t.y&&t.y<100){var e=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return e.setFullYear(t.y),e}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Dh(t){if(0<=t.y&&t.y<100){var e=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return e.setUTCFullYear(t.y),e}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function ba(t,e,n){return{y:t,m:e,d:n,H:0,M:0,S:0,L:0}}function wa(t){var e=t.dateTime,n=t.date,r=t.time,o=t.periods,i=t.days,a=t.shortDays,f=t.months,u=t.shortMonths,s=va(o),c=_a(o),h=va(i),l=_a(i),p=va(a),g=_a(a),x=va(f),d=_a(f),m=va(u),v=_a(u),b={a:I,A:q,b:O,B:Y,c:null,d:Iy,e:Iy,f:x8,g:k8,G:N8,H:d8,I:m8,j:g8,L:Fy,m:y8,M:b8,p:X,q:$,Q:qy,s:Oy,S:v8,u:_8,U:w8,V:M8,w:S8,W:T8,x:null,X:null,y:A8,Y:E8,Z:R8,"%":Dy},y={a:lt,A:j,b:ht,B:Rt,c:null,d:Py,e:Py,f:D8,g:X8,G:$8,H:C8,I:I8,j:P8,L:Ly,m:q8,M:O8,p:ut,q:kt,Q:qy,s:Oy,S:F8,u:z8,U:L8,V:Y8,w:U8,W:B8,x:null,X:null,y:H8,Y:W8,Z:V8,"%":Dy},_={a:T,A:S,b:C,B:R,c:M,d:Ry,e:Ry,f:c8,g:Ny,G:Ey,H:Cy,I:Cy,j:a8,L:s8,m:i8,M:f8,p:P,q:o8,Q:h8,s:p8,S:u8,u:j4,U:t8,V:e8,w:J4,W:n8,x:A,X:k,y:Ny,Y:Ey,Z:r8,"%":l8};b.x=w(n,b),b.X=w(r,b),b.c=w(e,b),y.x=w(n,y),y.X=w(r,y),y.c=w(e,y);function w(B,J){return function(nt){var F=[],Mt=-1,pt=0,Qt=B.length,Kt,Q,St;for(nt instanceof Date||(nt=new Date(+nt));++Mt<Qt;)B.charCodeAt(Mt)===37&&(F.push(B.slice(pt,Mt)),(Q=ky[Kt=B.charAt(++Mt)])!=null?Kt=B.charAt(++Mt):Q=Kt==="e"?" ":"0",(St=J[Kt])&&(Kt=St(nt,Q)),F.push(Kt),pt=Mt+1);return F.push(B.slice(pt,Mt)),F.join("")}}function E(B,J){return function(nt){var F=ba(1900,void 0,1),Mt=N(F,B,nt+="",0),pt,Qt;if(Mt!=nt.length)return null;if("Q"in F)return new Date(F.Q);if("s"in F)return new Date(F.s*1e3+("L"in F?F.L:0));if(J&&!("Z"in F)&&(F.Z=0),"p"in F&&(F.H=F.H%12+F.p*12),F.m===void 0&&(F.m="q"in F?F.q:0),"V"in F){if(F.V<1||F.V>53)return null;"w"in F||(F.w=1),"Z"in F?(pt=Dh(ba(F.y,0,1)),Qt=pt.getUTCDay(),pt=Qt>4||Qt===0?Wr.ceil(pt):Wr(pt),pt=Tn.offset(pt,(F.V-1)*7),F.y=pt.getUTCFullYear(),F.m=pt.getUTCMonth(),F.d=pt.getUTCDate()+(F.w+6)%7):(pt=Ph(ba(F.y,0,1)),Qt=pt.getDay(),pt=Qt>4||Qt===0?Hr.ceil(pt):Hr(pt),pt=Mn.offset(pt,(F.V-1)*7),F.y=pt.getFullYear(),F.m=pt.getMonth(),F.d=pt.getDate()+(F.w+6)%7)}else("W"in F||"U"in F)&&("w"in F||(F.w="u"in F?F.u%7:"W"in F?1:0),Qt="Z"in F?Dh(ba(F.y,0,1)).getUTCDay():Ph(ba(F.y,0,1)).getDay(),F.m=0,F.d="W"in F?(F.w+6)%7+F.W*7-(Qt+5)%7:F.w+F.U*7-(Qt+6)%7);return"Z"in F?(F.H+=F.Z/100|0,F.M+=F.Z%100,Dh(F)):Ph(F)}}function N(B,J,nt,F){for(var Mt=0,pt=J.length,Qt=nt.length,Kt,Q;Mt<pt;){if(F>=Qt)return-1;if(Kt=J.charCodeAt(Mt++),Kt===37){if(Kt=J.charAt(Mt++),Q=_[Kt in ky?J.charAt(Mt++):Kt],!Q||(F=Q(B,nt,F))<0)return-1}else if(Kt!=nt.charCodeAt(F++))return-1}return F}function P(B,J,nt){var F=s.exec(J.slice(nt));return F?(B.p=c.get(F[0].toLowerCase()),nt+F[0].length):-1}function T(B,J,nt){var F=p.exec(J.slice(nt));return F?(B.w=g.get(F[0].toLowerCase()),nt+F[0].length):-1}function S(B,J,nt){var F=h.exec(J.slice(nt));return F?(B.w=l.get(F[0].toLowerCase()),nt+F[0].length):-1}function C(B,J,nt){var F=m.exec(J.slice(nt));return F?(B.m=v.get(F[0].toLowerCase()),nt+F[0].length):-1}function R(B,J,nt){var F=x.exec(J.slice(nt));return F?(B.m=d.get(F[0].toLowerCase()),nt+F[0].length):-1}function M(B,J,nt){return N(B,e,J,nt)}function A(B,J,nt){return N(B,n,J,nt)}function k(B,J,nt){return N(B,r,J,nt)}function I(B){return a[B.getDay()]}function q(B){return i[B.getDay()]}function O(B){return u[B.getMonth()]}function Y(B){return f[B.getMonth()]}function X(B){return o[+(B.getHours()>=12)]}function $(B){return 1+~~(B.getMonth()/3)}function lt(B){return a[B.getUTCDay()]}function j(B){return i[B.getUTCDay()]}function ht(B){return u[B.getUTCMonth()]}function Rt(B){return f[B.getUTCMonth()]}function ut(B){return o[+(B.getUTCHours()>=12)]}function kt(B){return 1+~~(B.getUTCMonth()/3)}return{format:function(B){var J=w(B+="",b);return J.toString=function(){return B},J},parse:function(B){var J=E(B+="",!1);return J.toString=function(){return B},J},utcFormat:function(B){var J=w(B+="",y);return J.toString=function(){return B},J},utcParse:function(B){var J=E(B+="",!0);return J.toString=function(){return B},J}}}var ky={"-":"",_:" ",0:"0"},Lt=/^\s*\d+/,Z4=/^%/,Q4=/[\\^$*+?|[\]().{}]/g;function ct(t,e,n){var r=t<0?"-":"",o=(r?-t:t)+"",i=o.length;return r+(i<n?new Array(n-i+1).join(e)+o:o)}function K4(t){return t.replace(Q4,"\\$&")}function va(t){return new RegExp("^(?:"+t.map(K4).join("|")+")","i")}function _a(t){return new Map(t.map((e,n)=>[e.toLowerCase(),n]))}function J4(t,e,n){var r=Lt.exec(e.slice(n,n+1));return r?(t.w=+r[0],n+r[0].length):-1}function j4(t,e,n){var r=Lt.exec(e.slice(n,n+1));return r?(t.u=+r[0],n+r[0].length):-1}function t8(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.U=+r[0],n+r[0].length):-1}function e8(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.V=+r[0],n+r[0].length):-1}function n8(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.W=+r[0],n+r[0].length):-1}function Ey(t,e,n){var r=Lt.exec(e.slice(n,n+4));return r?(t.y=+r[0],n+r[0].length):-1}function Ny(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function r8(t,e,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n,n+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function o8(t,e,n){var r=Lt.exec(e.slice(n,n+1));return r?(t.q=r[0]*3-3,n+r[0].length):-1}function i8(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.m=r[0]-1,n+r[0].length):-1}function Ry(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.d=+r[0],n+r[0].length):-1}function a8(t,e,n){var r=Lt.exec(e.slice(n,n+3));return r?(t.m=0,t.d=+r[0],n+r[0].length):-1}function Cy(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.H=+r[0],n+r[0].length):-1}function f8(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.M=+r[0],n+r[0].length):-1}function u8(t,e,n){var r=Lt.exec(e.slice(n,n+2));return r?(t.S=+r[0],n+r[0].length):-1}function s8(t,e,n){var r=Lt.exec(e.slice(n,n+3));return r?(t.L=+r[0],n+r[0].length):-1}function c8(t,e,n){var r=Lt.exec(e.slice(n,n+6));return r?(t.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function l8(t,e,n){var r=Z4.exec(e.slice(n,n+1));return r?n+r[0].length:-1}function h8(t,e,n){var r=Lt.exec(e.slice(n));return r?(t.Q=+r[0],n+r[0].length):-1}function p8(t,e,n){var r=Lt.exec(e.slice(n));return r?(t.s=+r[0],n+r[0].length):-1}function Iy(t,e){return ct(t.getDate(),e,2)}function d8(t,e){return ct(t.getHours(),e,2)}function m8(t,e){return ct(t.getHours()%12||12,e,2)}function g8(t,e){return ct(1+Mn.count(ve(t),t),e,3)}function Fy(t,e){return ct(t.getMilliseconds(),e,3)}function x8(t,e){return Fy(t,e)+"000"}function y8(t,e){return ct(t.getMonth()+1,e,2)}function b8(t,e){return ct(t.getMinutes(),e,2)}function v8(t,e){return ct(t.getSeconds(),e,2)}function _8(t){var e=t.getDay();return e===0?7:e}function w8(t,e){return ct(on.count(ve(t)-1,t),e,2)}function zy(t){var e=t.getDay();return e>=4||e===0?Sn(t):Sn.ceil(t)}function M8(t,e){return t=zy(t),ct(Sn.count(ve(t),t)+(ve(t).getDay()===4),e,2)}function S8(t){return t.getDay()}function T8(t,e){return ct(Hr.count(ve(t)-1,t),e,2)}function A8(t,e){return ct(t.getFullYear()%100,e,2)}function k8(t,e){return t=zy(t),ct(t.getFullYear()%100,e,2)}function E8(t,e){return ct(t.getFullYear()%1e4,e,4)}function N8(t,e){var n=t.getDay();return t=n>=4||n===0?Sn(t):Sn.ceil(t),ct(t.getFullYear()%1e4,e,4)}function R8(t){var e=t.getTimezoneOffset();return(e>0?"-":(e*=-1,"+"))+ct(e/60|0,"0",2)+ct(e%60,"0",2)}function Py(t,e){return ct(t.getUTCDate(),e,2)}function C8(t,e){return ct(t.getUTCHours(),e,2)}function I8(t,e){return ct(t.getUTCHours()%12||12,e,2)}function P8(t,e){return ct(1+Tn.count(_e(t),t),e,3)}function Ly(t,e){return ct(t.getUTCMilliseconds(),e,3)}function D8(t,e){return Ly(t,e)+"000"}function q8(t,e){return ct(t.getUTCMonth()+1,e,2)}function O8(t,e){return ct(t.getUTCMinutes(),e,2)}function F8(t,e){return ct(t.getUTCSeconds(),e,2)}function z8(t){var e=t.getUTCDay();return e===0?7:e}function L8(t,e){return ct(an.count(_e(t)-1,t),e,2)}function Yy(t){var e=t.getUTCDay();return e>=4||e===0?An(t):An.ceil(t)}function Y8(t,e){return t=Yy(t),ct(An.count(_e(t),t)+(_e(t).getUTCDay()===4),e,2)}function U8(t){return t.getUTCDay()}function B8(t,e){return ct(Wr.count(_e(t)-1,t),e,2)}function H8(t,e){return ct(t.getUTCFullYear()%100,e,2)}function X8(t,e){return t=Yy(t),ct(t.getUTCFullYear()%100,e,2)}function W8(t,e){return ct(t.getUTCFullYear()%1e4,e,4)}function $8(t,e){var n=t.getUTCDay();return t=n>=4||n===0?An(t):An.ceil(t),ct(t.getUTCFullYear()%1e4,e,4)}function V8(){return"+0000"}function Dy(){return"%"}function qy(t){return+t}function Oy(t){return Math.floor(+t/1e3)}var Ho,Ma,qh,$r,Sa;Ju({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function Ju(t){return Ho=wa(t),Ma=Ho.format,qh=Ho.parse,$r=Ho.utcFormat,Sa=Ho.utcParse,Ho}var Oh="%Y-%m-%dT%H:%M:%S.%LZ";function G8(t){return t.toISOString()}var Z8=Date.prototype.toISOString?G8:$r(Oh),Uy=Z8;function Q8(t){var e=new Date(t);return isNaN(e)?null:e}var K8=+new Date("2000-01-01T00:00:00.000Z")?Q8:Sa(Oh),By=K8;function J8(t){return new Date(t)}function j8(t){return t instanceof Date?+t:+new Date(+t)}function ju(t,e,n,r,o,i,a,f,u,s){var c=Lr(),h=c.invert,l=c.domain,p=s(".%L"),g=s(":%S"),x=s("%I:%M"),d=s("%I %p"),m=s("%a %d"),v=s("%b %d"),b=s("%B"),y=s("%Y");function _(w){return(u(w)<w?p:f(w)<w?g:a(w)<w?x:i(w)<w?d:r(w)<w?o(w)<w?m:v:n(w)<w?b:y)(w)}return c.invert=function(w){return new Date(h(w))},c.domain=function(w){return arguments.length?l(Array.from(w,j8)):l().map(J8)},c.ticks=function(w){var E=l();return t(E[0],E[E.length-1],w==null?10:w)},c.tickFormat=function(w,E){return E==null?_:s(E)},c.nice=function(w){var E=l();return(!w||typeof w.range!="function")&&(w=e(E[0],E[E.length-1],w==null?10:w)),w?l(pa(E,w)):c},c.copy=function(){return nn(c,ju(t,e,n,r,o,i,a,f,u,s))},c}function Fh(){return _t.apply(ju(Qu,Ku,ve,Lo,on,Mn,zo,Fo,be,Ma).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)}function zh(){return _t.apply(ju(Gu,Zu,_e,Bo,an,Tn,Uo,Yo,be,$r).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)}function ts(){var t=0,e=1,n,r,o,i,a=Dt,f=!1,u;function s(h){return h==null||isNaN(h=+h)?u:a(o===0?.5:(h=(i(h)-n)*o,f?Math.max(0,Math.min(1,h)):h))}s.domain=function(h){return arguments.length?([t,e]=h,n=i(t=+t),r=i(e=+e),o=n===r?0:1/(r-n),s):[t,e]},s.clamp=function(h){return arguments.length?(f=!!h,s):f},s.interpolator=function(h){return arguments.length?(a=h,s):a};function c(h){return function(l){var p,g;return arguments.length?([p,g]=l,a=h(p,g),s):[a(0),a(1)]}}return s.range=c(Wt),s.rangeRound=c(Un),s.unknown=function(h){return arguments.length?(u=h,s):u},function(h){return i=h,n=h(t),r=h(e),o=n===r?0:1/(r-n),s}}function kn(t,e){return e.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function es(){var t=re(ts()(Dt));return t.copy=function(){return kn(t,es())},ye.apply(t,arguments)}function Lh(){var t=da(ts()).domain([1,10]);return t.copy=function(){return kn(t,Lh()).base(t.base())},ye.apply(t,arguments)}function Yh(){var t=ma(ts());return t.copy=function(){return kn(t,Yh()).constant(t.constant())},ye.apply(t,arguments)}function ns(){var t=ga(ts());return t.copy=function(){return kn(t,ns()).exponent(t.exponent())},ye.apply(t,arguments)}function Hy(){return ns.apply(null,arguments).exponent(.5)}function rs(){var t=[],e=Dt;function n(r){if(r!=null&&!isNaN(r=+r))return e((oe(t,r,1)-1)/(t.length-1))}return n.domain=function(r){if(!arguments.length)return t.slice();t=[];for(let o of r)o!=null&&!isNaN(o=+o)&&t.push(o);return t.sort(et),n},n.interpolator=function(r){return arguments.length?(e=r,n):e},n.range=function(){return t.map((r,o)=>e(o/(t.length-1)))},n.quantiles=function(r){return Array.from({length:r+1},(o,i)=>Be(t,i/r))},n.copy=function(){return rs(e).domain(t)},ye.apply(n,arguments)}function os(){var t=0,e=.5,n=1,r=1,o,i,a,f,u,s=Dt,c,h=!1,l;function p(x){return isNaN(x=+x)?l:(x=.5+((x=+c(x))-i)*(r*x<r*i?f:u),s(h?Math.max(0,Math.min(1,x)):x))}p.domain=function(x){return arguments.length?([t,e,n]=x,o=c(t=+t),i=c(e=+e),a=c(n=+n),f=o===i?0:.5/(i-o),u=i===a?0:.5/(a-i),r=i<o?-1:1,p):[t,e,n]},p.clamp=function(x){return arguments.length?(h=!!x,p):h},p.interpolator=function(x){return arguments.length?(s=x,p):s};function g(x){return function(d){var m,v,b;return arguments.length?([m,v,b]=d,s=Ti(x,[m,v,b]),p):[s(0),s(.5),s(1)]}}return p.range=g(Wt),p.rangeRound=g(Un),p.unknown=function(x){return arguments.length?(l=x,p):l},function(x){return c=x,o=x(t),i=x(e),a=x(n),f=o===i?0:.5/(i-o),u=i===a?0:.5/(a-i),r=i<o?-1:1,p}}function is(){var t=re(os()(Dt));return t.copy=function(){return kn(t,is())},ye.apply(t,arguments)}function Uh(){var t=da(os()).domain([.1,1,10]);return t.copy=function(){return kn(t,Uh()).base(t.base())},ye.apply(t,arguments)}function Bh(){var t=ma(os());return t.copy=function(){return kn(t,Bh()).constant(t.constant())},ye.apply(t,arguments)}function as(){var t=ga(os());return t.copy=function(){return kn(t,as()).exponent(t.exponent())},ye.apply(t,arguments)}function Xy(){return as.apply(null,arguments).exponent(.5)}function U(t){for(var e=t.length/6|0,n=new Array(e),r=0;r<e;)n[r]="#"+t.slice(r*6,++r*6);return n}var Wy=U("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");var $y=U("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");var Vy=U("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");var Gy=U("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");var Zy=U("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");var Qy=U("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");var Ky=U("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");var Jy=U("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");var jy=U("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");var tb=U("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");var V=t=>Ja(t[t.length-1]);var Hh=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(U),eb=V(Hh);var Xh=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(U),nb=V(Xh);var Wh=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(U),rb=V(Wh);var $h=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(U),ob=V($h);var Vh=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(U),ib=V(Vh);var Gh=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(U),ab=V(Gh);var Zh=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(U),fb=V(Zh);var Qh=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(U),ub=V(Qh);var Kh=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(U),sb=V(Kh);var Jh=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(U),cb=V(Jh);var jh=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(U),lb=V(jh);var tp=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(U),hb=V(tp);var ep=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(U),pb=V(ep);var np=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(U),db=V(np);var rp=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(U),mb=V(rp);var op=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(U),gb=V(op);var ip=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(U),xb=V(ip);var ap=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(U),yb=V(ap);var fp=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(U),bb=V(fp);var up=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(U),vb=V(up);var sp=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(U),_b=V(sp);var cp=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(U),wb=V(cp);var lp=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(U),Mb=V(lp);var hp=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(U),Sb=V(hp);var pp=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(U),Tb=V(pp);var dp=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(U),Ab=V(dp);var mp=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(U),kb=V(mp);function Eb(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-t*2710.57)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-t*67.37)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-t*2475.67)))))))+")"}var Nb=pr(Xt(300,.5,0),Xt(-240,.5,1));var Rb=pr(Xt(-100,.75,.35),Xt(80,1.5,.8)),Cb=pr(Xt(260,.75,.35),Xt(80,1.5,.8)),fs=Xt();function Ib(t){(t<0||t>1)&&(t-=Math.floor(t));var e=Math.abs(t-.5);return fs.h=360*t-100,fs.s=1.5-1.5*e,fs.l=.8-.9*e,fs+""}var us=pn(),t5=Math.PI/3,e5=Math.PI*2/3;function Pb(t){var e;return t=(.5-t)*Math.PI,us.r=255*(e=Math.sin(t))*e,us.g=255*(e=Math.sin(t+t5))*e,us.b=255*(e=Math.sin(t+e5))*e,us+""}function Db(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-t*14825.05)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+t*707.56)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-t*6838.66)))))))+")"}function ss(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}var qb=ss(U("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Ob=ss(U("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Fb=ss(U("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),zb=ss(U("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function Z(t){return function(){return t}}var gp=Math.abs,Ht=Math.atan2,Fe=Math.cos,Lb=Math.max,fn=Math.min,Zt=Math.sin,tt=Math.sqrt,Yt=1e-12,ze=Math.PI,Ta=ze/2,we=2*ze;function Yb(t){return t>1?0:t<-1?ze:Math.acos(t)}function xp(t){return t>=1?Ta:t<=-1?-Ta:Math.asin(t)}function n5(t){return t.innerRadius}function r5(t){return t.outerRadius}function o5(t){return t.startAngle}function i5(t){return t.endAngle}function a5(t){return t&&t.padAngle}function f5(t,e,n,r,o,i,a,f){var u=n-t,s=r-e,c=a-o,h=f-i,l=h*u-c*s;if(!(l*l<Yt))return l=(c*(e-i)-h*(t-o))/l,[t+l*u,e+l*s]}function cs(t,e,n,r,o,i,a){var f=t-n,u=e-r,s=(a?i:-i)/tt(f*f+u*u),c=s*u,h=-s*f,l=t+c,p=e+h,g=n+c,x=r+h,d=(l+g)/2,m=(p+x)/2,v=g-l,b=x-p,y=v*v+b*b,_=o-i,w=l*x-g*p,E=(b<0?-1:1)*tt(Lb(0,_*_*y-w*w)),N=(w*b-v*E)/y,P=(-w*v-b*E)/y,T=(w*b+v*E)/y,S=(-w*v+b*E)/y,C=N-d,R=P-m,M=T-d,A=S-m;return C*C+R*R>M*M+A*A&&(N=T,P=S),{cx:N,cy:P,x01:-c,y01:-h,x11:N*(o/_-1),y11:P*(o/_-1)}}function Ub(){var t=n5,e=r5,n=Z(0),r=null,o=o5,i=i5,a=a5,f=null;function u(){var s,c,h=+t.apply(this,arguments),l=+e.apply(this,arguments),p=o.apply(this,arguments)-Ta,g=i.apply(this,arguments)-Ta,x=gp(g-p),d=g>p;if(f||(f=s=fe()),l<h&&(c=l,l=h,h=c),!(l>Yt))f.moveTo(0,0);else if(x>we-Yt)f.moveTo(l*Fe(p),l*Zt(p)),f.arc(0,0,l,p,g,!d),h>Yt&&(f.moveTo(h*Fe(g),h*Zt(g)),f.arc(0,0,h,g,p,d));else{var m=p,v=g,b=p,y=g,_=x,w=x,E=a.apply(this,arguments)/2,N=E>Yt&&(r?+r.apply(this,arguments):tt(h*h+l*l)),P=fn(gp(l-h)/2,+n.apply(this,arguments)),T=P,S=P,C,R;if(N>Yt){var M=xp(N/h*Zt(E)),A=xp(N/l*Zt(E));(_-=M*2)>Yt?(M*=d?1:-1,b+=M,y-=M):(_=0,b=y=(p+g)/2),(w-=A*2)>Yt?(A*=d?1:-1,m+=A,v-=A):(w=0,m=v=(p+g)/2)}var k=l*Fe(m),I=l*Zt(m),q=h*Fe(y),O=h*Zt(y);if(P>Yt){var Y=l*Fe(v),X=l*Zt(v),$=h*Fe(b),lt=h*Zt(b),j;if(x<ze&&(j=f5(k,I,$,lt,Y,X,q,O))){var ht=k-j[0],Rt=I-j[1],ut=Y-j[0],kt=X-j[1],B=1/Zt(Yb((ht*ut+Rt*kt)/(tt(ht*ht+Rt*Rt)*tt(ut*ut+kt*kt)))/2),J=tt(j[0]*j[0]+j[1]*j[1]);T=fn(P,(h-J)/(B-1)),S=fn(P,(l-J)/(B+1))}}w>Yt?S>Yt?(C=cs($,lt,k,I,l,S,d),R=cs(Y,X,q,O,l,S,d),f.moveTo(C.cx+C.x01,C.cy+C.y01),S<P?f.arc(C.cx,C.cy,S,Ht(C.y01,C.x01),Ht(R.y01,R.x01),!d):(f.arc(C.cx,C.cy,S,Ht(C.y01,C.x01),Ht(C.y11,C.x11),!d),f.arc(0,0,l,Ht(C.cy+C.y11,C.cx+C.x11),Ht(R.cy+R.y11,R.cx+R.x11),!d),f.arc(R.cx,R.cy,S,Ht(R.y11,R.x11),Ht(R.y01,R.x01),!d))):(f.moveTo(k,I),f.arc(0,0,l,m,v,!d)):f.moveTo(k,I),!(h>Yt)||!(_>Yt)?f.lineTo(q,O):T>Yt?(C=cs(q,O,Y,X,h,-T,d),R=cs(k,I,$,lt,h,-T,d),f.lineTo(C.cx+C.x01,C.cy+C.y01),T<P?f.arc(C.cx,C.cy,T,Ht(C.y01,C.x01),Ht(R.y01,R.x01),!d):(f.arc(C.cx,C.cy,T,Ht(C.y01,C.x01),Ht(C.y11,C.x11),!d),f.arc(0,0,h,Ht(C.cy+C.y11,C.cx+C.x11),Ht(R.cy+R.y11,R.cx+R.x11),d),f.arc(R.cx,R.cy,T,Ht(R.y11,R.x11),Ht(R.y01,R.x01),!d))):f.arc(0,0,h,y,b,d)}if(f.closePath(),s)return f=null,s+""||null}return u.centroid=function(){var s=(+t.apply(this,arguments)+ +e.apply(this,arguments))/2,c=(+o.apply(this,arguments)+ +i.apply(this,arguments))/2-ze/2;return[Fe(c)*s,Zt(c)*s]},u.innerRadius=function(s){return arguments.length?(t=typeof s=="function"?s:Z(+s),u):t},u.outerRadius=function(s){return arguments.length?(e=typeof s=="function"?s:Z(+s),u):e},u.cornerRadius=function(s){return arguments.length?(n=typeof s=="function"?s:Z(+s),u):n},u.padRadius=function(s){return arguments.length?(r=s==null?null:typeof s=="function"?s:Z(+s),u):r},u.startAngle=function(s){return arguments.length?(o=typeof s=="function"?s:Z(+s),u):o},u.endAngle=function(s){return arguments.length?(i=typeof s=="function"?s:Z(+s),u):i},u.padAngle=function(s){return arguments.length?(a=typeof s=="function"?s:Z(+s),u):a},u.context=function(s){return arguments.length?(f=s==null?null:s,u):f},u}var Bb=Array.prototype.slice;function nr(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Hb(t){this._context=t}Hb.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e);break}}};function rr(t){return new Hb(t)}function Xo(t){return t[0]}function Wo(t){return t[1]}function $o(t,e){var n=Z(!0),r=null,o=rr,i=null;t=typeof t=="function"?t:t===void 0?Xo:Z(t),e=typeof e=="function"?e:e===void 0?Wo:Z(e);function a(f){var u,s=(f=nr(f)).length,c,h=!1,l;for(r==null&&(i=o(l=fe())),u=0;u<=s;++u)!(u<s&&n(c=f[u],u,f))===h&&((h=!h)?i.lineStart():i.lineEnd()),h&&i.point(+t(c,u,f),+e(c,u,f));if(l)return i=null,l+""||null}return a.x=function(f){return arguments.length?(t=typeof f=="function"?f:Z(+f),a):t},a.y=function(f){return arguments.length?(e=typeof f=="function"?f:Z(+f),a):e},a.defined=function(f){return arguments.length?(n=typeof f=="function"?f:Z(!!f),a):n},a.curve=function(f){return arguments.length?(o=f,r!=null&&(i=o(r)),a):o},a.context=function(f){return arguments.length?(f==null?r=i=null:i=o(r=f),a):r},a}function ls(t,e,n){var r=null,o=Z(!0),i=null,a=rr,f=null;t=typeof t=="function"?t:t===void 0?Xo:Z(+t),e=typeof e=="function"?e:e===void 0?Z(0):Z(+e),n=typeof n=="function"?n:n===void 0?Wo:Z(+n);function u(c){var h,l,p,g=(c=nr(c)).length,x,d=!1,m,v=new Array(g),b=new Array(g);for(i==null&&(f=a(m=fe())),h=0;h<=g;++h){if(!(h<g&&o(x=c[h],h,c))===d)if(d=!d)l=h,f.areaStart(),f.lineStart();else{for(f.lineEnd(),f.lineStart(),p=h-1;p>=l;--p)f.point(v[p],b[p]);f.lineEnd(),f.areaEnd()}d&&(v[h]=+t(x,h,c),b[h]=+e(x,h,c),f.point(r?+r(x,h,c):v[h],n?+n(x,h,c):b[h]))}if(m)return f=null,m+""||null}function s(){return $o().defined(o).curve(a).context(i)}return u.x=function(c){return arguments.length?(t=typeof c=="function"?c:Z(+c),r=null,u):t},u.x0=function(c){return arguments.length?(t=typeof c=="function"?c:Z(+c),u):t},u.x1=function(c){return arguments.length?(r=c==null?null:typeof c=="function"?c:Z(+c),u):r},u.y=function(c){return arguments.length?(e=typeof c=="function"?c:Z(+c),n=null,u):e},u.y0=function(c){return arguments.length?(e=typeof c=="function"?c:Z(+c),u):e},u.y1=function(c){return arguments.length?(n=c==null?null:typeof c=="function"?c:Z(+c),u):n},u.lineX0=u.lineY0=function(){return s().x(t).y(e)},u.lineY1=function(){return s().x(t).y(n)},u.lineX1=function(){return s().x(r).y(e)},u.defined=function(c){return arguments.length?(o=typeof c=="function"?c:Z(!!c),u):o},u.curve=function(c){return arguments.length?(a=c,i!=null&&(f=a(i)),u):a},u.context=function(c){return arguments.length?(c==null?i=f=null:f=a(i=c),u):i},u}function Xb(t,e){return e<t?-1:e>t?1:e>=t?0:NaN}function Wb(t){return t}function $b(){var t=Wb,e=Xb,n=null,r=Z(0),o=Z(we),i=Z(0);function a(f){var u,s=(f=nr(f)).length,c,h,l=0,p=new Array(s),g=new Array(s),x=+r.apply(this,arguments),d=Math.min(we,Math.max(-we,o.apply(this,arguments)-x)),m,v=Math.min(Math.abs(d)/s,i.apply(this,arguments)),b=v*(d<0?-1:1),y;for(u=0;u<s;++u)(y=g[p[u]=u]=+t(f[u],u,f))>0&&(l+=y);for(e!=null?p.sort(function(_,w){return e(g[_],g[w])}):n!=null&&p.sort(function(_,w){return n(f[_],f[w])}),u=0,h=l?(d-s*b)/l:0;u<s;++u,x=m)c=p[u],y=g[c],m=x+(y>0?y*h:0)+b,g[c]={data:f[c],index:u,value:y,startAngle:x,endAngle:m,padAngle:v};return g}return a.value=function(f){return arguments.length?(t=typeof f=="function"?f:Z(+f),a):t},a.sortValues=function(f){return arguments.length?(e=f,n=null,a):e},a.sort=function(f){return arguments.length?(n=f,e=null,a):n},a.startAngle=function(f){return arguments.length?(r=typeof f=="function"?f:Z(+f),a):r},a.endAngle=function(f){return arguments.length?(o=typeof f=="function"?f:Z(+f),a):o},a.padAngle=function(f){return arguments.length?(i=typeof f=="function"?f:Z(+f),a):i},a}var hs=Vo(rr);function Vb(t){this._curve=t}Vb.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,e){this._curve.point(e*Math.sin(t),e*-Math.cos(t))}};function Vo(t){function e(n){return new Vb(t(n))}return e._curve=t,e}function Go(t){var e=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(n){return arguments.length?e(Vo(n)):e()._curve},t}function yp(){return Go($o().curve(hs))}function bp(){var t=ls().curve(hs),e=t.curve,n=t.lineX0,r=t.lineX1,o=t.lineY0,i=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Go(n())},delete t.lineX0,t.lineEndAngle=function(){return Go(r())},delete t.lineX1,t.lineInnerRadius=function(){return Go(o())},delete t.lineY0,t.lineOuterRadius=function(){return Go(i())},delete t.lineY1,t.curve=function(a){return arguments.length?e(Vo(a)):e()._curve},t}function Vr(t,e){return[(e=+e)*Math.cos(t-=Math.PI/2),e*Math.sin(t)]}var ps=class{constructor(e,n){this._context=e,this._x=n}areaStart(){this._line=0}areaEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line}point(e,n){switch(e=+e,n=+n,this._point){case 0:{this._point=1,this._line?this._context.lineTo(e,n):this._context.moveTo(e,n);break}case 1:this._point=2;default:{this._x?this._context.bezierCurveTo(this._x0=(this._x0+e)/2,this._y0,this._x0,n,e,n):this._context.bezierCurveTo(this._x0,this._y0=(this._y0+n)/2,e,this._y0,e,n);break}}this._x0=e,this._y0=n}},vp=class{constructor(e){this._context=e}lineStart(){this._point=0}lineEnd(){}point(e,n){if(e=+e,n=+n,this._point++===0)this._x0=e,this._y0=n;else{let r=Vr(this._x0,this._y0),o=Vr(this._x0,this._y0=(this._y0+n)/2),i=Vr(e,this._y0),a=Vr(e,n);this._context.moveTo(...r),this._context.bezierCurveTo(...o,...i,...a)}}};function ds(t){return new ps(t,!0)}function ms(t){return new ps(t,!1)}function Gb(t){return new vp(t)}function u5(t){return t.source}function s5(t){return t.target}function Aa(t){let e=u5,n=s5,r=Xo,o=Wo,i=null,a=null;function f(){let u,s=Bb.call(arguments),c=e.apply(this,s),h=n.apply(this,s);if(i==null&&(a=t(u=fe())),a.lineStart(),s[0]=c,a.point(+r.apply(this,s),+o.apply(this,s)),s[0]=h,a.point(+r.apply(this,s),+o.apply(this,s)),a.lineEnd(),u)return a=null,u+""||null}return f.source=function(u){return arguments.length?(e=u,f):e},f.target=function(u){return arguments.length?(n=u,f):n},f.x=function(u){return arguments.length?(r=typeof u=="function"?u:Z(+u),f):r},f.y=function(u){return arguments.length?(o=typeof u=="function"?u:Z(+u),f):o},f.context=function(u){return arguments.length?(u==null?i=a=null:a=t(i=u),f):i},f}function Zb(){return Aa(ds)}function Qb(){return Aa(ms)}function Kb(){let t=Aa(Gb);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var c5=tt(3),gs={draw(t,e){let n=tt(e+fn(e/28,.75))*.59436,r=n/2,o=r*c5;t.moveTo(0,n),t.lineTo(0,-n),t.moveTo(-o,-r),t.lineTo(o,r),t.moveTo(-o,r),t.lineTo(o,-r)}};var Zo={draw(t,e){let n=tt(e/ze);t.moveTo(n,0),t.arc(0,0,n,0,we)}};var xs={draw(t,e){let n=tt(e/5)/2;t.moveTo(-3*n,-n),t.lineTo(-n,-n),t.lineTo(-n,-3*n),t.lineTo(n,-3*n),t.lineTo(n,-n),t.lineTo(3*n,-n),t.lineTo(3*n,n),t.lineTo(n,n),t.lineTo(n,3*n),t.lineTo(-n,3*n),t.lineTo(-n,n),t.lineTo(-3*n,n),t.closePath()}};var Jb=tt(1/3),l5=Jb*2,ys={draw(t,e){let n=tt(e/l5),r=n*Jb;t.moveTo(0,-n),t.lineTo(r,0),t.lineTo(0,n),t.lineTo(-r,0),t.closePath()}};var bs={draw(t,e){let n=tt(e)*.62625;t.moveTo(0,-n),t.lineTo(n,0),t.lineTo(0,n),t.lineTo(-n,0),t.closePath()}};var vs={draw(t,e){let n=tt(e-fn(e/7,2))*.87559;t.moveTo(-n,0),t.lineTo(n,0),t.moveTo(0,n),t.lineTo(0,-n)}};var _s={draw(t,e){let n=tt(e),r=-n/2;t.rect(r,r,n,n)}};var ws={draw(t,e){let n=tt(e)*.4431;t.moveTo(n,n),t.lineTo(n,-n),t.lineTo(-n,-n),t.lineTo(-n,n),t.closePath()}};var h5=.8908130915292852,jb=Zt(ze/10)/Zt(7*ze/10),p5=Zt(we/10)*jb,d5=-Fe(we/10)*jb,Ms={draw(t,e){let n=tt(e*h5),r=p5*n,o=d5*n;t.moveTo(0,-n),t.lineTo(r,o);for(let i=1;i<5;++i){let a=we*i/5,f=Fe(a),u=Zt(a);t.lineTo(u*n,-f*n),t.lineTo(f*r-u*o,u*r+f*o)}t.closePath()}};var _p=tt(3),Ss={draw(t,e){let n=-tt(e/(_p*3));t.moveTo(0,n*2),t.lineTo(-_p*n,-n),t.lineTo(_p*n,-n),t.closePath()}};var m5=tt(3),Ts={draw(t,e){let n=tt(e)*.6824,r=n/2,o=n*m5/2;t.moveTo(0,-n),t.lineTo(o,r),t.lineTo(-o,r),t.closePath()}};var Me=-.5,Se=tt(3)/2,wp=1/tt(12),g5=(wp/2+1)*3,As={draw(t,e){let n=tt(e/g5),r=n/2,o=n*wp,i=r,a=n*wp+n,f=-i,u=a;t.moveTo(r,o),t.lineTo(i,a),t.lineTo(f,u),t.lineTo(Me*r-Se*o,Se*r+Me*o),t.lineTo(Me*i-Se*a,Se*i+Me*a),t.lineTo(Me*f-Se*u,Se*f+Me*u),t.lineTo(Me*r+Se*o,Me*o-Se*r),t.lineTo(Me*i+Se*a,Me*a-Se*i),t.lineTo(Me*f+Se*u,Me*u-Se*f),t.closePath()}};var ks={draw(t,e){let n=tt(e-fn(e/6,1.7))*.6189;t.moveTo(-n,-n),t.lineTo(n,n),t.moveTo(-n,n),t.lineTo(n,-n)}};var Mp=[Zo,xs,ys,_s,Ms,Ss,As],tv=[Zo,vs,ks,Ts,gs,ws,bs];function Sp(t,e){let n=null;t=typeof t=="function"?t:Z(t||Zo),e=typeof e=="function"?e:Z(e===void 0?64:+e);function r(){let o;if(n||(n=o=fe()),t.apply(this,arguments).draw(n,+e.apply(this,arguments)),o)return n=null,o+""||null}return r.type=function(o){return arguments.length?(t=typeof o=="function"?o:Z(o),r):t},r.size=function(o){return arguments.length?(e=typeof o=="function"?o:Z(+o),r):e},r.context=function(o){return arguments.length?(n=o==null?null:o,r):n},r}function Te(){}function Qo(t,e,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+e)/6,(t._y0+4*t._y1+n)/6)}function ka(t){this._context=t}ka.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Qo(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Qo(this,t,e);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function ev(t){return new ka(t)}function nv(t){this._context=t}nv.prototype={areaStart:Te,areaEnd:Te,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:{this._context.moveTo(this._x2,this._y2),this._context.closePath();break}case 2:{this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break}case 3:{this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4);break}}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x2=t,this._y2=e;break;case 1:this._point=2,this._x3=t,this._y3=e;break;case 2:this._point=3,this._x4=t,this._y4=e,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+e)/6);break;default:Qo(this,t,e);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function rv(t){return new nv(t)}function ov(t){this._context=t}ov.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===3)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+e)/6;this._line?this._context.lineTo(n,r):this._context.moveTo(n,r);break;case 3:this._point=4;default:Qo(this,t,e);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function iv(t){return new ov(t)}function av(t,e){this._basis=new ka(t),this._beta=e}av.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,e=this._y,n=t.length-1;if(n>0)for(var r=t[0],o=e[0],i=t[n]-r,a=e[n]-o,f=-1,u;++f<=n;)u=f/n,this._basis.point(this._beta*t[f]+(1-this._beta)*(r+u*i),this._beta*e[f]+(1-this._beta)*(o+u*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,e){this._x.push(+t),this._y.push(+e)}};var fv=function t(e){function n(r){return e===1?new ka(r):new av(r,e)}return n.beta=function(r){return t(+r)},n}(.85);function Ko(t,e,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-e),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function Es(t,e){this._context=t,this._k=(1-e)/6}Es.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Ko(this,this._x1,this._y1);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2,this._x1=t,this._y1=e;break;case 2:this._point=3;default:Ko(this,t,e);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var uv=function t(e){function n(r){return new Es(r,e)}return n.tension=function(r){return t(+r)},n}(0);function Ns(t,e){this._context=t,this._k=(1-e)/6}Ns.prototype={areaStart:Te,areaEnd:Te,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:{this._context.moveTo(this._x3,this._y3),this._context.closePath();break}case 2:{this._context.lineTo(this._x3,this._y3),this._context.closePath();break}case 3:{this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5);break}}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Ko(this,t,e);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var sv=function t(e){function n(r){return new Ns(r,e)}return n.tension=function(r){return t(+r)},n}(0);function Rs(t,e){this._context=t,this._k=(1-e)/6}Rs.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===3)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Ko(this,t,e);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var cv=function t(e){function n(r){return new Rs(r,e)}return n.tension=function(r){return t(+r)},n}(0);function Ea(t,e,n){var r=t._x1,o=t._y1,i=t._x2,a=t._y2;if(t._l01_a>Yt){var f=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,u=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*f-t._x0*t._l12_2a+t._x2*t._l01_2a)/u,o=(o*f-t._y0*t._l12_2a+t._y2*t._l01_2a)/u}if(t._l23_a>Yt){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,c=3*t._l23_a*(t._l23_a+t._l12_a);i=(i*s+t._x1*t._l23_2a-e*t._l12_2a)/c,a=(a*s+t._y1*t._l23_2a-n*t._l12_2a)/c}t._context.bezierCurveTo(r,o,i,a,t._x2,t._y2)}function lv(t,e){this._context=t,this._alpha=e}lv.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3;default:Ea(this,t,e);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var hv=function t(e){function n(r){return e?new lv(r,e):new Es(r,0)}return n.alpha=function(r){return t(+r)},n}(.5);function pv(t,e){this._context=t,this._alpha=e}pv.prototype={areaStart:Te,areaEnd:Te,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:{this._context.moveTo(this._x3,this._y3),this._context.closePath();break}case 2:{this._context.lineTo(this._x3,this._y3),this._context.closePath();break}case 3:{this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5);break}}},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Ea(this,t,e);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var dv=function t(e){function n(r){return e?new pv(r,e):new Ns(r,0)}return n.alpha=function(r){return t(+r)},n}(.5);function mv(t,e){this._context=t,this._alpha=e}mv.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===3)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Ea(this,t,e);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var gv=function t(e){function n(r){return e?new mv(r,e):new Rs(r,0)}return n.alpha=function(r){return t(+r)},n}(.5);function xv(t){this._context=t}xv.prototype={areaStart:Te,areaEnd:Te,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,e){t=+t,e=+e,this._point?this._context.lineTo(t,e):(this._point=1,this._context.moveTo(t,e))}};function yv(t){return new xv(t)}function bv(t){return t<0?-1:1}function vv(t,e,n){var r=t._x1-t._x0,o=e-t._x1,i=(t._y1-t._y0)/(r||o<0&&-0),a=(n-t._y1)/(o||r<0&&-0),f=(i*o+a*r)/(r+o);return(bv(i)+bv(a))*Math.min(Math.abs(i),Math.abs(a),.5*Math.abs(f))||0}function _v(t,e){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-e)/2:e}function Tp(t,e,n){var r=t._x0,o=t._y0,i=t._x1,a=t._y1,f=(i-r)/3;t._context.bezierCurveTo(r+f,o+f*e,i-f,a-f*n,i,a)}function Cs(t){this._context=t}Cs.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Tp(this,this._t0,_v(this,this._t0));break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){var n=NaN;if(t=+t,e=+e,!(t===this._x1&&e===this._y1)){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,Tp(this,_v(this,n=vv(this,t,e)),n);break;default:Tp(this,this._t0,n=vv(this,t,e));break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e,this._t0=n}}};function wv(t){this._context=new Mv(t)}(wv.prototype=Object.create(Cs.prototype)).point=function(t,e){Cs.prototype.point.call(this,e,t)};function Mv(t){this._context=t}Mv.prototype={moveTo:function(t,e){this._context.moveTo(e,t)},closePath:function(){this._context.closePath()},lineTo:function(t,e){this._context.lineTo(e,t)},bezierCurveTo:function(t,e,n,r,o,i){this._context.bezierCurveTo(e,t,r,n,i,o)}};function Sv(t){return new Cs(t)}function Tv(t){return new wv(t)}function kv(t){this._context=t}kv.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,e=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],e[0]):this._context.moveTo(t[0],e[0]),n===2)this._context.lineTo(t[1],e[1]);else for(var r=Av(t),o=Av(e),i=0,a=1;a<n;++i,++a)this._context.bezierCurveTo(r[0][i],o[0][i],r[1][i],o[1][i],t[a],e[a]);(this._line||this._line!==0&&n===1)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,e){this._x.push(+t),this._y.push(+e)}};function Av(t){var e,n=t.length-1,r,o=new Array(n),i=new Array(n),a=new Array(n);for(o[0]=0,i[0]=2,a[0]=t[0]+2*t[1],e=1;e<n-1;++e)o[e]=1,i[e]=4,a[e]=4*t[e]+2*t[e+1];for(o[n-1]=2,i[n-1]=7,a[n-1]=8*t[n-1]+t[n],e=1;e<n;++e)r=o[e]/i[e-1],i[e]-=r,a[e]-=r*a[e-1];for(o[n-1]=a[n-1]/i[n-1],e=n-2;e>=0;--e)o[e]=(a[e]-o[e+1])/i[e];for(i[n-1]=(t[n]+o[n-1])/2,e=0;e<n-1;++e)i[e]=2*t[e+1]-o[e+1];return[o,i]}function Ev(t){return new kv(t)}function Is(t,e){this._context=t,this._t=e}Is.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&this._point===2&&this._context.lineTo(this._x,this._y),(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:{if(this._t<=0)this._context.lineTo(this._x,e),this._context.lineTo(t,e);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,e)}break}}this._x=t,this._y=e}};function Nv(t){return new Is(t,.5)}function Rv(t){return new Is(t,0)}function Cv(t){return new Is(t,1)}function Le(t,e){if((a=t.length)>1)for(var n=1,r,o,i=t[e[0]],a,f=i.length;n<a;++n)for(o=i,i=t[e[n]],r=0;r<f;++r)i[r][1]+=i[r][0]=isNaN(o[r][1])?o[r][0]:o[r][1]}function Ye(t){for(var e=t.length,n=new Array(e);--e>=0;)n[e]=e;return n}function x5(t,e){return t[e]}function y5(t){let e=[];return e.key=t,e}function Iv(){var t=Z([]),e=Ye,n=Le,r=x5;function o(i){var a=Array.from(t.apply(this,arguments),y5),f,u=a.length,s=-1,c;for(let h of i)for(f=0,++s;f<u;++f)(a[f][s]=[0,+r(h,a[f].key,s,i)]).data=h;for(f=0,c=nr(e(a));f<u;++f)a[c[f]].index=f;return n(a,c),a}return o.keys=function(i){return arguments.length?(t=typeof i=="function"?i:Z(Array.from(i)),o):t},o.value=function(i){return arguments.length?(r=typeof i=="function"?i:Z(+i),o):r},o.order=function(i){return arguments.length?(e=i==null?Ye:typeof i=="function"?i:Z(Array.from(i)),o):e},o.offset=function(i){return arguments.length?(n=i==null?Le:i,o):n},o}function Pv(t,e){if((r=t.length)>0){for(var n,r,o=0,i=t[0].length,a;o<i;++o){for(a=n=0;n<r;++n)a+=t[n][o][1]||0;if(a)for(n=0;n<r;++n)t[n][o][1]/=a}Le(t,e)}}function Dv(t,e){if((u=t.length)>0)for(var n,r=0,o,i,a,f,u,s=t[e[0]].length;r<s;++r)for(a=f=0,n=0;n<u;++n)(i=(o=t[e[n]][r])[1]-o[0])>0?(o[0]=a,o[1]=a+=i):i<0?(o[1]=f,o[0]=f+=i):(o[0]=0,o[1]=i)}function qv(t,e){if((o=t.length)>0){for(var n=0,r=t[e[0]],o,i=r.length;n<i;++n){for(var a=0,f=0;a<o;++a)f+=t[a][n][1]||0;r[n][1]+=r[n][0]=-f/2}Le(t,e)}}function Ov(t,e){if(!(!((a=t.length)>0)||!((i=(o=t[e[0]]).length)>0))){for(var n=0,r=1,o,i,a;r<i;++r){for(var f=0,u=0,s=0;f<a;++f){for(var c=t[e[f]],h=c[r][1]||0,l=c[r-1][1]||0,p=(h-l)/2,g=0;g<f;++g){var x=t[e[g]],d=x[r][1]||0,m=x[r-1][1]||0;p+=d-m}u+=h,s+=p*h}o[r-1][1]+=o[r-1][0]=n,u&&(n-=s/u)}o[r-1][1]+=o[r-1][0]=n,Le(t,e)}}function Ps(t){var e=t.map(b5);return Ye(t).sort(function(n,r){return e[n]-e[r]})}function b5(t){for(var e=-1,n=0,r=t.length,o,i=-1/0;++e<r;)(o=+t[e][1])>i&&(i=o,n=e);return n}function Ds(t){var e=t.map(Ap);return Ye(t).sort(function(n,r){return e[n]-e[r]})}function Ap(t){for(var e=0,n=-1,r=t.length,o;++n<r;)(o=+t[n][1])&&(e+=o);return e}function Fv(t){return Ds(t).reverse()}function zv(t){var e=t.length,n,r,o=t.map(Ap),i=Ps(t),a=0,f=0,u=[],s=[];for(n=0;n<e;++n)r=i[n],a<f?(a+=o[r],u.push(r)):(f+=o[r],s.push(r));return s.reverse().concat(u)}function Lv(t){return Ye(t).reverse()}var Na=t=>()=>t;function kp(t,{sourceEvent:e,target:n,transform:r,dispatch:o}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},transform:{value:r,enumerable:!0,configurable:!0},_:{value:o}})}function Ae(t,e,n){this.k=t,this.x=e,this.y=n}Ae.prototype={constructor:Ae,scale:function(t){return t===1?this:new Ae(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new Ae(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Jo=new Ae(1,0,0);qs.prototype=Ae.prototype;function qs(t){for(;!t.__zoom;)if(!(t=t.parentNode))return Jo;return t.__zoom}function Os(t){t.stopImmediatePropagation()}function jo(t){t.preventDefault(),t.stopImmediatePropagation()}function v5(t){return(!t.ctrlKey||t.type==="wheel")&&!t.button}function _5(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t,t.hasAttribute("viewBox")?(t=t.viewBox.baseVal,[[t.x,t.y],[t.x+t.width,t.y+t.height]]):[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]):[[0,0],[t.clientWidth,t.clientHeight]]}function Yv(){return this.__zoom||Jo}function w5(t){return-t.deltaY*(t.deltaMode===1?.05:t.deltaMode?1:.002)*(t.ctrlKey?10:1)}function M5(){return navigator.maxTouchPoints||"ontouchstart"in this}function S5(t,e,n){var r=t.invertX(e[0][0])-n[0][0],o=t.invertX(e[1][0])-n[1][0],i=t.invertY(e[0][1])-n[0][1],a=t.invertY(e[1][1])-n[1][1];return t.translate(o>r?(r+o)/2:Math.min(0,r)||Math.max(0,o),a>i?(i+a)/2:Math.min(0,i)||Math.max(0,a))}function Uv(){var t=v5,e=_5,n=S5,r=w5,o=M5,i=[0,1/0],a=[[-1/0,-1/0],[1/0,1/0]],f=250,u=ff,s=pe("start","zoom","end"),c,h,l,p=500,g=150,x=0,d=10;function m(M){M.property("__zoom",Yv).on("wheel.zoom",N,{passive:!1}).on("mousedown.zoom",P).on("dblclick.zoom",T).filter(o).on("touchstart.zoom",S).on("touchmove.zoom",C).on("touchend.zoom touchcancel.zoom",R).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}m.transform=function(M,A,k,I){var q=M.selection?M.selection():M;q.property("__zoom",Yv),M!==q?_(M,A,k,I):q.interrupt().each(function(){w(this,arguments).event(I).start().zoom(null,typeof A=="function"?A.apply(this,arguments):A).end()})},m.scaleBy=function(M,A,k,I){m.scaleTo(M,function(){var q=this.__zoom.k,O=typeof A=="function"?A.apply(this,arguments):A;return q*O},k,I)},m.scaleTo=function(M,A,k,I){m.transform(M,function(){var q=e.apply(this,arguments),O=this.__zoom,Y=k==null?y(q):typeof k=="function"?k.apply(this,arguments):k,X=O.invert(Y),$=typeof A=="function"?A.apply(this,arguments):A;return n(b(v(O,$),Y,X),q,a)},k,I)},m.translateBy=function(M,A,k,I){m.transform(M,function(){return n(this.__zoom.translate(typeof A=="function"?A.apply(this,arguments):A,typeof k=="function"?k.apply(this,arguments):k),e.apply(this,arguments),a)},null,I)},m.translateTo=function(M,A,k,I,q){m.transform(M,function(){var O=e.apply(this,arguments),Y=this.__zoom,X=I==null?y(O):typeof I=="function"?I.apply(this,arguments):I;return n(Jo.translate(X[0],X[1]).scale(Y.k).translate(typeof A=="function"?-A.apply(this,arguments):-A,typeof k=="function"?-k.apply(this,arguments):-k),O,a)},I,q)};function v(M,A){return A=Math.max(i[0],Math.min(i[1],A)),A===M.k?M:new Ae(A,M.x,M.y)}function b(M,A,k){var I=A[0]-k[0]*M.k,q=A[1]-k[1]*M.k;return I===M.x&&q===M.y?M:new Ae(M.k,I,q)}function y(M){return[(+M[0][0]+ +M[1][0])/2,(+M[0][1]+ +M[1][1])/2]}function _(M,A,k,I){M.on("start.zoom",function(){w(this,arguments).event(I).start()}).on("interrupt.zoom end.zoom",function(){w(this,arguments).event(I).end()}).tween("zoom",function(){var q=this,O=arguments,Y=w(q,O).event(I),X=e.apply(q,O),$=k==null?y(X):typeof k=="function"?k.apply(q,O):k,lt=Math.max(X[1][0]-X[0][0],X[1][1]-X[0][1]),j=q.__zoom,ht=typeof A=="function"?A.apply(q,O):A,Rt=u(j.invert($).concat(lt/j.k),ht.invert($).concat(lt/ht.k));return function(ut){if(ut===1)ut=ht;else{var kt=Rt(ut),B=lt/kt[2];ut=new Ae(B,$[0]-kt[0]*B,$[1]-kt[1]*B)}Y.zoom(null,ut)}})}function w(M,A,k){return!k&&M.__zooming||new E(M,A)}function E(M,A){this.that=M,this.args=A,this.active=0,this.sourceEvent=null,this.extent=e.apply(M,A),this.taps=0}E.prototype={event:function(M){return M&&(this.sourceEvent=M),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(M,A){return this.mouse&&M!=="mouse"&&(this.mouse[1]=A.invert(this.mouse[0])),this.touch0&&M!=="touch"&&(this.touch0[1]=A.invert(this.touch0[0])),this.touch1&&M!=="touch"&&(this.touch1[1]=A.invert(this.touch1[0])),this.that.__zoom=A,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(M){var A=Tt(this.that).datum();s.call(M,this.that,new kp(M,{sourceEvent:this.sourceEvent,target:m,type:M,transform:this.that.__zoom,dispatch:s}),A)}};function N(M,...A){if(!t.apply(this,arguments))return;var k=w(this,A).event(M),I=this.__zoom,q=Math.max(i[0],Math.min(i[1],I.k*Math.pow(2,r.apply(this,arguments)))),O=qt(M);if(k.wheel)(k.mouse[0][0]!==O[0]||k.mouse[0][1]!==O[1])&&(k.mouse[1]=I.invert(k.mouse[0]=O)),clearTimeout(k.wheel);else{if(I.k===q)return;k.mouse=[O,I.invert(O)],Ce(this),k.start()}jo(M),k.wheel=setTimeout(Y,g),k.zoom("mouse",n(b(v(I,q),k.mouse[0],k.mouse[1]),k.extent,a));function Y(){k.wheel=null,k.end()}}function P(M,...A){if(l||!t.apply(this,arguments))return;var k=M.currentTarget,I=w(this,A,!0).event(M),q=Tt(M.view).on("mousemove.zoom",$,!0).on("mouseup.zoom",lt,!0),O=qt(M,k),Y=M.clientX,X=M.clientY;qn(M.view),Os(M),I.mouse=[O,this.__zoom.invert(O)],Ce(this),I.start();function $(j){if(jo(j),!I.moved){var ht=j.clientX-Y,Rt=j.clientY-X;I.moved=ht*ht+Rt*Rt>x}I.event(j).zoom("mouse",n(b(I.that.__zoom,I.mouse[0]=qt(j,k),I.mouse[1]),I.extent,a))}function lt(j){q.on("mousemove.zoom mouseup.zoom",null),On(j.view,I.moved),jo(j),I.event(j).end()}}function T(M,...A){if(!!t.apply(this,arguments)){var k=this.__zoom,I=qt(M.changedTouches?M.changedTouches[0]:M,this),q=k.invert(I),O=k.k*(M.shiftKey?.5:2),Y=n(b(v(k,O),I,q),e.apply(this,A),a);jo(M),f>0?Tt(this).transition().duration(f).call(_,Y,I,M):Tt(this).call(m.transform,Y,I,M)}}function S(M,...A){if(!!t.apply(this,arguments)){var k=M.touches,I=k.length,q=w(this,A,M.changedTouches.length===I).event(M),O,Y,X,$;for(Os(M),Y=0;Y<I;++Y)X=k[Y],$=qt(X,this),$=[$,this.__zoom.invert($),X.identifier],q.touch0?!q.touch1&&q.touch0[2]!==$[2]&&(q.touch1=$,q.taps=0):(q.touch0=$,O=!0,q.taps=1+!!c);c&&(c=clearTimeout(c)),O&&(q.taps<2&&(h=$[0],c=setTimeout(function(){c=null},p)),Ce(this),q.start())}}function C(M,...A){if(!!this.__zooming){var k=w(this,A).event(M),I=M.changedTouches,q=I.length,O,Y,X,$;for(jo(M),O=0;O<q;++O)Y=I[O],X=qt(Y,this),k.touch0&&k.touch0[2]===Y.identifier?k.touch0[0]=X:k.touch1&&k.touch1[2]===Y.identifier&&(k.touch1[0]=X);if(Y=k.that.__zoom,k.touch1){var lt=k.touch0[0],j=k.touch0[1],ht=k.touch1[0],Rt=k.touch1[1],ut=(ut=ht[0]-lt[0])*ut+(ut=ht[1]-lt[1])*ut,kt=(kt=Rt[0]-j[0])*kt+(kt=Rt[1]-j[1])*kt;Y=v(Y,Math.sqrt(ut/kt)),X=[(lt[0]+ht[0])/2,(lt[1]+ht[1])/2],$=[(j[0]+Rt[0])/2,(j[1]+Rt[1])/2]}else if(k.touch0)X=k.touch0[0],$=k.touch0[1];else return;k.zoom("touch",n(b(Y,X,$),k.extent,a))}}function R(M,...A){if(!!this.__zooming){var k=w(this,A).event(M),I=M.changedTouches,q=I.length,O,Y;for(Os(M),l&&clearTimeout(l),l=setTimeout(function(){l=null},p),O=0;O<q;++O)Y=I[O],k.touch0&&k.touch0[2]===Y.identifier?delete k.touch0:k.touch1&&k.touch1[2]===Y.identifier&&delete k.touch1;if(k.touch1&&!k.touch0&&(k.touch0=k.touch1,delete k.touch1),k.touch0)k.touch0[1]=this.__zoom.invert(k.touch0[0]);else if(k.end(),k.taps===2&&(Y=qt(Y,this),Math.hypot(h[0]-Y[0],h[1]-Y[1])<d)){var X=Tt(this).on("dblclick.zoom");X&&X.apply(this,arguments)}}}return m.wheelDelta=function(M){return arguments.length?(r=typeof M=="function"?M:Na(+M),m):r},m.filter=function(M){return arguments.length?(t=typeof M=="function"?M:Na(!!M),m):t},m.touchable=function(M){return arguments.length?(o=typeof M=="function"?M:Na(!!M),m):o},m.extent=function(M){return arguments.length?(e=typeof M=="function"?M:Na([[+M[0][0],+M[0][1]],[+M[1][0],+M[1][1]]]),m):e},m.scaleExtent=function(M){return arguments.length?(i[0]=+M[0],i[1]=+M[1],m):[i[0],i[1]]},m.translateExtent=function(M){return arguments.length?(a[0][0]=+M[0][0],a[1][0]=+M[1][0],a[0][1]=+M[0][1],a[1][1]=+M[1][1],m):[[a[0][0],a[0][1]],[a[1][0],a[1][1]]]},m.constrain=function(M){return arguments.length?(n=M,m):n},m.duration=function(M){return arguments.length?(f=+M,m):f},m.interpolate=function(M){return arguments.length?(u=M,m):u},m.on=function(){var M=s.on.apply(s,arguments);return M===s?m:M},m.clickDistance=function(M){return arguments.length?(x=(M=+M)*M,m):Math.sqrt(x)},m.tapDistance=function(M){return arguments.length?(d=+M,m):d},m}window.addEventListener("load",function(){console.log("d3",Ep)});})();
//# sourceMappingURL=data:application/json;base64,
