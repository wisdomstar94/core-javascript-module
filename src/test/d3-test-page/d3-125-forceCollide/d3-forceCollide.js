(()=>{var vn={value:()=>{}};function xe(){for(var t=0,e=arguments.length,r={},n;t<e;++t){if(!(n=arguments[t]+"")||n in r||/[\s.]/.test(n))throw new Error("illegal type: "+n);r[n]=[]}return new yt(r)}function yt(t){this._=t}function wn(t,e){return t.trim().split(/^|\s+/).map(function(r){var n="",i=r.indexOf(".");if(i>=0&&(n=r.slice(i+1),r=r.slice(0,i)),r&&!e.hasOwnProperty(r))throw new Error("unknown type: "+r);return{type:r,name:n}})}yt.prototype=xe.prototype={constructor:yt,on:function(t,e){var r=this._,n=wn(t+"",r),i,o=-1,a=n.length;if(arguments.length<2){for(;++o<a;)if((i=(t=n[o]).type)&&(i=bn(r[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<a;)if(i=(t=n[o]).type)r[i]=de(r[i],t.name,e);else if(e==null)for(i in r)r[i]=de(r[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var r in e)t[r]=e[r].slice();return new yt(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var r=new Array(i),n=0,i,o;n<i;++n)r[n]=arguments[n+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],n=0,i=o.length;n<i;++n)o[n].value.apply(e,r)},apply:function(t,e,r){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var n=this._[t],i=0,o=n.length;i<o;++i)n[i].value.apply(e,r)}};function bn(t,e){for(var r=0,n=t.length,i;r<n;++r)if((i=t[r]).name===e)return i.value}function de(t,e,r){for(var n=0,i=t.length;n<i;++n)if(t[n].name===e){t[n]=vn,t=t.slice(0,n).concat(t.slice(n+1));break}return r!=null&&t.push({name:e,value:r}),t}var et=xe;var _t="http://www.w3.org/1999/xhtml",Lt={svg:"http://www.w3.org/2000/svg",xhtml:_t,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function R(t){var e=t+="",r=e.indexOf(":");return r>=0&&(e=t.slice(0,r))!=="xmlns"&&(t=t.slice(r+1)),Lt.hasOwnProperty(e)?{space:Lt[e],local:t}:t}function Nn(t){return function(){var e=this.ownerDocument,r=this.namespaceURI;return r===_t&&e.documentElement.namespaceURI===_t?e.createElement(t):e.createElementNS(r,t)}}function An(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function vt(t){var e=R(t);return(e.local?An:Nn)(e)}function kn(){}function L(t){return t==null?kn:function(){return this.querySelector(t)}}function ge(t){typeof t!="function"&&(t=L(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=new Array(a),f,u,l=0;l<a;++l)(f=o[l])&&(u=t.call(f,f.__data__,l,o))&&("__data__"in f&&(u.__data__=f.__data__),s[l]=u);return new _(n,this._parents)}function Vt(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function En(){return[]}function rt(t){return t==null?En:function(){return this.querySelectorAll(t)}}function In(t){return function(){return Vt(t.apply(this,arguments))}}function ye(t){typeof t=="function"?t=In(t):t=rt(t);for(var e=this._groups,r=e.length,n=[],i=[],o=0;o<r;++o)for(var a=e[o],s=a.length,f,u=0;u<s;++u)(f=a[u])&&(n.push(t.call(f,f.__data__,u,a)),i.push(f));return new _(n,i)}function nt(t){return function(){return this.matches(t)}}function wt(t){return function(e){return e.matches(t)}}var Tn=Array.prototype.find;function Sn(t){return function(){return Tn.call(this.children,t)}}function zn(){return this.firstElementChild}function _e(t){return this.select(t==null?zn:Sn(typeof t=="function"?t:wt(t)))}var Mn=Array.prototype.filter;function Cn(){return Array.from(this.children)}function On(t){return function(){return Mn.call(this.children,t)}}function ve(t){return this.selectAll(t==null?Cn:On(typeof t=="function"?t:wt(t)))}function we(t){typeof t!="function"&&(t=nt(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=[],f,u=0;u<a;++u)(f=o[u])&&t.call(f,f.__data__,u,o)&&s.push(f);return new _(n,this._parents)}function bt(t){return new Array(t.length)}function be(){return new _(this._enter||this._groups.map(bt),this._parents)}function it(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}it.prototype={constructor:it,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function Ne(t){return function(){return t}}function Dn(t,e,r,n,i,o){for(var a=0,s,f=e.length,u=o.length;a<u;++a)(s=e[a])?(s.__data__=o[a],n[a]=s):r[a]=new it(t,o[a]);for(;a<f;++a)(s=e[a])&&(i[a]=s)}function Rn(t,e,r,n,i,o,a){var s,f,u=new Map,l=e.length,c=o.length,h=new Array(l),p;for(s=0;s<l;++s)(f=e[s])&&(h[s]=p=a.call(f,f.__data__,s,e)+"",u.has(p)?i[s]=f:u.set(p,f));for(s=0;s<c;++s)p=a.call(t,o[s],s,o)+"",(f=u.get(p))?(n[s]=f,f.__data__=o[s],u.delete(p)):r[s]=new it(t,o[s]);for(s=0;s<l;++s)(f=e[s])&&u.get(h[s])===f&&(i[s]=f)}function $n(t){return t.__data__}function Ae(t,e){if(!arguments.length)return Array.from(this,$n);var r=e?Rn:Dn,n=this._parents,i=this._groups;typeof t!="function"&&(t=Ne(t));for(var o=i.length,a=new Array(o),s=new Array(o),f=new Array(o),u=0;u<o;++u){var l=n[u],c=i[u],h=c.length,p=Xn(t.call(l,l&&l.__data__,u,n)),x=p.length,m=s[u]=new Array(x),g=a[u]=new Array(x),d=f[u]=new Array(h);r(l,c,m,g,d,p,e);for(var y=0,w=0,I,T;y<x;++y)if(I=m[y]){for(y>=w&&(w=y+1);!(T=g[w])&&++w<x;);I._next=T||null}}return a=new _(a,n),a._enter=s,a._exit=f,a}function Xn(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function ke(){return new _(this._exit||this._groups.map(bt),this._parents)}function Ee(t,e,r){var n=this.enter(),i=this,o=this.exit();return typeof t=="function"?(n=t(n),n&&(n=n.selection())):n=n.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),r==null?o.remove():r(o),n&&i?n.merge(i).order():i}function Ie(t){for(var e=t.selection?t.selection():t,r=this._groups,n=e._groups,i=r.length,o=n.length,a=Math.min(i,o),s=new Array(i),f=0;f<a;++f)for(var u=r[f],l=n[f],c=u.length,h=s[f]=new Array(c),p,x=0;x<c;++x)(p=u[x]||l[x])&&(h[x]=p);for(;f<i;++f)s[f]=r[f];return new _(s,this._parents)}function Te(){for(var t=this._groups,e=-1,r=t.length;++e<r;)for(var n=t[e],i=n.length-1,o=n[i],a;--i>=0;)(a=n[i])&&(o&&a.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(a,o),o=a);return this}function Se(t){t||(t=Bn);function e(c,h){return c&&h?t(c.__data__,h.__data__):!c-!h}for(var r=this._groups,n=r.length,i=new Array(n),o=0;o<n;++o){for(var a=r[o],s=a.length,f=i[o]=new Array(s),u,l=0;l<s;++l)(u=a[l])&&(f[l]=u);f.sort(e)}return new _(i,this._parents).order()}function Bn(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function ze(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function Me(){return Array.from(this)}function Ce(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length;i<o;++i){var a=n[i];if(a)return a}return null}function Oe(){let t=0;for(let e of this)++t;return t}function De(){return!this.node()}function Re(t){for(var e=this._groups,r=0,n=e.length;r<n;++r)for(var i=e[r],o=0,a=i.length,s;o<a;++o)(s=i[o])&&t.call(s,s.__data__,o,i);return this}function Pn(t){return function(){this.removeAttribute(t)}}function qn(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Hn(t,e){return function(){this.setAttribute(t,e)}}function Fn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function Yn(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttribute(t):this.setAttribute(t,r)}}function Ln(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,r)}}function $e(t,e){var r=R(t);if(arguments.length<2){var n=this.node();return r.local?n.getAttributeNS(r.space,r.local):n.getAttribute(r)}return this.each((e==null?r.local?qn:Pn:typeof e=="function"?r.local?Ln:Yn:r.local?Fn:Hn)(r,e))}function Nt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function Vn(t){return function(){this.style.removeProperty(t)}}function Kn(t,e,r){return function(){this.style.setProperty(t,e,r)}}function Gn(t,e,r){return function(){var n=e.apply(this,arguments);n==null?this.style.removeProperty(t):this.style.setProperty(t,n,r)}}function Xe(t,e,r){return arguments.length>1?this.each((e==null?Vn:typeof e=="function"?Gn:Kn)(t,e,r==null?"":r)):q(this.node(),t)}function q(t,e){return t.style.getPropertyValue(e)||Nt(t).getComputedStyle(t,null).getPropertyValue(e)}function Qn(t){return function(){delete this[t]}}function Un(t,e){return function(){this[t]=e}}function Zn(t,e){return function(){var r=e.apply(this,arguments);r==null?delete this[t]:this[t]=r}}function Be(t,e){return arguments.length>1?this.each((e==null?Qn:typeof e=="function"?Zn:Un)(t,e)):this.node()[t]}function Pe(t){return t.trim().split(/^|\s+/)}function Kt(t){return t.classList||new qe(t)}function qe(t){this._node=t,this._names=Pe(t.getAttribute("class")||"")}qe.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function He(t,e){for(var r=Kt(t),n=-1,i=e.length;++n<i;)r.add(e[n])}function Fe(t,e){for(var r=Kt(t),n=-1,i=e.length;++n<i;)r.remove(e[n])}function Wn(t){return function(){He(this,t)}}function Jn(t){return function(){Fe(this,t)}}function jn(t,e){return function(){(e.apply(this,arguments)?He:Fe)(this,t)}}function Ye(t,e){var r=Pe(t+"");if(arguments.length<2){for(var n=Kt(this.node()),i=-1,o=r.length;++i<o;)if(!n.contains(r[i]))return!1;return!0}return this.each((typeof e=="function"?jn:e?Wn:Jn)(r,e))}function ti(){this.textContent=""}function ei(t){return function(){this.textContent=t}}function ri(t){return function(){var e=t.apply(this,arguments);this.textContent=e==null?"":e}}function Le(t){return arguments.length?this.each(t==null?ti:(typeof t=="function"?ri:ei)(t)):this.node().textContent}function ni(){this.innerHTML=""}function ii(t){return function(){this.innerHTML=t}}function oi(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e==null?"":e}}function Ve(t){return arguments.length?this.each(t==null?ni:(typeof t=="function"?oi:ii)(t)):this.node().innerHTML}function ai(){this.nextSibling&&this.parentNode.appendChild(this)}function Ke(){return this.each(ai)}function si(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ge(){return this.each(si)}function Qe(t){var e=typeof t=="function"?t:vt(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function ui(){return null}function Ue(t,e){var r=typeof t=="function"?t:vt(t),n=e==null?ui:typeof e=="function"?e:L(e);return this.select(function(){return this.insertBefore(r.apply(this,arguments),n.apply(this,arguments)||null)})}function fi(){var t=this.parentNode;t&&t.removeChild(this)}function Ze(){return this.each(fi)}function li(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function ci(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function We(t){return this.select(t?ci:li)}function Je(t){return arguments.length?this.property("__data__",t):this.node().__data__}function hi(t){return function(e){t.call(this,e,this.__data__)}}function pi(t){return t.trim().split(/^|\s+/).map(function(e){var r="",n=e.indexOf(".");return n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),{type:e,name:r}})}function mi(t){return function(){var e=this.__on;if(!!e){for(var r=0,n=-1,i=e.length,o;r<i;++r)o=e[r],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++n]=o;++n?e.length=n:delete this.__on}}}function di(t,e,r){return function(){var n=this.__on,i,o=hi(e);if(n){for(var a=0,s=n.length;a<s;++a)if((i=n[a]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=r),i.value=e;return}}this.addEventListener(t.type,o,r),i={type:t.type,name:t.name,value:e,listener:o,options:r},n?n.push(i):this.__on=[i]}}function je(t,e,r){var n=pi(t+""),i,o=n.length,a;if(arguments.length<2){var s=this.node().__on;if(s){for(var f=0,u=s.length,l;f<u;++f)for(i=0,l=s[f];i<o;++i)if((a=n[i]).type===l.type&&a.name===l.name)return l.value}return}for(s=e?di:mi,i=0;i<o;++i)this.each(s(n[i],e,r));return this}function tr(t,e,r){var n=Nt(t),i=n.CustomEvent;typeof i=="function"?i=new i(e,r):(i=n.document.createEvent("Event"),r?(i.initEvent(e,r.bubbles,r.cancelable),i.detail=r.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function xi(t,e){return function(){return tr(this,t,e)}}function gi(t,e){return function(){return tr(this,t,e.apply(this,arguments))}}function er(t,e){return this.each((typeof e=="function"?gi:xi)(t,e))}function*rr(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length,a;i<o;++i)(a=n[i])&&(yield a)}var Gt=[null];function _(t,e){this._groups=t,this._parents=e}function nr(){return new _([[document.documentElement]],Gt)}function yi(){return this}_.prototype=nr.prototype={constructor:_,select:ge,selectAll:ye,selectChild:_e,selectChildren:ve,filter:we,data:Ae,enter:be,exit:ke,join:Ee,merge:Ie,selection:yi,order:Te,sort:Se,call:ze,nodes:Me,node:Ce,size:Oe,empty:De,each:Re,attr:$e,style:Xe,property:Be,classed:Ye,text:Le,html:Ve,raise:Ke,lower:Ge,append:Qe,insert:Ue,remove:Ze,clone:We,datum:Je,on:je,dispatch:er,[Symbol.iterator]:rr};var $=nr;function Qt(t){return typeof t=="string"?new _([[document.querySelector(t)]],[document.documentElement]):new _([[t]],Gt)}function At(t,e,r){t.prototype=e.prototype=r,r.constructor=t}function Ut(t,e){var r=Object.create(t.prototype);for(var n in e)r[n]=e[n];return r}function st(){}var ot=.7,It=1/ot,U="\\s*([+-]?\\d+)\\s*",at="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",O="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",_i=/^#([0-9a-f]{3,8})$/,vi=new RegExp(`^rgb\\(${U},${U},${U}\\)$`),wi=new RegExp(`^rgb\\(${O},${O},${O}\\)$`),bi=new RegExp(`^rgba\\(${U},${U},${U},${at}\\)$`),Ni=new RegExp(`^rgba\\(${O},${O},${O},${at}\\)$`),Ai=new RegExp(`^hsl\\(${at},${O},${O}\\)$`),ki=new RegExp(`^hsla\\(${at},${O},${O},${at}\\)$`),ir={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};At(st,H,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:or,formatHex:or,formatHex8:Ei,formatHsl:Ii,formatRgb:ar,toString:ar});function or(){return this.rgb().formatHex()}function Ei(){return this.rgb().formatHex8()}function Ii(){return hr(this).formatHsl()}function ar(){return this.rgb().formatRgb()}function H(t){var e,r;return t=(t+"").trim().toLowerCase(),(e=_i.exec(t))?(r=e[1].length,e=parseInt(e[1],16),r===6?sr(e):r===3?new E(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):r===8?kt(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):r===4?kt(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=vi.exec(t))?new E(e[1],e[2],e[3],1):(e=wi.exec(t))?new E(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=bi.exec(t))?kt(e[1],e[2],e[3],e[4]):(e=Ni.exec(t))?kt(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=Ai.exec(t))?lr(e[1],e[2]/100,e[3]/100,1):(e=ki.exec(t))?lr(e[1],e[2]/100,e[3]/100,e[4]):ir.hasOwnProperty(t)?sr(ir[t]):t==="transparent"?new E(NaN,NaN,NaN,0):null}function sr(t){return new E(t>>16&255,t>>8&255,t&255,1)}function kt(t,e,r,n){return n<=0&&(t=e=r=NaN),new E(t,e,r,n)}function Ti(t){return t instanceof st||(t=H(t)),t?(t=t.rgb(),new E(t.r,t.g,t.b,t.opacity)):new E}function Z(t,e,r,n){return arguments.length===1?Ti(t):new E(t,e,r,n==null?1:n)}function E(t,e,r,n){this.r=+t,this.g=+e,this.b=+r,this.opacity=+n}At(E,Z,Ut(st,{brighter(t){return t=t==null?It:Math.pow(It,t),new E(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?ot:Math.pow(ot,t),new E(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new E(K(this.r),K(this.g),K(this.b),Tt(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:ur,formatHex:ur,formatHex8:Si,formatRgb:fr,toString:fr}));function ur(){return`#${V(this.r)}${V(this.g)}${V(this.b)}`}function Si(){return`#${V(this.r)}${V(this.g)}${V(this.b)}${V((isNaN(this.opacity)?1:this.opacity)*255)}`}function fr(){let t=Tt(this.opacity);return`${t===1?"rgb(":"rgba("}${K(this.r)}, ${K(this.g)}, ${K(this.b)}${t===1?")":`, ${t})`}`}function Tt(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function K(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function V(t){return t=K(t),(t<16?"0":"")+t.toString(16)}function lr(t,e,r,n){return n<=0?t=e=r=NaN:r<=0||r>=1?t=e=NaN:e<=0&&(t=NaN),new C(t,e,r,n)}function hr(t){if(t instanceof C)return new C(t.h,t.s,t.l,t.opacity);if(t instanceof st||(t=H(t)),!t)return new C;if(t instanceof C)return t;t=t.rgb();var e=t.r/255,r=t.g/255,n=t.b/255,i=Math.min(e,r,n),o=Math.max(e,r,n),a=NaN,s=o-i,f=(o+i)/2;return s?(e===o?a=(r-n)/s+(r<n)*6:r===o?a=(n-e)/s+2:a=(e-r)/s+4,s/=f<.5?o+i:2-o-i,a*=60):s=f>0&&f<1?0:a,new C(a,s,f,t.opacity)}function pr(t,e,r,n){return arguments.length===1?hr(t):new C(t,e,r,n==null?1:n)}function C(t,e,r,n){this.h=+t,this.s=+e,this.l=+r,this.opacity=+n}At(C,pr,Ut(st,{brighter(t){return t=t==null?It:Math.pow(It,t),new C(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?ot:Math.pow(ot,t),new C(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,r=this.l,n=r+(r<.5?r:1-r)*e,i=2*r-n;return new E(Zt(t>=240?t-240:t+120,i,n),Zt(t,i,n),Zt(t<120?t+240:t-120,i,n),this.opacity)},clamp(){return new C(cr(this.h),Et(this.s),Et(this.l),Tt(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let t=Tt(this.opacity);return`${t===1?"hsl(":"hsla("}${cr(this.h)}, ${Et(this.s)*100}%, ${Et(this.l)*100}%${t===1?")":`, ${t})`}`}}));function cr(t){return t=(t||0)%360,t<0?t+360:t}function Et(t){return Math.max(0,Math.min(1,t||0))}function Zt(t,e,r){return(t<60?e+(r-e)*t/60:t<180?r:t<240?e+(r-e)*(240-t)/60:e)*255}function Wt(t,e,r,n,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*e+(4-6*o+3*a)*r+(1+3*t+3*o-3*a)*n+a*i)/6}function mr(t){var e=t.length-1;return function(r){var n=r<=0?r=0:r>=1?(r=1,e-1):Math.floor(r*e),i=t[n],o=t[n+1],a=n>0?t[n-1]:2*i-o,s=n<e-1?t[n+2]:2*o-i;return Wt((r-n/e)*e,a,i,o,s)}}function dr(t){var e=t.length;return function(r){var n=Math.floor(((r%=1)<0?++r:r)*e),i=t[(n+e-1)%e],o=t[n%e],a=t[(n+1)%e],s=t[(n+2)%e];return Wt((r-n/e)*e,i,o,a,s)}}var Jt=t=>()=>t;function zi(t,e){return function(r){return t+r*e}}function Mi(t,e,r){return t=Math.pow(t,r),e=Math.pow(e,r)-t,r=1/r,function(n){return Math.pow(t+n*e,r)}}function xr(t){return(t=+t)==1?St:function(e,r){return r-e?Mi(e,r,t):Jt(isNaN(e)?r:e)}}function St(t,e){var r=e-t;return r?zi(t,r):Jt(isNaN(t)?e:t)}var zt=function t(e){var r=xr(e);function n(i,o){var a=r((i=Z(i)).r,(o=Z(o)).r),s=r(i.g,o.g),f=r(i.b,o.b),u=St(i.opacity,o.opacity);return function(l){return i.r=a(l),i.g=s(l),i.b=f(l),i.opacity=u(l),i+""}}return n.gamma=t,n}(1);function gr(t){return function(e){var r=e.length,n=new Array(r),i=new Array(r),o=new Array(r),a,s;for(a=0;a<r;++a)s=Z(e[a]),n[a]=s.r||0,i[a]=s.g||0,o[a]=s.b||0;return n=t(n),i=t(i),o=t(o),s.opacity=1,function(f){return s.r=n(f),s.g=i(f),s.b=o(f),s+""}}}var Ci=gr(mr),Oi=gr(dr);function z(t,e){return t=+t,e=+e,function(r){return t*(1-r)+e*r}}var te=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,jt=new RegExp(te.source,"g");function Di(t){return function(){return t}}function Ri(t){return function(e){return t(e)+""}}function ee(t,e){var r=te.lastIndex=jt.lastIndex=0,n,i,o,a=-1,s=[],f=[];for(t=t+"",e=e+"";(n=te.exec(t))&&(i=jt.exec(e));)(o=i.index)>r&&(o=e.slice(r,o),s[a]?s[a]+=o:s[++a]=o),(n=n[0])===(i=i[0])?s[a]?s[a]+=i:s[++a]=i:(s[++a]=null,f.push({i:a,x:z(n,i)})),r=jt.lastIndex;return r<e.length&&(o=e.slice(r),s[a]?s[a]+=o:s[++a]=o),s.length<2?f[0]?Ri(f[0].x):Di(e):(e=f.length,function(u){for(var l=0,c;l<e;++l)s[(c=f[l]).i]=c.x(u);return s.join("")})}var yr=180/Math.PI,Mt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function re(t,e,r,n,i,o){var a,s,f;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(f=t*r+e*n)&&(r-=t*f,n-=e*f),(s=Math.sqrt(r*r+n*n))&&(r/=s,n/=s,f/=s),t*n<e*r&&(t=-t,e=-e,f=-f,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*yr,skewX:Math.atan(f)*yr,scaleX:a,scaleY:s}}var Ct;function _r(t){let e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?Mt:re(e.a,e.b,e.c,e.d,e.e,e.f)}function vr(t){return t==null?Mt:(Ct||(Ct=document.createElementNS("http://www.w3.org/2000/svg","g")),Ct.setAttribute("transform",t),(t=Ct.transform.baseVal.consolidate())?(t=t.matrix,re(t.a,t.b,t.c,t.d,t.e,t.f)):Mt)}function wr(t,e,r,n){function i(u){return u.length?u.pop()+" ":""}function o(u,l,c,h,p,x){if(u!==c||l!==h){var m=p.push("translate(",null,e,null,r);x.push({i:m-4,x:z(u,c)},{i:m-2,x:z(l,h)})}else(c||h)&&p.push("translate("+c+e+h+r)}function a(u,l,c,h){u!==l?(u-l>180?l+=360:l-u>180&&(u+=360),h.push({i:c.push(i(c)+"rotate(",null,n)-2,x:z(u,l)})):l&&c.push(i(c)+"rotate("+l+n)}function s(u,l,c,h){u!==l?h.push({i:c.push(i(c)+"skewX(",null,n)-2,x:z(u,l)}):l&&c.push(i(c)+"skewX("+l+n)}function f(u,l,c,h,p,x){if(u!==c||l!==h){var m=p.push(i(p)+"scale(",null,",",null,")");x.push({i:m-4,x:z(u,c)},{i:m-2,x:z(l,h)})}else(c!==1||h!==1)&&p.push(i(p)+"scale("+c+","+h+")")}return function(u,l){var c=[],h=[];return u=t(u),l=t(l),o(u.translateX,u.translateY,l.translateX,l.translateY,c,h),a(u.rotate,l.rotate,c,h),s(u.skewX,l.skewX,c,h),f(u.scaleX,u.scaleY,l.scaleX,l.scaleY,c,h),u=l=null,function(p){for(var x=-1,m=h.length,g;++x<m;)c[(g=h[x]).i]=g.x(p);return c.join("")}}}var ne=wr(_r,"px, ","px)","deg)"),ie=wr(vr,", ",")",")");var W=0,ft=0,ut=0,Nr=1e3,Ot,lt,Dt=0,G=0,Rt=0,ct=typeof performance=="object"&&performance.now?performance:Date,Ar=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function pt(){return G||(Ar($i),G=ct.now()+Rt)}function $i(){G=0}function ht(){this._call=this._time=this._next=null}ht.prototype=J.prototype={constructor:ht,restart:function(t,e,r){if(typeof t!="function")throw new TypeError("callback is not a function");r=(r==null?pt():+r)+(e==null?0:+e),!this._next&&lt!==this&&(lt?lt._next=this:Ot=this,lt=this),this._call=t,this._time=r,oe()},stop:function(){this._call&&(this._call=null,this._time=1/0,oe())}};function J(t,e,r){var n=new ht;return n.restart(t,e,r),n}function kr(){pt(),++W;for(var t=Ot,e;t;)(e=G-t._time)>=0&&t._call.call(void 0,e),t=t._next;--W}function br(){G=(Dt=ct.now())+Rt,W=ft=0;try{kr()}finally{W=0,Bi(),G=0}}function Xi(){var t=ct.now(),e=t-Dt;e>Nr&&(Rt-=e,Dt=t)}function Bi(){for(var t,e=Ot,r,n=1/0;e;)e._call?(n>e._time&&(n=e._time),t=e,e=e._next):(r=e._next,e._next=null,e=t?t._next=r:Ot=r);lt=t,oe(n)}function oe(t){if(!W){ft&&(ft=clearTimeout(ft));var e=t-G;e>24?(t<1/0&&(ft=setTimeout(br,t-ct.now()-Rt)),ut&&(ut=clearInterval(ut))):(ut||(Dt=ct.now(),ut=setInterval(Xi,Nr)),W=1,Ar(br))}}function $t(t,e,r){var n=new ht;return e=e==null?0:+e,n.restart(i=>{n.stop(),t(i+e)},e,r),n}var Pi=et("start","end","cancel","interrupt"),qi=[],Tr=0,Er=1,Bt=2,Xt=3,Ir=4,Pt=5,mt=6;function F(t,e,r,n,i,o){var a=t.__transition;if(!a)t.__transition={};else if(r in a)return;Hi(t,r,{name:e,index:n,group:i,on:Pi,tween:qi,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Tr})}function dt(t,e){var r=v(t,e);if(r.state>Tr)throw new Error("too late; already scheduled");return r}function N(t,e){var r=v(t,e);if(r.state>Xt)throw new Error("too late; already running");return r}function v(t,e){var r=t.__transition;if(!r||!(r=r[e]))throw new Error("transition not found");return r}function Hi(t,e,r){var n=t.__transition,i;n[e]=r,r.timer=J(o,0,r.time);function o(u){r.state=Er,r.timer.restart(a,r.delay,r.time),r.delay<=u&&a(u-r.delay)}function a(u){var l,c,h,p;if(r.state!==Er)return f();for(l in n)if(p=n[l],p.name===r.name){if(p.state===Xt)return $t(a);p.state===Ir?(p.state=mt,p.timer.stop(),p.on.call("interrupt",t,t.__data__,p.index,p.group),delete n[l]):+l<e&&(p.state=mt,p.timer.stop(),p.on.call("cancel",t,t.__data__,p.index,p.group),delete n[l])}if($t(function(){r.state===Xt&&(r.state=Ir,r.timer.restart(s,r.delay,r.time),s(u))}),r.state=Bt,r.on.call("start",t,t.__data__,r.index,r.group),r.state===Bt){for(r.state=Xt,i=new Array(h=r.tween.length),l=0,c=-1;l<h;++l)(p=r.tween[l].value.call(t,t.__data__,r.index,r.group))&&(i[++c]=p);i.length=c+1}}function s(u){for(var l=u<r.duration?r.ease.call(null,u/r.duration):(r.timer.restart(f),r.state=Pt,1),c=-1,h=i.length;++c<h;)i[c].call(t,l);r.state===Pt&&(r.on.call("end",t,t.__data__,r.index,r.group),f())}function f(){r.state=mt,r.timer.stop(),delete n[e];for(var u in n)return;delete t.__transition}}function qt(t,e){var r=t.__transition,n,i,o=!0,a;if(!!r){e=e==null?null:e+"";for(a in r){if((n=r[a]).name!==e){o=!1;continue}i=n.state>Bt&&n.state<Pt,n.state=mt,n.timer.stop(),n.on.call(i?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete r[a]}o&&delete t.__transition}}function Sr(t){return this.each(function(){qt(this,t)})}function Fi(t,e){var r,n;return function(){var i=N(this,t),o=i.tween;if(o!==r){n=r=o;for(var a=0,s=n.length;a<s;++a)if(n[a].name===e){n=n.slice(),n.splice(a,1);break}}i.tween=n}}function Yi(t,e,r){var n,i;if(typeof r!="function")throw new Error;return function(){var o=N(this,t),a=o.tween;if(a!==n){i=(n=a).slice();for(var s={name:e,value:r},f=0,u=i.length;f<u;++f)if(i[f].name===e){i[f]=s;break}f===u&&i.push(s)}o.tween=i}}function zr(t,e){var r=this._id;if(t+="",arguments.length<2){for(var n=v(this.node(),r).tween,i=0,o=n.length,a;i<o;++i)if((a=n[i]).name===t)return a.value;return null}return this.each((e==null?Fi:Yi)(r,t,e))}function j(t,e,r){var n=t._id;return t.each(function(){var i=N(this,n);(i.value||(i.value={}))[e]=r.apply(this,arguments)}),function(i){return v(i,n).value[e]}}function Ht(t,e){var r;return(typeof e=="number"?z:e instanceof H?zt:(r=H(e))?(e=r,zt):ee)(t,e)}function Li(t){return function(){this.removeAttribute(t)}}function Vi(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Ki(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttribute(t);return a===i?null:a===n?o:o=e(n=a,r)}}function Gi(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===n?o:o=e(n=a,r)}}function Qi(t,e,r){var n,i,o;return function(){var a,s=r(this),f;return s==null?void this.removeAttribute(t):(a=this.getAttribute(t),f=s+"",a===f?null:a===n&&f===i?o:(i=f,o=e(n=a,s)))}}function Ui(t,e,r){var n,i,o;return function(){var a,s=r(this),f;return s==null?void this.removeAttributeNS(t.space,t.local):(a=this.getAttributeNS(t.space,t.local),f=s+"",a===f?null:a===n&&f===i?o:(i=f,o=e(n=a,s)))}}function Mr(t,e){var r=R(t),n=r==="transform"?ie:Ht;return this.attrTween(t,typeof e=="function"?(r.local?Ui:Qi)(r,n,j(this,"attr."+t,e)):e==null?(r.local?Vi:Li)(r):(r.local?Gi:Ki)(r,n,e))}function Zi(t,e){return function(r){this.setAttribute(t,e.call(this,r))}}function Wi(t,e){return function(r){this.setAttributeNS(t.space,t.local,e.call(this,r))}}function Ji(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&Wi(t,o)),r}return i._value=e,i}function ji(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&Zi(t,o)),r}return i._value=e,i}function Cr(t,e){var r="attr."+t;if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;var n=R(t);return this.tween(r,(n.local?Ji:ji)(n,e))}function to(t,e){return function(){dt(this,t).delay=+e.apply(this,arguments)}}function eo(t,e){return e=+e,function(){dt(this,t).delay=e}}function Or(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?to:eo)(e,t)):v(this.node(),e).delay}function ro(t,e){return function(){N(this,t).duration=+e.apply(this,arguments)}}function no(t,e){return e=+e,function(){N(this,t).duration=e}}function Dr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?ro:no)(e,t)):v(this.node(),e).duration}function io(t,e){if(typeof e!="function")throw new Error;return function(){N(this,t).ease=e}}function Rr(t){var e=this._id;return arguments.length?this.each(io(e,t)):v(this.node(),e).ease}function oo(t,e){return function(){var r=e.apply(this,arguments);if(typeof r!="function")throw new Error;N(this,t).ease=r}}function $r(t){if(typeof t!="function")throw new Error;return this.each(oo(this._id,t))}function Xr(t){typeof t!="function"&&(t=nt(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=[],f,u=0;u<a;++u)(f=o[u])&&t.call(f,f.__data__,u,o)&&s.push(f);return new A(n,this._parents,this._name,this._id)}function Br(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,r=t._groups,n=e.length,i=r.length,o=Math.min(n,i),a=new Array(n),s=0;s<o;++s)for(var f=e[s],u=r[s],l=f.length,c=a[s]=new Array(l),h,p=0;p<l;++p)(h=f[p]||u[p])&&(c[p]=h);for(;s<n;++s)a[s]=e[s];return new A(a,this._parents,this._name,this._id)}function ao(t){return(t+"").trim().split(/^|\s+/).every(function(e){var r=e.indexOf(".");return r>=0&&(e=e.slice(0,r)),!e||e==="start"})}function so(t,e,r){var n,i,o=ao(e)?dt:N;return function(){var a=o(this,t),s=a.on;s!==n&&(i=(n=s).copy()).on(e,r),a.on=i}}function Pr(t,e){var r=this._id;return arguments.length<2?v(this.node(),r).on.on(t):this.each(so(r,t,e))}function uo(t){return function(){var e=this.parentNode;for(var r in this.__transition)if(+r!==t)return;e&&e.removeChild(this)}}function qr(){return this.on("end.remove",uo(this._id))}function Hr(t){var e=this._name,r=this._id;typeof t!="function"&&(t=L(t));for(var n=this._groups,i=n.length,o=new Array(i),a=0;a<i;++a)for(var s=n[a],f=s.length,u=o[a]=new Array(f),l,c,h=0;h<f;++h)(l=s[h])&&(c=t.call(l,l.__data__,h,s))&&("__data__"in l&&(c.__data__=l.__data__),u[h]=c,F(u[h],e,r,h,u,v(l,r)));return new A(o,this._parents,e,r)}function Fr(t){var e=this._name,r=this._id;typeof t!="function"&&(t=rt(t));for(var n=this._groups,i=n.length,o=[],a=[],s=0;s<i;++s)for(var f=n[s],u=f.length,l,c=0;c<u;++c)if(l=f[c]){for(var h=t.call(l,l.__data__,c,f),p,x=v(l,r),m=0,g=h.length;m<g;++m)(p=h[m])&&F(p,e,r,m,h,x);o.push(h),a.push(l)}return new A(o,a,e,r)}var fo=$.prototype.constructor;function Yr(){return new fo(this._groups,this._parents)}function lo(t,e){var r,n,i;return function(){var o=q(this,t),a=(this.style.removeProperty(t),q(this,t));return o===a?null:o===r&&a===n?i:i=e(r=o,n=a)}}function Lr(t){return function(){this.style.removeProperty(t)}}function co(t,e,r){var n,i=r+"",o;return function(){var a=q(this,t);return a===i?null:a===n?o:o=e(n=a,r)}}function ho(t,e,r){var n,i,o;return function(){var a=q(this,t),s=r(this),f=s+"";return s==null&&(f=s=(this.style.removeProperty(t),q(this,t))),a===f?null:a===n&&f===i?o:(i=f,o=e(n=a,s))}}function po(t,e){var r,n,i,o="style."+e,a="end."+o,s;return function(){var f=N(this,t),u=f.on,l=f.value[o]==null?s||(s=Lr(e)):void 0;(u!==r||i!==l)&&(n=(r=u).copy()).on(a,i=l),f.on=n}}function Vr(t,e,r){var n=(t+="")=="transform"?ne:Ht;return e==null?this.styleTween(t,lo(t,n)).on("end.style."+t,Lr(t)):typeof e=="function"?this.styleTween(t,ho(t,n,j(this,"style."+t,e))).each(po(this._id,t)):this.styleTween(t,co(t,n,e),r).on("end.style."+t,null)}function mo(t,e,r){return function(n){this.style.setProperty(t,e.call(this,n),r)}}function xo(t,e,r){var n,i;function o(){var a=e.apply(this,arguments);return a!==i&&(n=(i=a)&&mo(t,a,r)),n}return o._value=e,o}function Kr(t,e,r){var n="style."+(t+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;return this.tween(n,xo(t,e,r==null?"":r))}function go(t){return function(){this.textContent=t}}function yo(t){return function(){var e=t(this);this.textContent=e==null?"":e}}function Gr(t){return this.tween("text",typeof t=="function"?yo(j(this,"text",t)):go(t==null?"":t+""))}function _o(t){return function(e){this.textContent=t.call(this,e)}}function vo(t){var e,r;function n(){var i=t.apply(this,arguments);return i!==r&&(e=(r=i)&&_o(i)),e}return n._value=t,n}function Qr(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,vo(t))}function Ur(){for(var t=this._name,e=this._id,r=Ft(),n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],s=a.length,f,u=0;u<s;++u)if(f=a[u]){var l=v(f,e);F(f,t,r,u,a,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new A(n,this._parents,t,r)}function Zr(){var t,e,r=this,n=r._id,i=r.size();return new Promise(function(o,a){var s={value:a},f={value:function(){--i===0&&o()}};r.each(function(){var u=N(this,n),l=u.on;l!==t&&(e=(t=l).copy(),e._.cancel.push(s),e._.interrupt.push(s),e._.end.push(f)),u.on=e}),i===0&&o()})}var wo=0;function A(t,e,r,n){this._groups=t,this._parents=e,this._name=r,this._id=n}function Wr(t){return $().transition(t)}function Ft(){return++wo}var X=$.prototype;A.prototype=Wr.prototype={constructor:A,select:Hr,selectAll:Fr,selectChild:X.selectChild,selectChildren:X.selectChildren,filter:Xr,merge:Br,selection:Yr,transition:Ur,call:X.call,nodes:X.nodes,node:X.node,size:X.size,empty:X.empty,each:X.each,on:Pr,attr:Mr,attrTween:Cr,style:Vr,styleTween:Kr,text:Gr,textTween:Qr,remove:qr,tween:zr,delay:Or,duration:Dr,ease:Rr,easeVarying:$r,end:Zr,[Symbol.iterator]:X[Symbol.iterator]};function Yt(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var bo={time:null,delay:0,duration:250,ease:Yt};function No(t,e){for(var r;!(r=t.__transition)||!(r=r[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return r}function Jr(t){var e,r;t instanceof A?(e=t._id,t=t._name):(e=Ft(),(r=bo).time=pt(),t=t==null?null:t+"");for(var n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],s=a.length,f,u=0;u<s;++u)(f=a[u])&&F(f,t,e,u,a,r||No(f,e));return new A(n,this._parents,t,e)}$.prototype.interrupt=Sr;$.prototype.transition=Jr;var{abs:Al,max:kl,min:El}=Math;function jr(t){return[+t[0],+t[1]]}function Ao(t){return[jr(t[0]),jr(t[1])]}var Il={name:"x",handles:["w","e"].map(ae),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Tl={name:"y",handles:["n","s"].map(ae),input:function(t,e){return t==null?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},Sl={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(ae),input:function(t){return t==null?null:Ao(t)},output:function(t){return t}};function ae(t){return{type:t}}function se(t,e){var r,n=1;t==null&&(t=0),e==null&&(e=0);function i(){var o,a=r.length,s,f=0,u=0;for(o=0;o<a;++o)s=r[o],f+=s.x,u+=s.y;for(f=(f/a-t)*n,u=(u/a-e)*n,o=0;o<a;++o)s=r[o],s.x-=f,s.y-=u}return i.initialize=function(o){r=o},i.x=function(o){return arguments.length?(t=+o,i):t},i.y=function(o){return arguments.length?(e=+o,i):e},i.strength=function(o){return arguments.length?(n=+o,i):n},i}function tn(t){let e=+this._x.call(null,t),r=+this._y.call(null,t);return en(this.cover(e,r),e,r,t)}function en(t,e,r,n){if(isNaN(e)||isNaN(r))return t;var i,o=t._root,a={data:n},s=t._x0,f=t._y0,u=t._x1,l=t._y1,c,h,p,x,m,g,d,y;if(!o)return t._root=a,t;for(;o.length;)if((m=e>=(c=(s+u)/2))?s=c:u=c,(g=r>=(h=(f+l)/2))?f=h:l=h,i=o,!(o=o[d=g<<1|m]))return i[d]=a,t;if(p=+t._x.call(null,o.data),x=+t._y.call(null,o.data),e===p&&r===x)return a.next=o,i?i[d]=a:t._root=a,t;do i=i?i[d]=new Array(4):t._root=new Array(4),(m=e>=(c=(s+u)/2))?s=c:u=c,(g=r>=(h=(f+l)/2))?f=h:l=h;while((d=g<<1|m)===(y=(x>=h)<<1|p>=c));return i[y]=o,i[d]=a,t}function rn(t){var e,r,n=t.length,i,o,a=new Array(n),s=new Array(n),f=1/0,u=1/0,l=-1/0,c=-1/0;for(r=0;r<n;++r)isNaN(i=+this._x.call(null,e=t[r]))||isNaN(o=+this._y.call(null,e))||(a[r]=i,s[r]=o,i<f&&(f=i),i>l&&(l=i),o<u&&(u=o),o>c&&(c=o));if(f>l||u>c)return this;for(this.cover(f,u).cover(l,c),r=0;r<n;++r)en(this,a[r],s[r],t[r]);return this}function nn(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var r=this._x0,n=this._y0,i=this._x1,o=this._y1;if(isNaN(r))i=(r=Math.floor(t))+1,o=(n=Math.floor(e))+1;else{for(var a=i-r||1,s=this._root,f,u;r>t||t>=i||n>e||e>=o;)switch(u=(e<n)<<1|t<r,f=new Array(4),f[u]=s,s=f,a*=2,u){case 0:i=r+a,o=n+a;break;case 1:r=i-a,o=n+a;break;case 2:i=r+a,n=o-a;break;case 3:r=i-a,n=o-a;break}this._root&&this._root.length&&(this._root=s)}return this._x0=r,this._y0=n,this._x1=i,this._y1=o,this}function on(){var t=[];return this.visit(function(e){if(!e.length)do t.push(e.data);while(e=e.next)}),t}function an(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function b(t,e,r,n,i){this.node=t,this.x0=e,this.y0=r,this.x1=n,this.y1=i}function sn(t,e,r){var n,i=this._x0,o=this._y0,a,s,f,u,l=this._x1,c=this._y1,h=[],p=this._root,x,m;for(p&&h.push(new b(p,i,o,l,c)),r==null?r=1/0:(i=t-r,o=e-r,l=t+r,c=e+r,r*=r);x=h.pop();)if(!(!(p=x.node)||(a=x.x0)>l||(s=x.y0)>c||(f=x.x1)<i||(u=x.y1)<o))if(p.length){var g=(a+f)/2,d=(s+u)/2;h.push(new b(p[3],g,d,f,u),new b(p[2],a,d,g,u),new b(p[1],g,s,f,d),new b(p[0],a,s,g,d)),(m=(e>=d)<<1|t>=g)&&(x=h[h.length-1],h[h.length-1]=h[h.length-1-m],h[h.length-1-m]=x)}else{var y=t-+this._x.call(null,p.data),w=e-+this._y.call(null,p.data),I=y*y+w*w;if(I<r){var T=Math.sqrt(r=I);i=t-T,o=e-T,l=t+T,c=e+T,n=p.data}}return n}function un(t){if(isNaN(l=+this._x.call(null,t))||isNaN(c=+this._y.call(null,t)))return this;var e,r=this._root,n,i,o,a=this._x0,s=this._y0,f=this._x1,u=this._y1,l,c,h,p,x,m,g,d;if(!r)return this;if(r.length)for(;;){if((x=l>=(h=(a+f)/2))?a=h:f=h,(m=c>=(p=(s+u)/2))?s=p:u=p,e=r,!(r=r[g=m<<1|x]))return this;if(!r.length)break;(e[g+1&3]||e[g+2&3]||e[g+3&3])&&(n=e,d=g)}for(;r.data!==t;)if(i=r,!(r=r.next))return this;return(o=r.next)&&delete r.next,i?(o?i.next=o:delete i.next,this):e?(o?e[g]=o:delete e[g],(r=e[0]||e[1]||e[2]||e[3])&&r===(e[3]||e[2]||e[1]||e[0])&&!r.length&&(n?n[d]=r:this._root=r),this):(this._root=o,this)}function fn(t){for(var e=0,r=t.length;e<r;++e)this.remove(t[e]);return this}function ln(){return this._root}function cn(){var t=0;return this.visit(function(e){if(!e.length)do++t;while(e=e.next)}),t}function hn(t){var e=[],r,n=this._root,i,o,a,s,f;for(n&&e.push(new b(n,this._x0,this._y0,this._x1,this._y1));r=e.pop();)if(!t(n=r.node,o=r.x0,a=r.y0,s=r.x1,f=r.y1)&&n.length){var u=(o+s)/2,l=(a+f)/2;(i=n[3])&&e.push(new b(i,u,l,s,f)),(i=n[2])&&e.push(new b(i,o,l,u,f)),(i=n[1])&&e.push(new b(i,u,a,s,l)),(i=n[0])&&e.push(new b(i,o,a,u,l))}return this}function pn(t){var e=[],r=[],n;for(this._root&&e.push(new b(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,a=n.x0,s=n.y0,f=n.x1,u=n.y1,l=(a+f)/2,c=(s+u)/2;(o=i[0])&&e.push(new b(o,a,s,l,c)),(o=i[1])&&e.push(new b(o,l,s,f,c)),(o=i[2])&&e.push(new b(o,a,c,l,u)),(o=i[3])&&e.push(new b(o,l,c,f,u))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this}function mn(t){return t[0]}function dn(t){return arguments.length?(this._x=t,this):this._x}function xn(t){return t[1]}function gn(t){return arguments.length?(this._y=t,this):this._y}function xt(t,e,r){var n=new ue(e==null?mn:e,r==null?xn:r,NaN,NaN,NaN,NaN);return t==null?n:n.addAll(t)}function ue(t,e,r,n,i,o){this._x=t,this._y=e,this._x0=r,this._y0=n,this._x1=i,this._y1=o,this._root=void 0}function yn(t){for(var e={data:t.data},r=e;t=t.next;)r=r.next={data:t.data};return e}var k=xt.prototype=ue.prototype;k.copy=function(){var t=new ue(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root,r,n;if(!e)return t;if(!e.length)return t._root=yn(e),t;for(r=[{source:e,target:t._root=new Array(4)}];e=r.pop();)for(var i=0;i<4;++i)(n=e.source[i])&&(n.length?r.push({source:n,target:e.target[i]=new Array(4)}):e.target[i]=yn(n));return t};k.add=tn;k.addAll=rn;k.cover=nn;k.data=on;k.extent=an;k.find=sn;k.remove=un;k.removeAll=fn;k.root=ln;k.size=cn;k.visit=hn;k.visitAfter=pn;k.x=dn;k.y=gn;function fe(t){return function(){return t}}function le(t){return(t()-.5)*1e-6}function ko(t){return t.x+t.vx}function Eo(t){return t.y+t.vy}function ce(t){var e,r,n,i=1,o=1;typeof t!="function"&&(t=fe(t==null?1:+t));function a(){for(var u,l=e.length,c,h,p,x,m,g,d=0;d<o;++d)for(c=xt(e,ko,Eo).visitAfter(s),u=0;u<l;++u)h=e[u],m=r[h.index],g=m*m,p=h.x+h.vx,x=h.y+h.vy,c.visit(y);function y(w,I,T,tt,Q){var M=w.data,gt=w.r,S=m+gt;if(M){if(M.index>h.index){var B=p-M.x-M.vx,P=x-M.y-M.vy,D=B*B+P*P;D<S*S&&(B===0&&(B=le(n),D+=B*B),P===0&&(P=le(n),D+=P*P),D=(S-(D=Math.sqrt(D)))/D*i,h.vx+=(B*=D)*(S=(gt*=gt)/(g+gt)),h.vy+=(P*=D)*S,M.vx-=B*(S=1-S),M.vy-=P*S)}return}return I>p+S||tt<p-S||T>x+S||Q<x-S}}function s(u){if(u.data)return u.r=r[u.data.index];for(var l=u.r=0;l<4;++l)u[l]&&u[l].r>u.r&&(u.r=u[l].r)}function f(){if(!!e){var u,l=e.length,c;for(r=new Array(l),u=0;u<l;++u)c=e[u],r[c.index]=+t(c,u,e)}}return a.initialize=function(u,l){e=u,n=l,f()},a.iterations=function(u){return arguments.length?(o=+u,a):o},a.strength=function(u){return arguments.length?(i=+u,a):i},a.radius=function(u){return arguments.length?(t=typeof u=="function"?u:fe(+u),f(),a):t},a}function _n(){let t=1;return()=>(t=(1664525*t+1013904223)%4294967296)/4294967296}var Io=10,To=Math.PI*(3-Math.sqrt(5));function he(t){var e,r=1,n=.001,i=1-Math.pow(n,1/300),o=0,a=.6,s=new Map,f=J(c),u=et("tick","end"),l=_n();t==null&&(t=[]);function c(){h(),u.call("tick",e),r<n&&(f.stop(),u.call("end",e))}function h(m){var g,d=t.length,y;m===void 0&&(m=1);for(var w=0;w<m;++w)for(r+=(o-r)*i,s.forEach(function(I){I(r)}),g=0;g<d;++g)y=t[g],y.fx==null?y.x+=y.vx*=a:(y.x=y.fx,y.vx=0),y.fy==null?y.y+=y.vy*=a:(y.y=y.fy,y.vy=0);return e}function p(){for(var m=0,g=t.length,d;m<g;++m){if(d=t[m],d.index=m,d.fx!=null&&(d.x=d.fx),d.fy!=null&&(d.y=d.fy),isNaN(d.x)||isNaN(d.y)){var y=Io*Math.sqrt(.5+m),w=m*To;d.x=y*Math.cos(w),d.y=y*Math.sin(w)}(isNaN(d.vx)||isNaN(d.vy))&&(d.vx=d.vy=0)}}function x(m){return m.initialize&&m.initialize(t,l),m}return p(),e={tick:h,restart:function(){return f.restart(c),e},stop:function(){return f.stop(),e},nodes:function(m){return arguments.length?(t=m,p(),s.forEach(x),e):t},alpha:function(m){return arguments.length?(r=+m,e):r},alphaMin:function(m){return arguments.length?(n=+m,e):n},alphaDecay:function(m){return arguments.length?(i=+m,e):+i},alphaTarget:function(m){return arguments.length?(o=+m,e):o},velocityDecay:function(m){return arguments.length?(a=1-m,e):1-a},randomSource:function(m){return arguments.length?(l=m,s.forEach(x),e):l},force:function(m,g){return arguments.length>1?(g==null?s.delete(m):s.set(m,x(g)),e):s.get(m)},find:function(m,g,d){var y=0,w=t.length,I,T,tt,Q,M;for(d==null?d=1/0:d*=d,y=0;y<w;++y)Q=t[y],I=m-Q.x,T=g-Q.y,tt=I*I+T*T,tt<d&&(M=Q,d=tt);return M},on:function(m,g){return arguments.length>1?(u.on(m,g),e):u.on(m)}}}function Y(t,e,r){this.k=t,this.x=e,this.y=r}Y.prototype={constructor:Y,scale:function(t){return t===1?this:new Y(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new Y(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var pe=new Y(1,0,0);me.prototype=Y.prototype;function me(t){for(;!t.__zoom;)if(!(t=t.parentNode))return pe;return t.__zoom}window.addEventListener("load",async()=>{let t=[{x:10,y:10},{x:15,y:15},{x:20,y:20},{x:25,y:25},{x:30,y:30}],e=300,r=300,i=Qt("svg").attr("width",e).attr("height",r).append("g").selectAll("circle").data(t).enter().append("circle").attr("cx",f=>f.x+110).attr("cy",f=>f.y+110).attr("r",f=>10).attr("style","fill: #f00");he(t).force("collide",ce().radius(10).strength(3)).force("center",se(e/2,r/2)).alpha(.1).alphaDecay(0).on("tick",a).on("end",s);function a(){let f=i.attr("cx",function(u){return u.x}).attr("cy",function(u){return u.y})}function s(){}});})();
//# sourceMappingURL=data:application/json;base64,
