(()=>{var Q=class{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){let n=this._partials,r=0;for(let i=0;i<this._n&&i<32;i++){let o=n[i],a=e+o,u=Math.abs(e)<Math.abs(o)?e-(a-o):o-(a-e);u&&(n[r++]=u),e=a}return n[r]=e,this._n=r+1,this}valueOf(){let e=this._partials,n=this._n,r,i,o,a=0;if(n>0){for(a=e[--n];n>0&&(r=a,i=e[--n],a=r+i,o=i-(a-r),!o););n>0&&(o<0&&e[n-1]<0||o>0&&e[n-1]>0)&&(i=o*2,r=a+i,i==r-a&&(a=r))}return a}};function*go(t){for(let e of t)yield*e}function Nt(t){return Array.from(go(t))}var xo={value:()=>{}};function Qn(){for(var t=0,e=arguments.length,n={},r;t<e;++t){if(!(r=arguments[t]+"")||r in n||/[\s.]/.test(r))throw new Error("illegal type: "+r);n[r]=[]}return new me(n)}function me(t){this._=t}function vo(t,e){return t.trim().split(/^|\s+/).map(function(n){var r="",i=n.indexOf(".");if(i>=0&&(r=n.slice(i+1),n=n.slice(0,i)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:r}})}me.prototype=Qn.prototype={constructor:me,on:function(t,e){var n=this._,r=vo(t+"",n),i,o=-1,a=r.length;if(arguments.length<2){for(;++o<a;)if((i=(t=r[o]).type)&&(i=yo(n[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<a;)if(i=(t=r[o]).type)n[i]=Zn(n[i],t.name,e);else if(e==null)for(i in n)n[i]=Zn(n[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new me(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var n=new Array(i),r=0,i,o;r<i;++r)n[r]=arguments[r+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],r=0,i=o.length;r<i;++r)o[r].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(e,n)}};function yo(t,e){for(var n=0,r=t.length,i;n<r;++n)if((i=t[n]).name===e)return i.value}function Zn(t,e,n){for(var r=0,i=t.length;r<i;++r)if(t[r].name===e){t[r]=xo,t=t.slice(0,r).concat(t.slice(r+1));break}return n!=null&&t.push({name:e,value:n}),t}var on=Qn;var de="http://www.w3.org/1999/xhtml",an={svg:"http://www.w3.org/2000/svg",xhtml:de,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function lt(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),an.hasOwnProperty(e)?{space:an[e],local:t}:t}function wo(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===de&&e.documentElement.namespaceURI===de?e.createElement(t):e.createElementNS(n,t)}}function _o(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function ge(t){var e=lt(t);return(e.local?_o:wo)(e)}function bo(){}function wt(t){return t==null?bo:function(){return this.querySelector(t)}}function Jn(t){typeof t!="function"&&(t=wt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],a=o.length,u=r[i]=new Array(a),s,l,f=0;f<a;++f)(s=o[f])&&(l=t.call(s,s.__data__,f,o))&&("__data__"in s&&(l.__data__=s.__data__),u[f]=l);return new q(r,this._parents)}function un(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function Eo(){return[]}function $t(t){return t==null?Eo:function(){return this.querySelectorAll(t)}}function So(t){return function(){return un(t.apply(this,arguments))}}function jn(t){typeof t=="function"?t=So(t):t=$t(t);for(var e=this._groups,n=e.length,r=[],i=[],o=0;o<n;++o)for(var a=e[o],u=a.length,s,l=0;l<u;++l)(s=a[l])&&(r.push(t.call(s,s.__data__,l,a)),i.push(s));return new q(r,i)}function Lt(t){return function(){return this.matches(t)}}function xe(t){return function(e){return e.matches(t)}}var Ao=Array.prototype.find;function No(t){return function(){return Ao.call(this.children,t)}}function Io(){return this.firstElementChild}function tr(t){return this.select(t==null?Io:No(typeof t=="function"?t:xe(t)))}var Ro=Array.prototype.filter;function Mo(){return Array.from(this.children)}function zo(t){return function(){return Ro.call(this.children,t)}}function er(t){return this.selectAll(t==null?Mo:zo(typeof t=="function"?t:xe(t)))}function nr(t){typeof t!="function"&&(t=Lt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],a=o.length,u=r[i]=[],s,l=0;l<a;++l)(s=o[l])&&t.call(s,s.__data__,l,o)&&u.push(s);return new q(r,this._parents)}function ve(t){return new Array(t.length)}function rr(){return new q(this._enter||this._groups.map(ve),this._parents)}function Bt(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}Bt.prototype={constructor:Bt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function ir(t){return function(){return t}}function Co(t,e,n,r,i,o){for(var a=0,u,s=e.length,l=o.length;a<l;++a)(u=e[a])?(u.__data__=o[a],r[a]=u):n[a]=new Bt(t,o[a]);for(;a<s;++a)(u=e[a])&&(i[a]=u)}function To(t,e,n,r,i,o,a){var u,s,l=new Map,f=e.length,h=o.length,c=new Array(f),p;for(u=0;u<f;++u)(s=e[u])&&(c[u]=p=a.call(s,s.__data__,u,e)+"",l.has(p)?i[u]=s:l.set(p,s));for(u=0;u<h;++u)p=a.call(t,o[u],u,o)+"",(s=l.get(p))?(r[u]=s,s.__data__=o[u],l.delete(p)):n[u]=new Bt(t,o[u]);for(u=0;u<f;++u)(s=e[u])&&l.get(c[u])===s&&(i[u]=s)}function ko(t){return t.__data__}function or(t,e){if(!arguments.length)return Array.from(this,ko);var n=e?To:Co,r=this._parents,i=this._groups;typeof t!="function"&&(t=ir(t));for(var o=i.length,a=new Array(o),u=new Array(o),s=new Array(o),l=0;l<o;++l){var f=r[l],h=i[l],c=h.length,p=Po(t.call(f,f&&f.__data__,l,r)),m=p.length,g=u[l]=new Array(m),x=a[l]=new Array(m),A=s[l]=new Array(c);n(f,h,g,x,A,p,e);for(var y=0,_=0,v,S;y<m;++y)if(v=g[y]){for(y>=_&&(_=y+1);!(S=x[_])&&++_<m;);v._next=S||null}}return a=new q(a,r),a._enter=u,a._exit=s,a}function Po(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function ar(){return new q(this._exit||this._groups.map(ve),this._parents)}function ur(t,e,n){var r=this.enter(),i=this,o=this.exit();return typeof t=="function"?(r=t(r),r&&(r=r.selection())):r=r.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),n==null?o.remove():n(o),r&&i?r.merge(i).order():i}function fr(t){for(var e=t.selection?t.selection():t,n=this._groups,r=e._groups,i=n.length,o=r.length,a=Math.min(i,o),u=new Array(i),s=0;s<a;++s)for(var l=n[s],f=r[s],h=l.length,c=u[s]=new Array(h),p,m=0;m<h;++m)(p=l[m]||f[m])&&(c[m]=p);for(;s<i;++s)u[s]=n[s];return new q(u,this._parents)}function sr(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r=t[e],i=r.length-1,o=r[i],a;--i>=0;)(a=r[i])&&(o&&a.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(a,o),o=a);return this}function lr(t){t||(t=Oo);function e(h,c){return h&&c?t(h.__data__,c.__data__):!h-!c}for(var n=this._groups,r=n.length,i=new Array(r),o=0;o<r;++o){for(var a=n[o],u=a.length,s=i[o]=new Array(u),l,f=0;f<u;++f)(l=a[f])&&(s[f]=l);s.sort(e)}return new q(i,this._parents).order()}function Oo(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function cr(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function pr(){return Array.from(this)}function hr(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null}function mr(){let t=0;for(let e of this)++t;return t}function dr(){return!this.node()}function gr(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var i=e[n],o=0,a=i.length,u;o<a;++o)(u=i[o])&&t.call(u,u.__data__,o,i);return this}function qo(t){return function(){this.removeAttribute(t)}}function Do(t){return function(){this.removeAttributeNS(t.space,t.local)}}function $o(t,e){return function(){this.setAttribute(t,e)}}function Lo(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function Bo(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function Fo(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function xr(t,e){var n=lt(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((e==null?n.local?Do:qo:typeof e=="function"?n.local?Fo:Bo:n.local?Lo:$o)(n,e))}function ye(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function Xo(t){return function(){this.style.removeProperty(t)}}function Ho(t,e,n){return function(){this.style.setProperty(t,e,n)}}function Yo(t,e,n){return function(){var r=e.apply(this,arguments);r==null?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function vr(t,e,n){return arguments.length>1?this.each((e==null?Xo:typeof e=="function"?Yo:Ho)(t,e,n==null?"":n)):ht(this.node(),t)}function ht(t,e){return t.style.getPropertyValue(e)||ye(t).getComputedStyle(t,null).getPropertyValue(e)}function Vo(t){return function(){delete this[t]}}function Go(t,e){return function(){this[t]=e}}function Ko(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function yr(t,e){return arguments.length>1?this.each((e==null?Vo:typeof e=="function"?Ko:Go)(t,e)):this.node()[t]}function wr(t){return t.trim().split(/^|\s+/)}function fn(t){return t.classList||new _r(t)}function _r(t){this._node=t,this._names=wr(t.getAttribute("class")||"")}_r.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function br(t,e){for(var n=fn(t),r=-1,i=e.length;++r<i;)n.add(e[r])}function Er(t,e){for(var n=fn(t),r=-1,i=e.length;++r<i;)n.remove(e[r])}function Uo(t){return function(){br(this,t)}}function Wo(t){return function(){Er(this,t)}}function Zo(t,e){return function(){(e.apply(this,arguments)?br:Er)(this,t)}}function Sr(t,e){var n=wr(t+"");if(arguments.length<2){for(var r=fn(this.node()),i=-1,o=n.length;++i<o;)if(!r.contains(n[i]))return!1;return!0}return this.each((typeof e=="function"?Zo:e?Uo:Wo)(n,e))}function Qo(){this.textContent=""}function Jo(t){return function(){this.textContent=t}}function jo(t){return function(){var e=t.apply(this,arguments);this.textContent=e==null?"":e}}function Ar(t){return arguments.length?this.each(t==null?Qo:(typeof t=="function"?jo:Jo)(t)):this.node().textContent}function ta(){this.innerHTML=""}function ea(t){return function(){this.innerHTML=t}}function na(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e==null?"":e}}function Nr(t){return arguments.length?this.each(t==null?ta:(typeof t=="function"?na:ea)(t)):this.node().innerHTML}function ra(){this.nextSibling&&this.parentNode.appendChild(this)}function Ir(){return this.each(ra)}function ia(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Rr(){return this.each(ia)}function Mr(t){var e=typeof t=="function"?t:ge(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function oa(){return null}function zr(t,e){var n=typeof t=="function"?t:ge(t),r=e==null?oa:typeof e=="function"?e:wt(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})}function aa(){var t=this.parentNode;t&&t.removeChild(this)}function Cr(){return this.each(aa)}function ua(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function fa(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Tr(t){return this.select(t?fa:ua)}function kr(t){return arguments.length?this.property("__data__",t):this.node().__data__}function sa(t){return function(e){t.call(this,e,this.__data__)}}function la(t){return t.trim().split(/^|\s+/).map(function(e){var n="",r=e.indexOf(".");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{type:e,name:n}})}function ca(t){return function(){var e=this.__on;if(!!e){for(var n=0,r=-1,i=e.length,o;n<i;++n)o=e[n],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++r]=o;++r?e.length=r:delete this.__on}}}function pa(t,e,n){return function(){var r=this.__on,i,o=sa(e);if(r){for(var a=0,u=r.length;a<u;++a)if((i=r[a]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=n),i.value=e;return}}this.addEventListener(t.type,o,n),i={type:t.type,name:t.name,value:e,listener:o,options:n},r?r.push(i):this.__on=[i]}}function Pr(t,e,n){var r=la(t+""),i,o=r.length,a;if(arguments.length<2){var u=this.node().__on;if(u){for(var s=0,l=u.length,f;s<l;++s)for(i=0,f=u[s];i<o;++i)if((a=r[i]).type===f.type&&a.name===f.name)return f.value}return}for(u=e?pa:ca,i=0;i<o;++i)this.each(u(r[i],e,n));return this}function Or(t,e,n){var r=ye(t),i=r.CustomEvent;typeof i=="function"?i=new i(e,n):(i=r.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function ha(t,e){return function(){return Or(this,t,e)}}function ma(t,e){return function(){return Or(this,t,e.apply(this,arguments))}}function qr(t,e){return this.each((typeof e=="function"?ma:ha)(t,e))}function*Dr(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],i=0,o=r.length,a;i<o;++i)(a=r[i])&&(yield a)}var sn=[null];function q(t,e){this._groups=t,this._parents=e}function $r(){return new q([[document.documentElement]],sn)}function da(){return this}q.prototype=$r.prototype={constructor:q,select:Jn,selectAll:jn,selectChild:tr,selectChildren:er,filter:nr,data:or,enter:rr,exit:ar,join:ur,merge:fr,selection:da,order:sr,sort:lr,call:cr,nodes:pr,node:hr,size:mr,empty:dr,each:gr,attr:xr,style:vr,property:yr,classed:Sr,text:Ar,html:Nr,raise:Ir,lower:Rr,append:Mr,insert:zr,remove:Cr,clone:Tr,datum:kr,on:Pr,dispatch:qr,[Symbol.iterator]:Dr};var ct=$r;function ln(t){return typeof t=="string"?new q([[document.querySelector(t)]],[document.documentElement]):new q([[t]],sn)}function we(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function cn(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function Ht(){}var Ft=.7,Ee=1/Ft,It="\\s*([+-]?\\d+)\\s*",Xt="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",it="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",ga=/^#([0-9a-f]{3,8})$/,xa=new RegExp(`^rgb\\(${It},${It},${It}\\)$`),va=new RegExp(`^rgb\\(${it},${it},${it}\\)$`),ya=new RegExp(`^rgba\\(${It},${It},${It},${Xt}\\)$`),wa=new RegExp(`^rgba\\(${it},${it},${it},${Xt}\\)$`),_a=new RegExp(`^hsl\\(${Xt},${it},${it}\\)$`),ba=new RegExp(`^hsla\\(${Xt},${it},${it},${Xt}\\)$`),Lr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};we(Ht,mt,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Br,formatHex:Br,formatHex8:Ea,formatHsl:Sa,formatRgb:Fr,toString:Fr});function Br(){return this.rgb().formatHex()}function Ea(){return this.rgb().formatHex8()}function Sa(){return Kr(this).formatHsl()}function Fr(){return this.rgb().formatRgb()}function mt(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=ga.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?Xr(e):n===3?new Z(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?_e(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?_e(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=xa.exec(t))?new Z(e[1],e[2],e[3],1):(e=va.exec(t))?new Z(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=ya.exec(t))?_e(e[1],e[2],e[3],e[4]):(e=wa.exec(t))?_e(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=_a.exec(t))?Vr(e[1],e[2]/100,e[3]/100,1):(e=ba.exec(t))?Vr(e[1],e[2]/100,e[3]/100,e[4]):Lr.hasOwnProperty(t)?Xr(Lr[t]):t==="transparent"?new Z(NaN,NaN,NaN,0):null}function Xr(t){return new Z(t>>16&255,t>>8&255,t&255,1)}function _e(t,e,n,r){return r<=0&&(t=e=n=NaN),new Z(t,e,n,r)}function Aa(t){return t instanceof Ht||(t=mt(t)),t?(t=t.rgb(),new Z(t.r,t.g,t.b,t.opacity)):new Z}function Rt(t,e,n,r){return arguments.length===1?Aa(t):new Z(t,e,n,r==null?1:r)}function Z(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}we(Z,Rt,cn(Ht,{brighter(t){return t=t==null?Ee:Math.pow(Ee,t),new Z(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?Ft:Math.pow(Ft,t),new Z(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new Z(bt(this.r),bt(this.g),bt(this.b),Se(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Hr,formatHex:Hr,formatHex8:Na,formatRgb:Yr,toString:Yr}));function Hr(){return`#${_t(this.r)}${_t(this.g)}${_t(this.b)}`}function Na(){return`#${_t(this.r)}${_t(this.g)}${_t(this.b)}${_t((isNaN(this.opacity)?1:this.opacity)*255)}`}function Yr(){let t=Se(this.opacity);return`${t===1?"rgb(":"rgba("}${bt(this.r)}, ${bt(this.g)}, ${bt(this.b)}${t===1?")":`, ${t})`}`}function Se(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function bt(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function _t(t){return t=bt(t),(t<16?"0":"")+t.toString(16)}function Vr(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new et(t,e,n,r)}function Kr(t){if(t instanceof et)return new et(t.h,t.s,t.l,t.opacity);if(t instanceof Ht||(t=mt(t)),!t)return new et;if(t instanceof et)return t;t=t.rgb();var e=t.r/255,n=t.g/255,r=t.b/255,i=Math.min(e,n,r),o=Math.max(e,n,r),a=NaN,u=o-i,s=(o+i)/2;return u?(e===o?a=(n-r)/u+(n<r)*6:n===o?a=(r-e)/u+2:a=(e-n)/u+4,u/=s<.5?o+i:2-o-i,a*=60):u=s>0&&s<1?0:a,new et(a,u,s,t.opacity)}function Ur(t,e,n,r){return arguments.length===1?Kr(t):new et(t,e,n,r==null?1:r)}function et(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}we(et,Ur,cn(Ht,{brighter(t){return t=t==null?Ee:Math.pow(Ee,t),new et(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?Ft:Math.pow(Ft,t),new et(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,i=2*n-r;return new Z(pn(t>=240?t-240:t+120,i,r),pn(t,i,r),pn(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new et(Gr(this.h),be(this.s),be(this.l),Se(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let t=Se(this.opacity);return`${t===1?"hsl(":"hsla("}${Gr(this.h)}, ${be(this.s)*100}%, ${be(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Gr(t){return t=(t||0)%360,t<0?t+360:t}function be(t){return Math.max(0,Math.min(1,t||0))}function pn(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}function hn(t,e,n,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*e+(4-6*o+3*a)*n+(1+3*t+3*o-3*a)*r+a*i)/6}function Wr(t){var e=t.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<e-1?t[r+2]:2*o-i;return hn((n-r/e)*e,a,i,o,u)}}function Zr(t){var e=t.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*e),i=t[(r+e-1)%e],o=t[r%e],a=t[(r+1)%e],u=t[(r+2)%e];return hn((n-r/e)*e,i,o,a,u)}}var mn=t=>()=>t;function Ia(t,e){return function(n){return t+n*e}}function Ra(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}function Qr(t){return(t=+t)==1?Ae:function(e,n){return n-e?Ra(e,n,t):mn(isNaN(e)?n:e)}}function Ae(t,e){var n=e-t;return n?Ia(t,n):mn(isNaN(t)?e:t)}var Ne=function t(e){var n=Qr(e);function r(i,o){var a=n((i=Rt(i)).r,(o=Rt(o)).r),u=n(i.g,o.g),s=n(i.b,o.b),l=Ae(i.opacity,o.opacity);return function(f){return i.r=a(f),i.g=u(f),i.b=s(f),i.opacity=l(f),i+""}}return r.gamma=t,r}(1);function Jr(t){return function(e){var n=e.length,r=new Array(n),i=new Array(n),o=new Array(n),a,u;for(a=0;a<n;++a)u=Rt(e[a]),r[a]=u.r||0,i[a]=u.g||0,o[a]=u.b||0;return r=t(r),i=t(i),o=t(o),u.opacity=1,function(s){return u.r=r(s),u.g=i(s),u.b=o(s),u+""}}}var Ma=Jr(Wr),za=Jr(Zr);function tt(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}var gn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,dn=new RegExp(gn.source,"g");function Ca(t){return function(){return t}}function Ta(t){return function(e){return t(e)+""}}function xn(t,e){var n=gn.lastIndex=dn.lastIndex=0,r,i,o,a=-1,u=[],s=[];for(t=t+"",e=e+"";(r=gn.exec(t))&&(i=dn.exec(e));)(o=i.index)>n&&(o=e.slice(n,o),u[a]?u[a]+=o:u[++a]=o),(r=r[0])===(i=i[0])?u[a]?u[a]+=i:u[++a]=i:(u[++a]=null,s.push({i:a,x:tt(r,i)})),n=dn.lastIndex;return n<e.length&&(o=e.slice(n),u[a]?u[a]+=o:u[++a]=o),u.length<2?s[0]?Ta(s[0].x):Ca(e):(e=s.length,function(l){for(var f=0,h;f<e;++f)u[(h=s[f]).i]=h.x(l);return u.join("")})}var jr=180/Math.PI,Ie={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function vn(t,e,n,r,i,o){var a,u,s;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(s=t*n+e*r)&&(n-=t*s,r-=e*s),(u=Math.sqrt(n*n+r*r))&&(n/=u,r/=u,s/=u),t*r<e*n&&(t=-t,e=-e,s=-s,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*jr,skewX:Math.atan(s)*jr,scaleX:a,scaleY:u}}var Re;function ti(t){let e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?Ie:vn(e.a,e.b,e.c,e.d,e.e,e.f)}function ei(t){return t==null?Ie:(Re||(Re=document.createElementNS("http://www.w3.org/2000/svg","g")),Re.setAttribute("transform",t),(t=Re.transform.baseVal.consolidate())?(t=t.matrix,vn(t.a,t.b,t.c,t.d,t.e,t.f)):Ie)}function ni(t,e,n,r){function i(l){return l.length?l.pop()+" ":""}function o(l,f,h,c,p,m){if(l!==h||f!==c){var g=p.push("translate(",null,e,null,n);m.push({i:g-4,x:tt(l,h)},{i:g-2,x:tt(f,c)})}else(h||c)&&p.push("translate("+h+e+c+n)}function a(l,f,h,c){l!==f?(l-f>180?f+=360:f-l>180&&(l+=360),c.push({i:h.push(i(h)+"rotate(",null,r)-2,x:tt(l,f)})):f&&h.push(i(h)+"rotate("+f+r)}function u(l,f,h,c){l!==f?c.push({i:h.push(i(h)+"skewX(",null,r)-2,x:tt(l,f)}):f&&h.push(i(h)+"skewX("+f+r)}function s(l,f,h,c,p,m){if(l!==h||f!==c){var g=p.push(i(p)+"scale(",null,",",null,")");m.push({i:g-4,x:tt(l,h)},{i:g-2,x:tt(f,c)})}else(h!==1||c!==1)&&p.push(i(p)+"scale("+h+","+c+")")}return function(l,f){var h=[],c=[];return l=t(l),f=t(f),o(l.translateX,l.translateY,f.translateX,f.translateY,h,c),a(l.rotate,f.rotate,h,c),u(l.skewX,f.skewX,h,c),s(l.scaleX,l.scaleY,f.scaleX,f.scaleY,h,c),l=f=null,function(p){for(var m=-1,g=c.length,x;++m<g;)h[(x=c[m]).i]=x.x(p);return h.join("")}}}var yn=ni(ti,"px, ","px)","deg)"),wn=ni(ei,", ",")",")");var Mt=0,Vt=0,Yt=0,ii=1e3,Me,Gt,ze=0,Et=0,Ce=0,Kt=typeof performance=="object"&&performance.now?performance:Date,oi=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Wt(){return Et||(oi(ka),Et=Kt.now()+Ce)}function ka(){Et=0}function Ut(){this._call=this._time=this._next=null}Ut.prototype=Te.prototype={constructor:Ut,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?Wt():+n)+(e==null?0:+e),!this._next&&Gt!==this&&(Gt?Gt._next=this:Me=this,Gt=this),this._call=t,this._time=n,_n()},stop:function(){this._call&&(this._call=null,this._time=1/0,_n())}};function Te(t,e,n){var r=new Ut;return r.restart(t,e,n),r}function ai(){Wt(),++Mt;for(var t=Me,e;t;)(e=Et-t._time)>=0&&t._call.call(void 0,e),t=t._next;--Mt}function ri(){Et=(ze=Kt.now())+Ce,Mt=Vt=0;try{ai()}finally{Mt=0,Oa(),Et=0}}function Pa(){var t=Kt.now(),e=t-ze;e>ii&&(Ce-=e,ze=t)}function Oa(){for(var t,e=Me,n,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Me=n);Gt=t,_n(r)}function _n(t){if(!Mt){Vt&&(Vt=clearTimeout(Vt));var e=t-Et;e>24?(t<1/0&&(Vt=setTimeout(ri,t-Kt.now()-Ce)),Yt&&(Yt=clearInterval(Yt))):(Yt||(ze=Kt.now(),Yt=setInterval(Pa,ii)),Mt=1,oi(ri))}}function ke(t,e,n){var r=new Ut;return e=e==null?0:+e,r.restart(i=>{r.stop(),t(i+e)},e,n),r}var qa=on("start","end","cancel","interrupt"),Da=[],si=0,ui=1,Oe=2,Pe=3,fi=4,qe=5,Zt=6;function dt(t,e,n,r,i,o){var a=t.__transition;if(!a)t.__transition={};else if(n in a)return;$a(t,n,{name:e,index:r,group:i,on:qa,tween:Da,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:si})}function Qt(t,e){var n=L(t,e);if(n.state>si)throw new Error("too late; already scheduled");return n}function X(t,e){var n=L(t,e);if(n.state>Pe)throw new Error("too late; already running");return n}function L(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function $a(t,e,n){var r=t.__transition,i;r[e]=n,n.timer=Te(o,0,n.time);function o(l){n.state=ui,n.timer.restart(a,n.delay,n.time),n.delay<=l&&a(l-n.delay)}function a(l){var f,h,c,p;if(n.state!==ui)return s();for(f in r)if(p=r[f],p.name===n.name){if(p.state===Pe)return ke(a);p.state===fi?(p.state=Zt,p.timer.stop(),p.on.call("interrupt",t,t.__data__,p.index,p.group),delete r[f]):+f<e&&(p.state=Zt,p.timer.stop(),p.on.call("cancel",t,t.__data__,p.index,p.group),delete r[f])}if(ke(function(){n.state===Pe&&(n.state=fi,n.timer.restart(u,n.delay,n.time),u(l))}),n.state=Oe,n.on.call("start",t,t.__data__,n.index,n.group),n.state===Oe){for(n.state=Pe,i=new Array(c=n.tween.length),f=0,h=-1;f<c;++f)(p=n.tween[f].value.call(t,t.__data__,n.index,n.group))&&(i[++h]=p);i.length=h+1}}function u(l){for(var f=l<n.duration?n.ease.call(null,l/n.duration):(n.timer.restart(s),n.state=qe,1),h=-1,c=i.length;++h<c;)i[h].call(t,f);n.state===qe&&(n.on.call("end",t,t.__data__,n.index,n.group),s())}function s(){n.state=Zt,n.timer.stop(),delete r[e];for(var l in r)return;delete t.__transition}}function De(t,e){var n=t.__transition,r,i,o=!0,a;if(!!n){e=e==null?null:e+"";for(a in n){if((r=n[a]).name!==e){o=!1;continue}i=r.state>Oe&&r.state<qe,r.state=Zt,r.timer.stop(),r.on.call(i?"interrupt":"cancel",t,t.__data__,r.index,r.group),delete n[a]}o&&delete t.__transition}}function li(t){return this.each(function(){De(this,t)})}function La(t,e){var n,r;return function(){var i=X(this,t),o=i.tween;if(o!==n){r=n=o;for(var a=0,u=r.length;a<u;++a)if(r[a].name===e){r=r.slice(),r.splice(a,1);break}}i.tween=r}}function Ba(t,e,n){var r,i;if(typeof n!="function")throw new Error;return function(){var o=X(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:e,value:n},s=0,l=i.length;s<l;++s)if(i[s].name===e){i[s]=u;break}s===l&&i.push(u)}o.tween=i}}function ci(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r=L(this.node(),n).tween,i=0,o=r.length,a;i<o;++i)if((a=r[i]).name===t)return a.value;return null}return this.each((e==null?La:Ba)(n,t,e))}function zt(t,e,n){var r=t._id;return t.each(function(){var i=X(this,r);(i.value||(i.value={}))[e]=n.apply(this,arguments)}),function(i){return L(i,r).value[e]}}function $e(t,e){var n;return(typeof e=="number"?tt:e instanceof mt?Ne:(n=mt(e))?(e=n,Ne):xn)(t,e)}function Fa(t){return function(){this.removeAttribute(t)}}function Xa(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Ha(t,e,n){var r,i=n+"",o;return function(){var a=this.getAttribute(t);return a===i?null:a===r?o:o=e(r=a,n)}}function Ya(t,e,n){var r,i=n+"",o;return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===r?o:o=e(r=a,n)}}function Va(t,e,n){var r,i,o;return function(){var a,u=n(this),s;return u==null?void this.removeAttribute(t):(a=this.getAttribute(t),s=u+"",a===s?null:a===r&&s===i?o:(i=s,o=e(r=a,u)))}}function Ga(t,e,n){var r,i,o;return function(){var a,u=n(this),s;return u==null?void this.removeAttributeNS(t.space,t.local):(a=this.getAttributeNS(t.space,t.local),s=u+"",a===s?null:a===r&&s===i?o:(i=s,o=e(r=a,u)))}}function pi(t,e){var n=lt(t),r=n==="transform"?wn:$e;return this.attrTween(t,typeof e=="function"?(n.local?Ga:Va)(n,r,zt(this,"attr."+t,e)):e==null?(n.local?Xa:Fa)(n):(n.local?Ya:Ha)(n,r,e))}function Ka(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Ua(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Wa(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Ua(t,o)),n}return i._value=e,i}function Za(t,e){var n,r;function i(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Ka(t,o)),n}return i._value=e,i}function hi(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var r=lt(t);return this.tween(n,(r.local?Wa:Za)(r,e))}function Qa(t,e){return function(){Qt(this,t).delay=+e.apply(this,arguments)}}function Ja(t,e){return e=+e,function(){Qt(this,t).delay=e}}function mi(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Qa:Ja)(e,t)):L(this.node(),e).delay}function ja(t,e){return function(){X(this,t).duration=+e.apply(this,arguments)}}function tu(t,e){return e=+e,function(){X(this,t).duration=e}}function di(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?ja:tu)(e,t)):L(this.node(),e).duration}function eu(t,e){if(typeof e!="function")throw new Error;return function(){X(this,t).ease=e}}function gi(t){var e=this._id;return arguments.length?this.each(eu(e,t)):L(this.node(),e).ease}function nu(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;X(this,t).ease=n}}function xi(t){if(typeof t!="function")throw new Error;return this.each(nu(this._id,t))}function vi(t){typeof t!="function"&&(t=Lt(t));for(var e=this._groups,n=e.length,r=new Array(n),i=0;i<n;++i)for(var o=e[i],a=o.length,u=r[i]=[],s,l=0;l<a;++l)(s=o[l])&&t.call(s,s.__data__,l,o)&&u.push(s);return new V(r,this._parents,this._name,this._id)}function yi(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,i=n.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var s=e[u],l=n[u],f=s.length,h=a[u]=new Array(f),c,p=0;p<f;++p)(c=s[p]||l[p])&&(h[p]=c);for(;u<r;++u)a[u]=e[u];return new V(a,this._parents,this._name,this._id)}function ru(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function iu(t,e,n){var r,i,o=ru(e)?Qt:X;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(e,n),a.on=i}}function wi(t,e){var n=this._id;return arguments.length<2?L(this.node(),n).on.on(t):this.each(iu(n,t,e))}function ou(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function _i(){return this.on("end.remove",ou(this._id))}function bi(t){var e=this._name,n=this._id;typeof t!="function"&&(t=wt(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u=r[a],s=u.length,l=o[a]=new Array(s),f,h,c=0;c<s;++c)(f=u[c])&&(h=t.call(f,f.__data__,c,u))&&("__data__"in f&&(h.__data__=f.__data__),l[c]=h,dt(l[c],e,n,c,l,L(f,n)));return new V(o,this._parents,e,n)}function Ei(t){var e=this._name,n=this._id;typeof t!="function"&&(t=$t(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var s=r[u],l=s.length,f,h=0;h<l;++h)if(f=s[h]){for(var c=t.call(f,f.__data__,h,s),p,m=L(f,n),g=0,x=c.length;g<x;++g)(p=c[g])&&dt(p,e,n,g,c,m);o.push(c),a.push(f)}return new V(o,a,e,n)}var au=ct.prototype.constructor;function Si(){return new au(this._groups,this._parents)}function uu(t,e){var n,r,i;return function(){var o=ht(this,t),a=(this.style.removeProperty(t),ht(this,t));return o===a?null:o===n&&a===r?i:i=e(n=o,r=a)}}function Ai(t){return function(){this.style.removeProperty(t)}}function fu(t,e,n){var r,i=n+"",o;return function(){var a=ht(this,t);return a===i?null:a===r?o:o=e(r=a,n)}}function su(t,e,n){var r,i,o;return function(){var a=ht(this,t),u=n(this),s=u+"";return u==null&&(s=u=(this.style.removeProperty(t),ht(this,t))),a===s?null:a===r&&s===i?o:(i=s,o=e(r=a,u))}}function lu(t,e){var n,r,i,o="style."+e,a="end."+o,u;return function(){var s=X(this,t),l=s.on,f=s.value[o]==null?u||(u=Ai(e)):void 0;(l!==n||i!==f)&&(r=(n=l).copy()).on(a,i=f),s.on=r}}function Ni(t,e,n){var r=(t+="")=="transform"?yn:$e;return e==null?this.styleTween(t,uu(t,r)).on("end.style."+t,Ai(t)):typeof e=="function"?this.styleTween(t,su(t,r,zt(this,"style."+t,e))).each(lu(this._id,t)):this.styleTween(t,fu(t,r,e),n).on("end.style."+t,null)}function cu(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function pu(t,e,n){var r,i;function o(){var a=e.apply(this,arguments);return a!==i&&(r=(i=a)&&cu(t,a,n)),r}return o._value=e,o}function Ii(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,pu(t,e,n==null?"":n))}function hu(t){return function(){this.textContent=t}}function mu(t){return function(){var e=t(this);this.textContent=e==null?"":e}}function Ri(t){return this.tween("text",typeof t=="function"?mu(zt(this,"text",t)):hu(t==null?"":t+""))}function du(t){return function(e){this.textContent=t.call(this,e)}}function gu(t){var e,n;function r(){var i=t.apply(this,arguments);return i!==n&&(e=(n=i)&&du(i)),e}return r._value=t,r}function Mi(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,gu(t))}function zi(){for(var t=this._name,e=this._id,n=Le(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a=r[o],u=a.length,s,l=0;l<u;++l)if(s=a[l]){var f=L(s,e);dt(s,t,n,l,a,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new V(r,this._parents,t,n)}function Ci(){var t,e,n=this,r=n._id,i=n.size();return new Promise(function(o,a){var u={value:a},s={value:function(){--i===0&&o()}};n.each(function(){var l=X(this,r),f=l.on;f!==t&&(e=(t=f).copy(),e._.cancel.push(u),e._.interrupt.push(u),e._.end.push(s)),l.on=e}),i===0&&o()})}var xu=0;function V(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function Ti(t){return ct().transition(t)}function Le(){return++xu}var pt=ct.prototype;V.prototype=Ti.prototype={constructor:V,select:bi,selectAll:Ei,selectChild:pt.selectChild,selectChildren:pt.selectChildren,filter:vi,merge:yi,selection:Si,transition:zi,call:pt.call,nodes:pt.nodes,node:pt.node,size:pt.size,empty:pt.empty,each:pt.each,on:wi,attr:pi,attrTween:hi,style:Ni,styleTween:Ii,text:Ri,textTween:Mi,remove:_i,tween:ci,delay:mi,duration:di,ease:gi,easeVarying:xi,end:Ci,[Symbol.iterator]:pt[Symbol.iterator]};function Be(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var vu={time:null,delay:0,duration:250,ease:Be};function yu(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function ki(t){var e,n;t instanceof V?(e=t._id,t=t._name):(e=Le(),(n=vu).time=Wt(),t=t==null?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a=r[o],u=a.length,s,l=0;l<u;++l)(s=a[l])&&dt(s,t,e,l,a,n||yu(s,e));return new V(r,this._parents,t,e)}ct.prototype.interrupt=li;ct.prototype.transition=ki;var{abs:Up,max:Wp,min:Zp}=Math;function Pi(t){return[+t[0],+t[1]]}function wu(t){return[Pi(t[0]),Pi(t[1])]}var Qp={name:"x",handles:["w","e"].map(bn),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Jp={name:"y",handles:["n","s"].map(bn),input:function(t,e){return t==null?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},jp={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(bn),input:function(t){return t==null?null:wu(t)},output:function(t){return t}};function bn(t){return{type:t}}function _u(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);if(!(t.status===204||t.status===205))return t.json()}function En(t,e){return fetch(t,e).then(_u)}var w=1e-6,Oi=1e-12,E=Math.PI,G=E/2,Sn=E/4,H=E*2,K=180/E,$=E/180,M=Math.abs,qi=Math.atan,nt=Math.atan2,z=Math.cos;var R=Math.sin,Ct=Math.sign||function(t){return t>0?1:t<0?-1:0},Y=Math.sqrt;function Di(t){return t>1?0:t<-1?E:Math.acos(t)}function J(t){return t>1?G:t<-1?-G:Math.asin(t)}function F(){}function Fe(t,e){t&&Li.hasOwnProperty(t.type)&&Li[t.type](t,e)}var $i={Feature:function(t,e){Fe(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,i=n.length;++r<i;)Fe(n[r].geometry,e)}},Li={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){An(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)An(n[r],e,0)},Polygon:function(t,e){Bi(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)Bi(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,i=n.length;++r<i;)Fe(n[r],e)}};function An(t,e,n){var r=-1,i=t.length-n,o;for(e.lineStart();++r<i;)o=t[r],e.point(o[0],o[1],o[2]);e.lineEnd()}function Bi(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)An(t[n],e,1);e.polygonEnd()}function gt(t,e){t&&$i.hasOwnProperty(t.type)?$i[t.type](t,e):Fe(t,e)}function Jt(t){return[nt(t[1],t[0]),J(t[2])]}function ot(t){var e=t[0],n=t[1],r=z(n);return[r*z(e),r*R(e),R(n)]}function jt(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function Tt(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function Xe(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function te(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function ee(t){var e=Y(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}function ne(t,e){function n(r,i){return r=t(r,i),e(r[0],r[1])}return t.invert&&e.invert&&(n.invert=function(r,i){return r=e.invert(r,i),r&&t.invert(r[0],r[1])}),n}function Nn(t,e){return[M(t)>E?t+Math.round(-t/H)*H:t,e]}Nn.invert=Nn;function Yi(t,e,n){return(t%=H)?e||n?ne(Xi(t),Hi(e,n)):Xi(t):e||n?Hi(e,n):Nn}function Fi(t){return function(e,n){return e+=t,[e>E?e-H:e<-E?e+H:e,n]}}function Xi(t){var e=Fi(t);return e.invert=Fi(-t),e}function Hi(t,e){var n=z(t),r=R(t),i=z(e),o=R(e);function a(u,s){var l=z(s),f=z(u)*l,h=R(u)*l,c=R(s),p=c*n+f*r;return[nt(h*i-p*o,f*n-c*r),J(p*i+h*o)]}return a.invert=function(u,s){var l=z(s),f=z(u)*l,h=R(u)*l,c=R(s),p=c*i-h*o;return[nt(h*i+c*o,f*n+p*r),J(p*n-f*r)]},a}function Gi(t,e,n,r,i,o){if(!!n){var a=z(e),u=R(e),s=r*n;i==null?(i=e+r*H,o=e-s/2):(i=Vi(a,i),o=Vi(a,o),(r>0?i<o:i>o)&&(i+=r*H));for(var l,f=i;r>0?f>o:f<o;f-=s)l=Jt([a,-u*z(f),-u*R(f)]),t.point(l[0],l[1])}}function Vi(t,e){e=ot(e),e[0]-=t,ee(e);var n=Di(-e[1]);return((-e[2]<0?-n:n)+H-w)%H}function He(){var t=[],e;return{point:function(n,r,i){e.push([n,r,i])},lineStart:function(){t.push(e=[])},lineEnd:F,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}}function kt(t,e){return M(t[0]-e[0])<w&&M(t[1]-e[1])<w}function Ye(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function Ve(t,e,n,r,i){var o=[],a=[],u,s;if(t.forEach(function(m){if(!((g=m.length-1)<=0)){var g,x=m[0],A=m[g],y;if(kt(x,A)){if(!x[2]&&!A[2]){for(i.lineStart(),u=0;u<g;++u)i.point((x=m[u])[0],x[1]);i.lineEnd();return}A[0]+=2*w}o.push(y=new Ye(x,m,null,!0)),a.push(y.o=new Ye(x,null,y,!1)),o.push(y=new Ye(A,m,null,!1)),a.push(y.o=new Ye(A,null,y,!0))}}),!!o.length){for(a.sort(e),Ki(o),Ki(a),u=0,s=a.length;u<s;++u)a[u].e=n=!n;for(var l=o[0],f,h;;){for(var c=l,p=!0;c.v;)if((c=c.n)===l)return;f=c.z,i.lineStart();do{if(c.v=c.o.v=!0,c.e){if(p)for(u=0,s=f.length;u<s;++u)i.point((h=f[u])[0],h[1]);else r(c.x,c.n.x,1,i);c=c.n}else{if(p)for(f=c.p.z,u=f.length-1;u>=0;--u)i.point((h=f[u])[0],h[1]);else r(c.x,c.p.x,-1,i);c=c.p}c=c.o,f=c.z,p=!p}while(!c.v);i.lineEnd()}}}function Ki(t){if(!!(e=t.length)){for(var e,n=0,r=t[0],i;++n<e;)r.n=i=t[n],i.p=r,r=i;r.n=i=t[0],i.p=r}}function In(t){return M(t[0])<=E?t[0]:Ct(t[0])*((M(t[0])+E)%H-E)}function Ui(t,e){var n=In(e),r=e[1],i=R(r),o=[R(n),-z(n),0],a=0,u=0,s=new Q;i===1?r=G+w:i===-1&&(r=-G-w);for(var l=0,f=t.length;l<f;++l)if(!!(c=(h=t[l]).length))for(var h,c,p=h[c-1],m=In(p),g=p[1]/2+Sn,x=R(g),A=z(g),y=0;y<c;++y,m=v,x=N,A=k,p=_){var _=h[y],v=In(_),S=_[1]/2+Sn,N=R(S),k=z(S),C=v-m,T=C>=0?1:-1,O=T*C,b=O>E,U=x*N;if(s.add(nt(U*T*R(O),A*k+U*z(O))),a+=b?C+T*H:C,b^m>=n^v>=n){var D=Tt(ot(p),ot(_));ee(D);var P=Tt(o,D);ee(P);var d=(b^C>=0?-1:1)*J(P[2]);(r>d||r===d&&(D[0]||D[1]))&&(u+=b^C>=0?1:-1)}}return(a<-w||a<w&&s<-Oi)^u&1}function Ge(t,e,n,r){return function(i){var o=e(i),a=He(),u=e(a),s=!1,l,f,h,c={point:p,lineStart:g,lineEnd:x,polygonStart:function(){c.point=A,c.lineStart=y,c.lineEnd=_,f=[],l=[]},polygonEnd:function(){c.point=p,c.lineStart=g,c.lineEnd=x,f=Nt(f);var v=Ui(l,r);f.length?(s||(i.polygonStart(),s=!0),Ve(f,Eu,v,n,i)):v&&(s||(i.polygonStart(),s=!0),i.lineStart(),n(null,null,1,i),i.lineEnd()),s&&(i.polygonEnd(),s=!1),f=l=null},sphere:function(){i.polygonStart(),i.lineStart(),n(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function p(v,S){t(v,S)&&i.point(v,S)}function m(v,S){o.point(v,S)}function g(){c.point=m,o.lineStart()}function x(){c.point=p,o.lineEnd()}function A(v,S){h.push([v,S]),u.point(v,S)}function y(){u.lineStart(),h=[]}function _(){A(h[0][0],h[0][1]),u.lineEnd();var v=u.clean(),S=a.result(),N,k=S.length,C,T,O;if(h.pop(),l.push(h),h=null,!!k){if(v&1){if(T=S[0],(C=T.length-1)>0){for(s||(i.polygonStart(),s=!0),i.lineStart(),N=0;N<C;++N)i.point((O=T[N])[0],O[1]);i.lineEnd()}return}k>1&&v&2&&S.push(S.pop().concat(S.shift())),f.push(S.filter(bu))}}return c}}function bu(t){return t.length>1}function Eu(t,e){return((t=t.x)[0]<0?t[1]-G-w:G-t[1])-((e=e.x)[0]<0?e[1]-G-w:G-e[1])}var Rn=Ge(function(){return!0},Su,Nu,[-E,-G]);function Su(t){var e=NaN,n=NaN,r=NaN,i;return{lineStart:function(){t.lineStart(),i=1},point:function(o,a){var u=o>0?E:-E,s=M(o-e);M(s-E)<w?(t.point(e,n=(n+a)/2>0?G:-G),t.point(r,n),t.lineEnd(),t.lineStart(),t.point(u,n),t.point(o,n),i=0):r!==u&&s>=E&&(M(e-r)<w&&(e-=r*w),M(o-u)<w&&(o-=u*w),n=Au(e,n,o,a),t.point(r,n),t.lineEnd(),t.lineStart(),t.point(u,n),i=0),t.point(e=o,n=a),r=u},lineEnd:function(){t.lineEnd(),e=n=NaN},clean:function(){return 2-i}}}function Au(t,e,n,r){var i,o,a=R(t-n);return M(a)>w?qi((R(e)*(o=z(r))*R(n)-R(r)*(i=z(e))*R(t))/(i*o*a)):(e+r)/2}function Nu(t,e,n,r){var i;if(t==null)i=n*G,r.point(-E,i),r.point(0,i),r.point(E,i),r.point(E,0),r.point(E,-i),r.point(0,-i),r.point(-E,-i),r.point(-E,0),r.point(-E,i);else if(M(t[0]-e[0])>w){var o=t[0]<e[0]?E:-E;i=n*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(e[0],e[1])}function Wi(t){var e=z(t),n=6*$,r=e>0,i=M(e)>w;function o(f,h,c,p){Gi(p,t,n,c,f,h)}function a(f,h){return z(f)*z(h)>e}function u(f){var h,c,p,m,g;return{lineStart:function(){m=p=!1,g=1},point:function(x,A){var y=[x,A],_,v=a(x,A),S=r?v?0:l(x,A):v?l(x+(x<0?E:-E),A):0;if(!h&&(m=p=v)&&f.lineStart(),v!==p&&(_=s(h,y),(!_||kt(h,_)||kt(y,_))&&(y[2]=1)),v!==p)g=0,v?(f.lineStart(),_=s(y,h),f.point(_[0],_[1])):(_=s(h,y),f.point(_[0],_[1],2),f.lineEnd()),h=_;else if(i&&h&&r^v){var N;!(S&c)&&(N=s(y,h,!0))&&(g=0,r?(f.lineStart(),f.point(N[0][0],N[0][1]),f.point(N[1][0],N[1][1]),f.lineEnd()):(f.point(N[1][0],N[1][1]),f.lineEnd(),f.lineStart(),f.point(N[0][0],N[0][1],3)))}v&&(!h||!kt(h,y))&&f.point(y[0],y[1]),h=y,p=v,c=S},lineEnd:function(){p&&f.lineEnd(),h=null},clean:function(){return g|(m&&p)<<1}}}function s(f,h,c){var p=ot(f),m=ot(h),g=[1,0,0],x=Tt(p,m),A=jt(x,x),y=x[0],_=A-y*y;if(!_)return!c&&f;var v=e*A/_,S=-e*y/_,N=Tt(g,x),k=te(g,v),C=te(x,S);Xe(k,C);var T=N,O=jt(k,T),b=jt(T,T),U=O*O-b*(jt(k,k)-1);if(!(U<0)){var D=Y(U),P=te(T,(-O-D)/b);if(Xe(P,k),P=Jt(P),!c)return P;var d=f[0],I=h[0],B=f[1],W=h[1],j;I<d&&(j=d,d=I,I=j);var Dt=I-d,ft=M(Dt-E)<w,yt=ft||Dt<w;if(!ft&&W<B&&(j=B,B=W,W=j),yt?ft?B+W>0^P[1]<(M(P[0]-d)<w?B:W):B<=P[1]&&P[1]<=W:Dt>E^(d<=P[0]&&P[0]<=I)){var st=te(T,(-O+D)/b);return Xe(st,k),[P,Jt(st)]}}}function l(f,h){var c=r?t:E-t,p=0;return f<-c?p|=1:f>c&&(p|=2),h<-c?p|=4:h>c&&(p|=8),p}return Ge(a,u,o,r?[0,-t]:[-E,t-E])}function Zi(t,e,n,r,i,o){var a=t[0],u=t[1],s=e[0],l=e[1],f=0,h=1,c=s-a,p=l-u,m;if(m=n-a,!(!c&&m>0)){if(m/=c,c<0){if(m<f)return;m<h&&(h=m)}else if(c>0){if(m>h)return;m>f&&(f=m)}if(m=i-a,!(!c&&m<0)){if(m/=c,c<0){if(m>h)return;m>f&&(f=m)}else if(c>0){if(m<f)return;m<h&&(h=m)}if(m=r-u,!(!p&&m>0)){if(m/=p,p<0){if(m<f)return;m<h&&(h=m)}else if(p>0){if(m>h)return;m>f&&(f=m)}if(m=o-u,!(!p&&m<0)){if(m/=p,p<0){if(m>h)return;m>f&&(f=m)}else if(p>0){if(m<f)return;m<h&&(h=m)}return f>0&&(t[0]=a+f*c,t[1]=u+f*p),h<1&&(e[0]=a+h*c,e[1]=u+h*p),!0}}}}}var re=1e9,Ke=-re;function Mn(t,e,n,r){function i(l,f){return t<=l&&l<=n&&e<=f&&f<=r}function o(l,f,h,c){var p=0,m=0;if(l==null||(p=a(l,h))!==(m=a(f,h))||s(l,f)<0^h>0)do c.point(p===0||p===3?t:n,p>1?r:e);while((p=(p+h+4)%4)!==m);else c.point(f[0],f[1])}function a(l,f){return M(l[0]-t)<w?f>0?0:3:M(l[0]-n)<w?f>0?2:1:M(l[1]-e)<w?f>0?1:0:f>0?3:2}function u(l,f){return s(l.x,f.x)}function s(l,f){var h=a(l,1),c=a(f,1);return h!==c?h-c:h===0?f[1]-l[1]:h===1?l[0]-f[0]:h===2?l[1]-f[1]:f[0]-l[0]}return function(l){var f=l,h=He(),c,p,m,g,x,A,y,_,v,S,N,k={point:C,lineStart:U,lineEnd:D,polygonStart:O,polygonEnd:b};function C(d,I){i(d,I)&&f.point(d,I)}function T(){for(var d=0,I=0,B=p.length;I<B;++I)for(var W=p[I],j=1,Dt=W.length,ft=W[0],yt,st,he=ft[0],At=ft[1];j<Dt;++j)yt=he,st=At,ft=W[j],he=ft[0],At=ft[1],st<=r?At>r&&(he-yt)*(r-st)>(At-st)*(t-yt)&&++d:At<=r&&(he-yt)*(r-st)<(At-st)*(t-yt)&&--d;return d}function O(){f=h,c=[],p=[],N=!0}function b(){var d=T(),I=N&&d,B=(c=Nt(c)).length;(I||B)&&(l.polygonStart(),I&&(l.lineStart(),o(null,null,1,l),l.lineEnd()),B&&Ve(c,u,d,o,l),l.polygonEnd()),f=l,c=p=m=null}function U(){k.point=P,p&&p.push(m=[]),S=!0,v=!1,y=_=NaN}function D(){c&&(P(g,x),A&&v&&h.rejoin(),c.push(h.result())),k.point=C,v&&f.lineEnd()}function P(d,I){var B=i(d,I);if(p&&m.push([d,I]),S)g=d,x=I,A=B,S=!1,B&&(f.lineStart(),f.point(d,I));else if(B&&v)f.point(d,I);else{var W=[y=Math.max(Ke,Math.min(re,y)),_=Math.max(Ke,Math.min(re,_))],j=[d=Math.max(Ke,Math.min(re,d)),I=Math.max(Ke,Math.min(re,I))];Zi(W,j,t,e,n,r)?(v||(f.lineStart(),f.point(W[0],W[1])),f.point(j[0],j[1]),B||f.lineEnd(),N=!1):B&&(f.lineStart(),f.point(d,I),N=!1)}y=d,_=I,v=B}return k}}var ie=t=>t;var zn=new Q,Cn=new Q,Qi,Ji,Tn,kn,xt={point:F,lineStart:F,lineEnd:F,polygonStart:function(){xt.lineStart=Iu,xt.lineEnd=Mu},polygonEnd:function(){xt.lineStart=xt.lineEnd=xt.point=F,zn.add(M(Cn)),Cn=new Q},result:function(){var t=zn/2;return zn=new Q,t}};function Iu(){xt.point=Ru}function Ru(t,e){xt.point=ji,Qi=Tn=t,Ji=kn=e}function ji(t,e){Cn.add(kn*t-Tn*e),Tn=t,kn=e}function Mu(){ji(Qi,Ji)}var Pn=xt;var Pt=1/0,Ue=Pt,oe=-Pt,We=oe,zu={point:Cu,lineStart:F,lineEnd:F,polygonStart:F,polygonEnd:F,result:function(){var t=[[Pt,Ue],[oe,We]];return oe=We=-(Ue=Pt=1/0),t}};function Cu(t,e){t<Pt&&(Pt=t),t>oe&&(oe=t),e<Ue&&(Ue=e),e>We&&(We=e)}var Ot=zu;var On=0,qn=0,ae=0,Ze=0,Qe=0,qt=0,Dn=0,$n=0,ue=0,no,ro,at,ut,rt={point:St,lineStart:to,lineEnd:eo,polygonStart:function(){rt.lineStart=Pu,rt.lineEnd=Ou},polygonEnd:function(){rt.point=St,rt.lineStart=to,rt.lineEnd=eo},result:function(){var t=ue?[Dn/ue,$n/ue]:qt?[Ze/qt,Qe/qt]:ae?[On/ae,qn/ae]:[NaN,NaN];return On=qn=ae=Ze=Qe=qt=Dn=$n=ue=0,t}};function St(t,e){On+=t,qn+=e,++ae}function to(){rt.point=Tu}function Tu(t,e){rt.point=ku,St(at=t,ut=e)}function ku(t,e){var n=t-at,r=e-ut,i=Y(n*n+r*r);Ze+=i*(at+t)/2,Qe+=i*(ut+e)/2,qt+=i,St(at=t,ut=e)}function eo(){rt.point=St}function Pu(){rt.point=qu}function Ou(){io(no,ro)}function qu(t,e){rt.point=io,St(no=at=t,ro=ut=e)}function io(t,e){var n=t-at,r=e-ut,i=Y(n*n+r*r);Ze+=i*(at+t)/2,Qe+=i*(ut+e)/2,qt+=i,i=ut*t-at*e,Dn+=i*(at+t),$n+=i*(ut+e),ue+=i*3,St(at=t,ut=e)}var Ln=rt;function Je(t){this._context=t}Je.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:{this._context.moveTo(t,e),this._point=1;break}case 1:{this._context.lineTo(t,e);break}default:{this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,H);break}}},result:F};var Fn=new Q,Bn,oo,ao,fe,se,je={point:F,lineStart:function(){je.point=Du},lineEnd:function(){Bn&&uo(oo,ao),je.point=F},polygonStart:function(){Bn=!0},polygonEnd:function(){Bn=null},result:function(){var t=+Fn;return Fn=new Q,t}};function Du(t,e){je.point=uo,oo=fe=t,ao=se=e}function uo(t,e){fe-=t,se-=e,Fn.add(Y(fe*fe+se*se)),fe=t,se=e}var Xn=je;function tn(){this._string=[]}tn.prototype={_radius:4.5,_circle:fo(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._string.push("Z"),this._point=NaN},point:function(t,e){switch(this._point){case 0:{this._string.push("M",t,",",e),this._point=1;break}case 1:{this._string.push("L",t,",",e);break}default:{this._circle==null&&(this._circle=fo(this._radius)),this._string.push("M",t,",",e,this._circle);break}}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}else return null}};function fo(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}function Hn(t,e){var n=4.5,r,i;function o(a){return a&&(typeof n=="function"&&i.pointRadius(+n.apply(this,arguments)),gt(a,r(i))),i.result()}return o.area=function(a){return gt(a,r(Pn)),Pn.result()},o.measure=function(a){return gt(a,r(Xn)),Xn.result()},o.bounds=function(a){return gt(a,r(Ot)),Ot.result()},o.centroid=function(a){return gt(a,r(Ln)),Ln.result()},o.projection=function(a){return arguments.length?(r=a==null?(t=null,ie):(t=a).stream,o):t},o.context=function(a){return arguments.length?(i=a==null?(e=null,new tn):new Je(e=a),typeof n!="function"&&i.pointRadius(n),o):e},o.pointRadius=function(a){return arguments.length?(n=typeof a=="function"?a:(i.pointRadius(+a),+a),o):n},o.projection(t).context(e)}function le(t){return function(e){var n=new Yn;for(var r in t)n[r]=t[r];return n.stream=e,n}}function Yn(){}Yn.prototype={constructor:Yn,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function Vn(t,e,n){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),r!=null&&t.clipExtent(null),gt(n,t.stream(Ot)),e(Ot.result()),r!=null&&t.clipExtent(r),t}function ce(t,e,n){return Vn(t,function(r){var i=e[1][0]-e[0][0],o=e[1][1]-e[0][1],a=Math.min(i/(r[1][0]-r[0][0]),o/(r[1][1]-r[0][1])),u=+e[0][0]+(i-a*(r[1][0]+r[0][0]))/2,s=+e[0][1]+(o-a*(r[1][1]+r[0][1]))/2;t.scale(150*a).translate([u,s])},n)}function en(t,e,n){return ce(t,[[0,0],e],n)}function nn(t,e,n){return Vn(t,function(r){var i=+e,o=i/(r[1][0]-r[0][0]),a=(i-o*(r[1][0]+r[0][0]))/2,u=-o*r[0][1];t.scale(150*o).translate([a,u])},n)}function rn(t,e,n){return Vn(t,function(r){var i=+e,o=i/(r[1][1]-r[0][1]),a=-o*r[0][0],u=(i-o*(r[1][1]+r[0][1]))/2;t.scale(150*o).translate([a,u])},n)}var so=16,$u=z(30*$);function Gn(t,e){return+e?Bu(t,e):Lu(t)}function Lu(t){return le({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}function Bu(t,e){function n(r,i,o,a,u,s,l,f,h,c,p,m,g,x){var A=l-r,y=f-i,_=A*A+y*y;if(_>4*e&&g--){var v=a+c,S=u+p,N=s+m,k=Y(v*v+S*S+N*N),C=J(N/=k),T=M(M(N)-1)<w||M(o-h)<w?(o+h)/2:nt(S,v),O=t(T,C),b=O[0],U=O[1],D=b-r,P=U-i,d=y*D-A*P;(d*d/_>e||M((A*D+y*P)/_-.5)>.3||a*c+u*p+s*m<$u)&&(n(r,i,o,a,u,s,b,U,T,v/=k,S/=k,N,g,x),x.point(b,U),n(b,U,T,v,S,N,l,f,h,c,p,m,g,x))}}return function(r){var i,o,a,u,s,l,f,h,c,p,m,g,x={point:A,lineStart:y,lineEnd:v,polygonStart:function(){r.polygonStart(),x.lineStart=S},polygonEnd:function(){r.polygonEnd(),x.lineStart=y}};function A(C,T){C=t(C,T),r.point(C[0],C[1])}function y(){h=NaN,x.point=_,r.lineStart()}function _(C,T){var O=ot([C,T]),b=t(C,T);n(h,c,f,p,m,g,h=b[0],c=b[1],f=C,p=O[0],m=O[1],g=O[2],so,r),r.point(h,c)}function v(){x.point=A,r.lineEnd()}function S(){y(),x.point=N,x.lineEnd=k}function N(C,T){_(i=C,T),o=h,a=c,u=p,s=m,l=g,x.point=_}function k(){n(h,c,f,p,m,g,o,a,i,u,s,l,so,r),x.lineEnd=v,v()}return x}}var Fu=le({point:function(t,e){this.stream.point(t*$,e*$)}});function Xu(t){return le({point:function(e,n){var r=t(e,n);return this.stream.point(r[0],r[1])}})}function Hu(t,e,n,r,i){function o(a,u){return a*=r,u*=i,[e+t*a,n-t*u]}return o.invert=function(a,u){return[(a-e)/t*r,(n-u)/t*i]},o}function lo(t,e,n,r,i,o){if(!o)return Hu(t,e,n,r,i);var a=z(o),u=R(o),s=a*t,l=u*t,f=a/t,h=u/t,c=(u*n-a*e)/t,p=(u*e+a*n)/t;function m(g,x){return g*=r,x*=i,[s*g-l*x+e,n-l*g-s*x]}return m.invert=function(g,x){return[r*(f*g-h*x+c),i*(p-h*g-f*x)]},m}function co(t){var e,n=150,r=480,i=250,o=0,a=0,u=0,s=0,l=0,f,h=0,c=1,p=1,m=null,g=Rn,x=null,A,y,_,v=ie,S=.5,N,k,C,T,O;function b(d){return C(d[0]*$,d[1]*$)}function U(d){return d=C.invert(d[0],d[1]),d&&[d[0]*K,d[1]*K]}b.stream=function(d){return T&&O===d?T:T=Fu(Xu(f)(g(N(v(O=d)))))},b.preclip=function(d){return arguments.length?(g=d,m=void 0,P()):g},b.postclip=function(d){return arguments.length?(v=d,x=A=y=_=null,P()):v},b.clipAngle=function(d){return arguments.length?(g=+d?Wi(m=d*$):(m=null,Rn),P()):m*K},b.clipExtent=function(d){return arguments.length?(v=d==null?(x=A=y=_=null,ie):Mn(x=+d[0][0],A=+d[0][1],y=+d[1][0],_=+d[1][1]),P()):x==null?null:[[x,A],[y,_]]},b.scale=function(d){return arguments.length?(n=+d,D()):n},b.translate=function(d){return arguments.length?(r=+d[0],i=+d[1],D()):[r,i]},b.center=function(d){return arguments.length?(o=d[0]%360*$,a=d[1]%360*$,D()):[o*K,a*K]},b.rotate=function(d){return arguments.length?(u=d[0]%360*$,s=d[1]%360*$,l=d.length>2?d[2]%360*$:0,D()):[u*K,s*K,l*K]},b.angle=function(d){return arguments.length?(h=d%360*$,D()):h*K},b.reflectX=function(d){return arguments.length?(c=d?-1:1,D()):c<0},b.reflectY=function(d){return arguments.length?(p=d?-1:1,D()):p<0},b.precision=function(d){return arguments.length?(N=Gn(k,S=d*d),P()):Y(S)},b.fitExtent=function(d,I){return ce(b,d,I)},b.fitSize=function(d,I){return en(b,d,I)},b.fitWidth=function(d,I){return nn(b,d,I)},b.fitHeight=function(d,I){return rn(b,d,I)};function D(){var d=lo(n,0,0,c,p,h).apply(null,e(o,a)),I=lo(n,r-d[0],i-d[1],c,p,h);return f=Yi(u,s,l),k=ne(e,I),C=ne(f,k),N=Gn(k,S),P()}function P(){return T=O=null,b}return function(){return e=t.apply(this,arguments),b.invert=e.invert&&U,D()}}function po(t){var e=0,n=E/3,r=co(t),i=r(e,n);return i.parallels=function(o){return arguments.length?r(e=o[0]*$,n=o[1]*$):[e*K,n*K]},i}function ho(t){var e=z(t);function n(r,i){return[r*e,R(i)/e]}return n.invert=function(r,i){return[r/e,J(i*e)]},n}function Yu(t,e){var n=R(t),r=(n+R(e))/2;if(M(r)<w)return ho(t);var i=1+n*(2*r-n),o=Y(i)/r;function a(u,s){var l=Y(i-2*r*R(s))/r;return[l*R(u*=r),o-l*z(u)]}return a.invert=function(u,s){var l=o-s,f=nt(u,M(l))*Ct(l);return l*r<0&&(f-=E*Ct(u)*Ct(l)),[f/r,J((i-(u*u+l*l)*r*r)/(2*r))]},a}function pe(){return po(Yu).scale(155.424).center([0,33.6442])}function mo(){return pe().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function Vu(t){var e=t.length;return{point:function(n,r){for(var i=-1;++i<e;)t[i].point(n,r)},sphere:function(){for(var n=-1;++n<e;)t[n].sphere()},lineStart:function(){for(var n=-1;++n<e;)t[n].lineStart()},lineEnd:function(){for(var n=-1;++n<e;)t[n].lineEnd()},polygonStart:function(){for(var n=-1;++n<e;)t[n].polygonStart()},polygonEnd:function(){for(var n=-1;++n<e;)t[n].polygonEnd()}}}function Kn(){var t,e,n=mo(),r,i=pe().rotate([154,0]).center([-2,58.5]).parallels([55,65]),o,a=pe().rotate([157,0]).center([-3,19.9]).parallels([8,18]),u,s,l={point:function(c,p){s=[c,p]}};function f(c){var p=c[0],m=c[1];return s=null,r.point(p,m),s||(o.point(p,m),s)||(u.point(p,m),s)}f.invert=function(c){var p=n.scale(),m=n.translate(),g=(c[0]-m[0])/p,x=(c[1]-m[1])/p;return(x>=.12&&x<.234&&g>=-.425&&g<-.214?i:x>=.166&&x<.234&&g>=-.214&&g<-.115?a:n).invert(c)},f.stream=function(c){return t&&e===c?t:t=Vu([n.stream(e=c),i.stream(c),a.stream(c)])},f.precision=function(c){return arguments.length?(n.precision(c),i.precision(c),a.precision(c),h()):n.precision()},f.scale=function(c){return arguments.length?(n.scale(c),i.scale(c*.35),a.scale(c),f.translate(n.translate())):n.scale()},f.translate=function(c){if(!arguments.length)return n.translate();var p=n.scale(),m=+c[0],g=+c[1];return r=n.translate(c).clipExtent([[m-.455*p,g-.238*p],[m+.455*p,g+.238*p]]).stream(l),o=i.translate([m-.307*p,g+.201*p]).clipExtent([[m-.425*p+w,g+.12*p+w],[m-.214*p-w,g+.234*p-w]]).stream(l),u=a.translate([m-.205*p,g+.212*p]).clipExtent([[m-.214*p+w,g+.166*p+w],[m-.115*p-w,g+.234*p-w]]).stream(l),h()},f.fitExtent=function(c,p){return ce(f,c,p)},f.fitSize=function(c,p){return en(f,c,p)},f.fitWidth=function(c,p){return nn(f,c,p)},f.fitHeight=function(c,p){return rn(f,c,p)};function h(){return t=e=null,f}return f.scale(1070)}function vt(t,e,n){this.k=t,this.x=e,this.y=n}vt.prototype={constructor:vt,scale:function(t){return t===1?this:new vt(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new vt(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Un=new vt(1,0,0);Wn.prototype=vt.prototype;function Wn(t){for(;!t.__zoom;)if(!(t=t.parentNode))return Un;return t.__zoom}window.addEventListener("load",async()=>{let n=ln("svg").attr("width",800).attr("height",400),r=Kn().scale(800).translate([800/2,400/2]),o=await En(["./gz_2010_us_040_00_20m.json","./gz_2010_us_050_00_500k.json","./gz_2010_us_050_00_5m.json"][2]);n.append("g").selectAll("path").data(o.features).enter().append("path").attr("d",Hn().projection(r)).style("stroke","#fff")});})();
//# sourceMappingURL=data:application/json;base64,
