(()=>{var En={value:()=>{}};function ye(){for(var t=0,e=arguments.length,r={},n;t<e;++t){if(!(n=arguments[t]+"")||n in r||/[\s.]/.test(n))throw new Error("illegal type: "+n);r[n]=[]}return new _t(r)}function _t(t){this._=t}function kn(t,e){return t.trim().split(/^|\s+/).map(function(r){var n="",i=r.indexOf(".");if(i>=0&&(n=r.slice(i+1),r=r.slice(0,i)),r&&!e.hasOwnProperty(r))throw new Error("unknown type: "+r);return{type:r,name:n}})}_t.prototype=ye.prototype={constructor:_t,on:function(t,e){var r=this._,n=kn(t+"",r),i,o=-1,a=n.length;if(arguments.length<2){for(;++o<a;)if((i=(t=n[o]).type)&&(i=In(r[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<a;)if(i=(t=n[o]).type)r[i]=ge(r[i],t.name,e);else if(e==null)for(i in r)r[i]=ge(r[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var r in e)t[r]=e[r].slice();return new _t(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var r=new Array(i),n=0,i,o;n<i;++n)r[n]=arguments[n+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],n=0,i=o.length;n<i;++n)o[n].value.apply(e,r)},apply:function(t,e,r){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var n=this._[t],i=0,o=n.length;i<o;++i)n[i].value.apply(e,r)}};function In(t,e){for(var r=0,n=t.length,i;r<n;++r)if((i=t[r]).name===e)return i.value}function ge(t,e,r){for(var n=0,i=t.length;n<i;++n)if(t[n].name===e){t[n]=En,t=t.slice(0,n).concat(t.slice(n+1));break}return r!=null&&t.push({name:e,value:r}),t}var ot=ye;var wt="http://www.w3.org/1999/xhtml",Kt={svg:"http://www.w3.org/2000/svg",xhtml:wt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function H(t){var e=t+="",r=e.indexOf(":");return r>=0&&(e=t.slice(0,r))!=="xmlns"&&(t=t.slice(r+1)),Kt.hasOwnProperty(e)?{space:Kt[e],local:t}:t}function Mn(t){return function(){var e=this.ownerDocument,r=this.namespaceURI;return r===wt&&e.documentElement.namespaceURI===wt?e.createElement(t):e.createElementNS(r,t)}}function Tn(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function bt(t){var e=H(t);return(e.local?Tn:Mn)(e)}function Sn(){}function U(t){return t==null?Sn:function(){return this.querySelector(t)}}function ve(t){typeof t!="function"&&(t=U(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,u=n[i]=new Array(a),f,s,l=0;l<a;++l)(f=o[l])&&(s=t.call(f,f.__data__,l,o))&&("__data__"in f&&(s.__data__=f.__data__),u[l]=s);return new b(n,this._parents)}function Gt(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function zn(){return[]}function at(t){return t==null?zn:function(){return this.querySelectorAll(t)}}function Cn(t){return function(){return Gt(t.apply(this,arguments))}}function _e(t){typeof t=="function"?t=Cn(t):t=at(t);for(var e=this._groups,r=e.length,n=[],i=[],o=0;o<r;++o)for(var a=e[o],u=a.length,f,s=0;s<u;++s)(f=a[s])&&(n.push(t.call(f,f.__data__,s,a)),i.push(f));return new b(n,i)}function ut(t){return function(){return this.matches(t)}}function Nt(t){return function(e){return e.matches(t)}}var On=Array.prototype.find;function Dn(t){return function(){return On.call(this.children,t)}}function Rn(){return this.firstElementChild}function we(t){return this.select(t==null?Rn:Dn(typeof t=="function"?t:Nt(t)))}var $n=Array.prototype.filter;function Bn(){return Array.from(this.children)}function Xn(t){return function(){return $n.call(this.children,t)}}function be(t){return this.selectAll(t==null?Bn:Xn(typeof t=="function"?t:Nt(t)))}function Ne(t){typeof t!="function"&&(t=ut(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,u=n[i]=[],f,s=0;s<a;++s)(f=o[s])&&t.call(f,f.__data__,s,o)&&u.push(f);return new b(n,this._parents)}function At(t){return new Array(t.length)}function Ae(){return new b(this._enter||this._groups.map(At),this._parents)}function st(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}st.prototype={constructor:st,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function Ee(t){return function(){return t}}function Pn(t,e,r,n,i,o){for(var a=0,u,f=e.length,s=o.length;a<s;++a)(u=e[a])?(u.__data__=o[a],n[a]=u):r[a]=new st(t,o[a]);for(;a<f;++a)(u=e[a])&&(i[a]=u)}function Hn(t,e,r,n,i,o,a){var u,f,s=new Map,l=e.length,p=o.length,h=new Array(l),c;for(u=0;u<l;++u)(f=e[u])&&(h[u]=c=a.call(f,f.__data__,u,e)+"",s.has(c)?i[u]=f:s.set(c,f));for(u=0;u<p;++u)c=a.call(t,o[u],u,o)+"",(f=s.get(c))?(n[u]=f,f.__data__=o[u],s.delete(c)):r[u]=new st(t,o[u]);for(u=0;u<l;++u)(f=e[u])&&s.get(h[u])===f&&(i[u]=f)}function Ln(t){return t.__data__}function ke(t,e){if(!arguments.length)return Array.from(this,Ln);var r=e?Hn:Pn,n=this._parents,i=this._groups;typeof t!="function"&&(t=Ee(t));for(var o=i.length,a=new Array(o),u=new Array(o),f=new Array(o),s=0;s<o;++s){var l=n[s],p=i[s],h=p.length,c=Fn(t.call(l,l&&l.__data__,s,n)),g=c.length,d=u[s]=new Array(g),m=a[s]=new Array(g),x=f[s]=new Array(h);r(l,p,d,m,x,c,e);for(var y=0,_=0,v,w;y<g;++y)if(v=d[y]){for(y>=_&&(_=y+1);!(w=m[_])&&++_<g;);v._next=w||null}}return a=new b(a,n),a._enter=u,a._exit=f,a}function Fn(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Ie(){return new b(this._exit||this._groups.map(At),this._parents)}function Me(t,e,r){var n=this.enter(),i=this,o=this.exit();return typeof t=="function"?(n=t(n),n&&(n=n.selection())):n=n.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),r==null?o.remove():r(o),n&&i?n.merge(i).order():i}function Te(t){for(var e=t.selection?t.selection():t,r=this._groups,n=e._groups,i=r.length,o=n.length,a=Math.min(i,o),u=new Array(i),f=0;f<a;++f)for(var s=r[f],l=n[f],p=s.length,h=u[f]=new Array(p),c,g=0;g<p;++g)(c=s[g]||l[g])&&(h[g]=c);for(;f<i;++f)u[f]=r[f];return new b(u,this._parents)}function Se(){for(var t=this._groups,e=-1,r=t.length;++e<r;)for(var n=t[e],i=n.length-1,o=n[i],a;--i>=0;)(a=n[i])&&(o&&a.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(a,o),o=a);return this}function ze(t){t||(t=Yn);function e(p,h){return p&&h?t(p.__data__,h.__data__):!p-!h}for(var r=this._groups,n=r.length,i=new Array(n),o=0;o<n;++o){for(var a=r[o],u=a.length,f=i[o]=new Array(u),s,l=0;l<u;++l)(s=a[l])&&(f[l]=s);f.sort(e)}return new b(i,this._parents).order()}function Yn(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function Ce(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function Oe(){return Array.from(this)}function De(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length;i<o;++i){var a=n[i];if(a)return a}return null}function Re(){let t=0;for(let e of this)++t;return t}function $e(){return!this.node()}function Be(t){for(var e=this._groups,r=0,n=e.length;r<n;++r)for(var i=e[r],o=0,a=i.length,u;o<a;++o)(u=i[o])&&t.call(u,u.__data__,o,i);return this}function Vn(t){return function(){this.removeAttribute(t)}}function qn(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Kn(t,e){return function(){this.setAttribute(t,e)}}function Gn(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function Qn(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttribute(t):this.setAttribute(t,r)}}function Un(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,r)}}function Xe(t,e){var r=H(t);if(arguments.length<2){var n=this.node();return r.local?n.getAttributeNS(r.space,r.local):n.getAttribute(r)}return this.each((e==null?r.local?qn:Vn:typeof e=="function"?r.local?Un:Qn:r.local?Gn:Kn)(r,e))}function Et(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function Zn(t){return function(){this.style.removeProperty(t)}}function Wn(t,e,r){return function(){this.style.setProperty(t,e,r)}}function Jn(t,e,r){return function(){var n=e.apply(this,arguments);n==null?this.style.removeProperty(t):this.style.setProperty(t,n,r)}}function Pe(t,e,r){return arguments.length>1?this.each((e==null?Zn:typeof e=="function"?Jn:Wn)(t,e,r==null?"":r)):q(this.node(),t)}function q(t,e){return t.style.getPropertyValue(e)||Et(t).getComputedStyle(t,null).getPropertyValue(e)}function jn(t){return function(){delete this[t]}}function ti(t,e){return function(){this[t]=e}}function ei(t,e){return function(){var r=e.apply(this,arguments);r==null?delete this[t]:this[t]=r}}function He(t,e){return arguments.length>1?this.each((e==null?jn:typeof e=="function"?ei:ti)(t,e)):this.node()[t]}function Le(t){return t.trim().split(/^|\s+/)}function Qt(t){return t.classList||new Fe(t)}function Fe(t){this._node=t,this._names=Le(t.getAttribute("class")||"")}Fe.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Ye(t,e){for(var r=Qt(t),n=-1,i=e.length;++n<i;)r.add(e[n])}function Ve(t,e){for(var r=Qt(t),n=-1,i=e.length;++n<i;)r.remove(e[n])}function ri(t){return function(){Ye(this,t)}}function ni(t){return function(){Ve(this,t)}}function ii(t,e){return function(){(e.apply(this,arguments)?Ye:Ve)(this,t)}}function qe(t,e){var r=Le(t+"");if(arguments.length<2){for(var n=Qt(this.node()),i=-1,o=r.length;++i<o;)if(!n.contains(r[i]))return!1;return!0}return this.each((typeof e=="function"?ii:e?ri:ni)(r,e))}function oi(){this.textContent=""}function ai(t){return function(){this.textContent=t}}function ui(t){return function(){var e=t.apply(this,arguments);this.textContent=e==null?"":e}}function Ke(t){return arguments.length?this.each(t==null?oi:(typeof t=="function"?ui:ai)(t)):this.node().textContent}function si(){this.innerHTML=""}function fi(t){return function(){this.innerHTML=t}}function li(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e==null?"":e}}function Ge(t){return arguments.length?this.each(t==null?si:(typeof t=="function"?li:fi)(t)):this.node().innerHTML}function ci(){this.nextSibling&&this.parentNode.appendChild(this)}function Qe(){return this.each(ci)}function hi(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ue(){return this.each(hi)}function Ze(t){var e=typeof t=="function"?t:bt(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function pi(){return null}function We(t,e){var r=typeof t=="function"?t:bt(t),n=e==null?pi:typeof e=="function"?e:U(e);return this.select(function(){return this.insertBefore(r.apply(this,arguments),n.apply(this,arguments)||null)})}function mi(){var t=this.parentNode;t&&t.removeChild(this)}function Je(){return this.each(mi)}function di(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function xi(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function je(t){return this.select(t?xi:di)}function tr(t){return arguments.length?this.property("__data__",t):this.node().__data__}function gi(t){return function(e){t.call(this,e,this.__data__)}}function yi(t){return t.trim().split(/^|\s+/).map(function(e){var r="",n=e.indexOf(".");return n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),{type:e,name:r}})}function vi(t){return function(){var e=this.__on;if(!!e){for(var r=0,n=-1,i=e.length,o;r<i;++r)o=e[r],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++n]=o;++n?e.length=n:delete this.__on}}}function _i(t,e,r){return function(){var n=this.__on,i,o=gi(e);if(n){for(var a=0,u=n.length;a<u;++a)if((i=n[a]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=r),i.value=e;return}}this.addEventListener(t.type,o,r),i={type:t.type,name:t.name,value:e,listener:o,options:r},n?n.push(i):this.__on=[i]}}function er(t,e,r){var n=yi(t+""),i,o=n.length,a;if(arguments.length<2){var u=this.node().__on;if(u){for(var f=0,s=u.length,l;f<s;++f)for(i=0,l=u[f];i<o;++i)if((a=n[i]).type===l.type&&a.name===l.name)return l.value}return}for(u=e?_i:vi,i=0;i<o;++i)this.each(u(n[i],e,r));return this}function rr(t,e,r){var n=Et(t),i=n.CustomEvent;typeof i=="function"?i=new i(e,r):(i=n.document.createEvent("Event"),r?(i.initEvent(e,r.bubbles,r.cancelable),i.detail=r.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function wi(t,e){return function(){return rr(this,t,e)}}function bi(t,e){return function(){return rr(this,t,e.apply(this,arguments))}}function nr(t,e){return this.each((typeof e=="function"?bi:wi)(t,e))}function*ir(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length,a;i<o;++i)(a=n[i])&&(yield a)}var Ut=[null];function b(t,e){this._groups=t,this._parents=e}function or(){return new b([[document.documentElement]],Ut)}function Ni(){return this}b.prototype=or.prototype={constructor:b,select:ve,selectAll:_e,selectChild:we,selectChildren:be,filter:Ne,data:ke,enter:Ae,exit:Ie,join:Me,merge:Te,selection:Ni,order:Se,sort:ze,call:Ce,nodes:Oe,node:De,size:Re,empty:$e,each:Be,attr:Xe,style:Pe,property:He,classed:qe,text:Ke,html:Ge,raise:Qe,lower:Ue,append:Ze,insert:We,remove:Je,clone:je,datum:tr,on:er,dispatch:nr,[Symbol.iterator]:ir};var L=or;function Zt(t){return typeof t=="string"?new b([[document.querySelector(t)]],[document.documentElement]):new b([[t]],Ut)}function kt(t,e,r){t.prototype=e.prototype=r,r.constructor=t}function Wt(t,e){var r=Object.create(t.prototype);for(var n in e)r[n]=e[n];return r}function ct(){}var ft=.7,Tt=1/ft,tt="\\s*([+-]?\\d+)\\s*",lt="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",B="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Ai=/^#([0-9a-f]{3,8})$/,Ei=new RegExp(`^rgb\\(${tt},${tt},${tt}\\)$`),ki=new RegExp(`^rgb\\(${B},${B},${B}\\)$`),Ii=new RegExp(`^rgba\\(${tt},${tt},${tt},${lt}\\)$`),Mi=new RegExp(`^rgba\\(${B},${B},${B},${lt}\\)$`),Ti=new RegExp(`^hsl\\(${lt},${B},${B}\\)$`),Si=new RegExp(`^hsla\\(${lt},${B},${B},${lt}\\)$`),ar={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};kt(ct,K,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:ur,formatHex:ur,formatHex8:zi,formatHsl:Ci,formatRgb:sr,toString:sr});function ur(){return this.rgb().formatHex()}function zi(){return this.rgb().formatHex8()}function Ci(){return mr(this).formatHsl()}function sr(){return this.rgb().formatRgb()}function K(t){var e,r;return t=(t+"").trim().toLowerCase(),(e=Ai.exec(t))?(r=e[1].length,e=parseInt(e[1],16),r===6?fr(e):r===3?new z(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):r===8?It(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):r===4?It(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=Ei.exec(t))?new z(e[1],e[2],e[3],1):(e=ki.exec(t))?new z(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=Ii.exec(t))?It(e[1],e[2],e[3],e[4]):(e=Mi.exec(t))?It(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=Ti.exec(t))?hr(e[1],e[2]/100,e[3]/100,1):(e=Si.exec(t))?hr(e[1],e[2]/100,e[3]/100,e[4]):ar.hasOwnProperty(t)?fr(ar[t]):t==="transparent"?new z(NaN,NaN,NaN,0):null}function fr(t){return new z(t>>16&255,t>>8&255,t&255,1)}function It(t,e,r,n){return n<=0&&(t=e=r=NaN),new z(t,e,r,n)}function Oi(t){return t instanceof ct||(t=K(t)),t?(t=t.rgb(),new z(t.r,t.g,t.b,t.opacity)):new z}function et(t,e,r,n){return arguments.length===1?Oi(t):new z(t,e,r,n==null?1:n)}function z(t,e,r,n){this.r=+t,this.g=+e,this.b=+r,this.opacity=+n}kt(z,et,Wt(ct,{brighter(t){return t=t==null?Tt:Math.pow(Tt,t),new z(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?ft:Math.pow(ft,t),new z(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new z(W(this.r),W(this.g),W(this.b),St(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:lr,formatHex:lr,formatHex8:Di,formatRgb:cr,toString:cr}));function lr(){return`#${Z(this.r)}${Z(this.g)}${Z(this.b)}`}function Di(){return`#${Z(this.r)}${Z(this.g)}${Z(this.b)}${Z((isNaN(this.opacity)?1:this.opacity)*255)}`}function cr(){let t=St(this.opacity);return`${t===1?"rgb(":"rgba("}${W(this.r)}, ${W(this.g)}, ${W(this.b)}${t===1?")":`, ${t})`}`}function St(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function W(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function Z(t){return t=W(t),(t<16?"0":"")+t.toString(16)}function hr(t,e,r,n){return n<=0?t=e=r=NaN:r<=0||r>=1?t=e=NaN:e<=0&&(t=NaN),new R(t,e,r,n)}function mr(t){if(t instanceof R)return new R(t.h,t.s,t.l,t.opacity);if(t instanceof ct||(t=K(t)),!t)return new R;if(t instanceof R)return t;t=t.rgb();var e=t.r/255,r=t.g/255,n=t.b/255,i=Math.min(e,r,n),o=Math.max(e,r,n),a=NaN,u=o-i,f=(o+i)/2;return u?(e===o?a=(r-n)/u+(r<n)*6:r===o?a=(n-e)/u+2:a=(e-r)/u+4,u/=f<.5?o+i:2-o-i,a*=60):u=f>0&&f<1?0:a,new R(a,u,f,t.opacity)}function dr(t,e,r,n){return arguments.length===1?mr(t):new R(t,e,r,n==null?1:n)}function R(t,e,r,n){this.h=+t,this.s=+e,this.l=+r,this.opacity=+n}kt(R,dr,Wt(ct,{brighter(t){return t=t==null?Tt:Math.pow(Tt,t),new R(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?ft:Math.pow(ft,t),new R(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,r=this.l,n=r+(r<.5?r:1-r)*e,i=2*r-n;return new z(Jt(t>=240?t-240:t+120,i,n),Jt(t,i,n),Jt(t<120?t+240:t-120,i,n),this.opacity)},clamp(){return new R(pr(this.h),Mt(this.s),Mt(this.l),St(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let t=St(this.opacity);return`${t===1?"hsl(":"hsla("}${pr(this.h)}, ${Mt(this.s)*100}%, ${Mt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function pr(t){return t=(t||0)%360,t<0?t+360:t}function Mt(t){return Math.max(0,Math.min(1,t||0))}function Jt(t,e,r){return(t<60?e+(r-e)*t/60:t<180?r:t<240?e+(r-e)*(240-t)/60:e)*255}function jt(t,e,r,n,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*e+(4-6*o+3*a)*r+(1+3*t+3*o-3*a)*n+a*i)/6}function xr(t){var e=t.length-1;return function(r){var n=r<=0?r=0:r>=1?(r=1,e-1):Math.floor(r*e),i=t[n],o=t[n+1],a=n>0?t[n-1]:2*i-o,u=n<e-1?t[n+2]:2*o-i;return jt((r-n/e)*e,a,i,o,u)}}function gr(t){var e=t.length;return function(r){var n=Math.floor(((r%=1)<0?++r:r)*e),i=t[(n+e-1)%e],o=t[n%e],a=t[(n+1)%e],u=t[(n+2)%e];return jt((r-n/e)*e,i,o,a,u)}}var te=t=>()=>t;function Ri(t,e){return function(r){return t+r*e}}function $i(t,e,r){return t=Math.pow(t,r),e=Math.pow(e,r)-t,r=1/r,function(n){return Math.pow(t+n*e,r)}}function yr(t){return(t=+t)==1?zt:function(e,r){return r-e?$i(e,r,t):te(isNaN(e)?r:e)}}function zt(t,e){var r=e-t;return r?Ri(t,r):te(isNaN(t)?e:t)}var Ct=function t(e){var r=yr(e);function n(i,o){var a=r((i=et(i)).r,(o=et(o)).r),u=r(i.g,o.g),f=r(i.b,o.b),s=zt(i.opacity,o.opacity);return function(l){return i.r=a(l),i.g=u(l),i.b=f(l),i.opacity=s(l),i+""}}return n.gamma=t,n}(1);function vr(t){return function(e){var r=e.length,n=new Array(r),i=new Array(r),o=new Array(r),a,u;for(a=0;a<r;++a)u=et(e[a]),n[a]=u.r||0,i[a]=u.g||0,o[a]=u.b||0;return n=t(n),i=t(i),o=t(o),u.opacity=1,function(f){return u.r=n(f),u.g=i(f),u.b=o(f),u+""}}}var Bi=vr(xr),Xi=vr(gr);function O(t,e){return t=+t,e=+e,function(r){return t*(1-r)+e*r}}var re=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ee=new RegExp(re.source,"g");function Pi(t){return function(){return t}}function Hi(t){return function(e){return t(e)+""}}function ne(t,e){var r=re.lastIndex=ee.lastIndex=0,n,i,o,a=-1,u=[],f=[];for(t=t+"",e=e+"";(n=re.exec(t))&&(i=ee.exec(e));)(o=i.index)>r&&(o=e.slice(r,o),u[a]?u[a]+=o:u[++a]=o),(n=n[0])===(i=i[0])?u[a]?u[a]+=i:u[++a]=i:(u[++a]=null,f.push({i:a,x:O(n,i)})),r=ee.lastIndex;return r<e.length&&(o=e.slice(r),u[a]?u[a]+=o:u[++a]=o),u.length<2?f[0]?Hi(f[0].x):Pi(e):(e=f.length,function(s){for(var l=0,p;l<e;++l)u[(p=f[l]).i]=p.x(s);return u.join("")})}var _r=180/Math.PI,Ot={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function ie(t,e,r,n,i,o){var a,u,f;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(f=t*r+e*n)&&(r-=t*f,n-=e*f),(u=Math.sqrt(r*r+n*n))&&(r/=u,n/=u,f/=u),t*n<e*r&&(t=-t,e=-e,f=-f,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*_r,skewX:Math.atan(f)*_r,scaleX:a,scaleY:u}}var Dt;function wr(t){let e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?Ot:ie(e.a,e.b,e.c,e.d,e.e,e.f)}function br(t){return t==null?Ot:(Dt||(Dt=document.createElementNS("http://www.w3.org/2000/svg","g")),Dt.setAttribute("transform",t),(t=Dt.transform.baseVal.consolidate())?(t=t.matrix,ie(t.a,t.b,t.c,t.d,t.e,t.f)):Ot)}function Nr(t,e,r,n){function i(s){return s.length?s.pop()+" ":""}function o(s,l,p,h,c,g){if(s!==p||l!==h){var d=c.push("translate(",null,e,null,r);g.push({i:d-4,x:O(s,p)},{i:d-2,x:O(l,h)})}else(p||h)&&c.push("translate("+p+e+h+r)}function a(s,l,p,h){s!==l?(s-l>180?l+=360:l-s>180&&(s+=360),h.push({i:p.push(i(p)+"rotate(",null,n)-2,x:O(s,l)})):l&&p.push(i(p)+"rotate("+l+n)}function u(s,l,p,h){s!==l?h.push({i:p.push(i(p)+"skewX(",null,n)-2,x:O(s,l)}):l&&p.push(i(p)+"skewX("+l+n)}function f(s,l,p,h,c,g){if(s!==p||l!==h){var d=c.push(i(c)+"scale(",null,",",null,")");g.push({i:d-4,x:O(s,p)},{i:d-2,x:O(l,h)})}else(p!==1||h!==1)&&c.push(i(c)+"scale("+p+","+h+")")}return function(s,l){var p=[],h=[];return s=t(s),l=t(l),o(s.translateX,s.translateY,l.translateX,l.translateY,p,h),a(s.rotate,l.rotate,p,h),u(s.skewX,l.skewX,p,h),f(s.scaleX,s.scaleY,l.scaleX,l.scaleY,p,h),s=l=null,function(c){for(var g=-1,d=h.length,m;++g<d;)p[(m=h[g]).i]=m.x(c);return p.join("")}}}var oe=Nr(wr,"px, ","px)","deg)"),ae=Nr(br,", ",")",")");var rt=0,pt=0,ht=0,Er=1e3,Rt,mt,$t=0,J=0,Bt=0,dt=typeof performance=="object"&&performance.now?performance:Date,kr=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function gt(){return J||(kr(Li),J=dt.now()+Bt)}function Li(){J=0}function xt(){this._call=this._time=this._next=null}xt.prototype=nt.prototype={constructor:xt,restart:function(t,e,r){if(typeof t!="function")throw new TypeError("callback is not a function");r=(r==null?gt():+r)+(e==null?0:+e),!this._next&&mt!==this&&(mt?mt._next=this:Rt=this,mt=this),this._call=t,this._time=r,ue()},stop:function(){this._call&&(this._call=null,this._time=1/0,ue())}};function nt(t,e,r){var n=new xt;return n.restart(t,e,r),n}function Ir(){gt(),++rt;for(var t=Rt,e;t;)(e=J-t._time)>=0&&t._call.call(void 0,e),t=t._next;--rt}function Ar(){J=($t=dt.now())+Bt,rt=pt=0;try{Ir()}finally{rt=0,Yi(),J=0}}function Fi(){var t=dt.now(),e=t-$t;e>Er&&(Bt-=e,$t=t)}function Yi(){for(var t,e=Rt,r,n=1/0;e;)e._call?(n>e._time&&(n=e._time),t=e,e=e._next):(r=e._next,e._next=null,e=t?t._next=r:Rt=r);mt=t,ue(n)}function ue(t){if(!rt){pt&&(pt=clearTimeout(pt));var e=t-J;e>24?(t<1/0&&(pt=setTimeout(Ar,t-dt.now()-Bt)),ht&&(ht=clearInterval(ht))):(ht||($t=dt.now(),ht=setInterval(Fi,Er)),rt=1,kr(Ar))}}function Xt(t,e,r){var n=new xt;return e=e==null?0:+e,n.restart(i=>{n.stop(),t(i+e)},e,r),n}var Vi=ot("start","end","cancel","interrupt"),qi=[],Sr=0,Mr=1,Ht=2,Pt=3,Tr=4,Lt=5,yt=6;function G(t,e,r,n,i,o){var a=t.__transition;if(!a)t.__transition={};else if(r in a)return;Ki(t,r,{name:e,index:n,group:i,on:Vi,tween:qi,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Sr})}function vt(t,e){var r=N(t,e);if(r.state>Sr)throw new Error("too late; already scheduled");return r}function I(t,e){var r=N(t,e);if(r.state>Pt)throw new Error("too late; already running");return r}function N(t,e){var r=t.__transition;if(!r||!(r=r[e]))throw new Error("transition not found");return r}function Ki(t,e,r){var n=t.__transition,i;n[e]=r,r.timer=nt(o,0,r.time);function o(s){r.state=Mr,r.timer.restart(a,r.delay,r.time),r.delay<=s&&a(s-r.delay)}function a(s){var l,p,h,c;if(r.state!==Mr)return f();for(l in n)if(c=n[l],c.name===r.name){if(c.state===Pt)return Xt(a);c.state===Tr?(c.state=yt,c.timer.stop(),c.on.call("interrupt",t,t.__data__,c.index,c.group),delete n[l]):+l<e&&(c.state=yt,c.timer.stop(),c.on.call("cancel",t,t.__data__,c.index,c.group),delete n[l])}if(Xt(function(){r.state===Pt&&(r.state=Tr,r.timer.restart(u,r.delay,r.time),u(s))}),r.state=Ht,r.on.call("start",t,t.__data__,r.index,r.group),r.state===Ht){for(r.state=Pt,i=new Array(h=r.tween.length),l=0,p=-1;l<h;++l)(c=r.tween[l].value.call(t,t.__data__,r.index,r.group))&&(i[++p]=c);i.length=p+1}}function u(s){for(var l=s<r.duration?r.ease.call(null,s/r.duration):(r.timer.restart(f),r.state=Lt,1),p=-1,h=i.length;++p<h;)i[p].call(t,l);r.state===Lt&&(r.on.call("end",t,t.__data__,r.index,r.group),f())}function f(){r.state=yt,r.timer.stop(),delete n[e];for(var s in n)return;delete t.__transition}}function Ft(t,e){var r=t.__transition,n,i,o=!0,a;if(!!r){e=e==null?null:e+"";for(a in r){if((n=r[a]).name!==e){o=!1;continue}i=n.state>Ht&&n.state<Lt,n.state=yt,n.timer.stop(),n.on.call(i?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete r[a]}o&&delete t.__transition}}function zr(t){return this.each(function(){Ft(this,t)})}function Gi(t,e){var r,n;return function(){var i=I(this,t),o=i.tween;if(o!==r){n=r=o;for(var a=0,u=n.length;a<u;++a)if(n[a].name===e){n=n.slice(),n.splice(a,1);break}}i.tween=n}}function Qi(t,e,r){var n,i;if(typeof r!="function")throw new Error;return function(){var o=I(this,t),a=o.tween;if(a!==n){i=(n=a).slice();for(var u={name:e,value:r},f=0,s=i.length;f<s;++f)if(i[f].name===e){i[f]=u;break}f===s&&i.push(u)}o.tween=i}}function Cr(t,e){var r=this._id;if(t+="",arguments.length<2){for(var n=N(this.node(),r).tween,i=0,o=n.length,a;i<o;++i)if((a=n[i]).name===t)return a.value;return null}return this.each((e==null?Gi:Qi)(r,t,e))}function it(t,e,r){var n=t._id;return t.each(function(){var i=I(this,n);(i.value||(i.value={}))[e]=r.apply(this,arguments)}),function(i){return N(i,n).value[e]}}function Yt(t,e){var r;return(typeof e=="number"?O:e instanceof K?Ct:(r=K(e))?(e=r,Ct):ne)(t,e)}function Ui(t){return function(){this.removeAttribute(t)}}function Zi(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Wi(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttribute(t);return a===i?null:a===n?o:o=e(n=a,r)}}function Ji(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===n?o:o=e(n=a,r)}}function ji(t,e,r){var n,i,o;return function(){var a,u=r(this),f;return u==null?void this.removeAttribute(t):(a=this.getAttribute(t),f=u+"",a===f?null:a===n&&f===i?o:(i=f,o=e(n=a,u)))}}function to(t,e,r){var n,i,o;return function(){var a,u=r(this),f;return u==null?void this.removeAttributeNS(t.space,t.local):(a=this.getAttributeNS(t.space,t.local),f=u+"",a===f?null:a===n&&f===i?o:(i=f,o=e(n=a,u)))}}function Or(t,e){var r=H(t),n=r==="transform"?ae:Yt;return this.attrTween(t,typeof e=="function"?(r.local?to:ji)(r,n,it(this,"attr."+t,e)):e==null?(r.local?Zi:Ui)(r):(r.local?Ji:Wi)(r,n,e))}function eo(t,e){return function(r){this.setAttribute(t,e.call(this,r))}}function ro(t,e){return function(r){this.setAttributeNS(t.space,t.local,e.call(this,r))}}function no(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&ro(t,o)),r}return i._value=e,i}function io(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&eo(t,o)),r}return i._value=e,i}function Dr(t,e){var r="attr."+t;if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;var n=H(t);return this.tween(r,(n.local?no:io)(n,e))}function oo(t,e){return function(){vt(this,t).delay=+e.apply(this,arguments)}}function ao(t,e){return e=+e,function(){vt(this,t).delay=e}}function Rr(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?oo:ao)(e,t)):N(this.node(),e).delay}function uo(t,e){return function(){I(this,t).duration=+e.apply(this,arguments)}}function so(t,e){return e=+e,function(){I(this,t).duration=e}}function $r(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?uo:so)(e,t)):N(this.node(),e).duration}function fo(t,e){if(typeof e!="function")throw new Error;return function(){I(this,t).ease=e}}function Br(t){var e=this._id;return arguments.length?this.each(fo(e,t)):N(this.node(),e).ease}function lo(t,e){return function(){var r=e.apply(this,arguments);if(typeof r!="function")throw new Error;I(this,t).ease=r}}function Xr(t){if(typeof t!="function")throw new Error;return this.each(lo(this._id,t))}function Pr(t){typeof t!="function"&&(t=ut(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,u=n[i]=[],f,s=0;s<a;++s)(f=o[s])&&t.call(f,f.__data__,s,o)&&u.push(f);return new T(n,this._parents,this._name,this._id)}function Hr(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,r=t._groups,n=e.length,i=r.length,o=Math.min(n,i),a=new Array(n),u=0;u<o;++u)for(var f=e[u],s=r[u],l=f.length,p=a[u]=new Array(l),h,c=0;c<l;++c)(h=f[c]||s[c])&&(p[c]=h);for(;u<n;++u)a[u]=e[u];return new T(a,this._parents,this._name,this._id)}function co(t){return(t+"").trim().split(/^|\s+/).every(function(e){var r=e.indexOf(".");return r>=0&&(e=e.slice(0,r)),!e||e==="start"})}function ho(t,e,r){var n,i,o=co(e)?vt:I;return function(){var a=o(this,t),u=a.on;u!==n&&(i=(n=u).copy()).on(e,r),a.on=i}}function Lr(t,e){var r=this._id;return arguments.length<2?N(this.node(),r).on.on(t):this.each(ho(r,t,e))}function po(t){return function(){var e=this.parentNode;for(var r in this.__transition)if(+r!==t)return;e&&e.removeChild(this)}}function Fr(){return this.on("end.remove",po(this._id))}function Yr(t){var e=this._name,r=this._id;typeof t!="function"&&(t=U(t));for(var n=this._groups,i=n.length,o=new Array(i),a=0;a<i;++a)for(var u=n[a],f=u.length,s=o[a]=new Array(f),l,p,h=0;h<f;++h)(l=u[h])&&(p=t.call(l,l.__data__,h,u))&&("__data__"in l&&(p.__data__=l.__data__),s[h]=p,G(s[h],e,r,h,s,N(l,r)));return new T(o,this._parents,e,r)}function Vr(t){var e=this._name,r=this._id;typeof t!="function"&&(t=at(t));for(var n=this._groups,i=n.length,o=[],a=[],u=0;u<i;++u)for(var f=n[u],s=f.length,l,p=0;p<s;++p)if(l=f[p]){for(var h=t.call(l,l.__data__,p,f),c,g=N(l,r),d=0,m=h.length;d<m;++d)(c=h[d])&&G(c,e,r,d,h,g);o.push(h),a.push(l)}return new T(o,a,e,r)}var mo=L.prototype.constructor;function qr(){return new mo(this._groups,this._parents)}function xo(t,e){var r,n,i;return function(){var o=q(this,t),a=(this.style.removeProperty(t),q(this,t));return o===a?null:o===r&&a===n?i:i=e(r=o,n=a)}}function Kr(t){return function(){this.style.removeProperty(t)}}function go(t,e,r){var n,i=r+"",o;return function(){var a=q(this,t);return a===i?null:a===n?o:o=e(n=a,r)}}function yo(t,e,r){var n,i,o;return function(){var a=q(this,t),u=r(this),f=u+"";return u==null&&(f=u=(this.style.removeProperty(t),q(this,t))),a===f?null:a===n&&f===i?o:(i=f,o=e(n=a,u))}}function vo(t,e){var r,n,i,o="style."+e,a="end."+o,u;return function(){var f=I(this,t),s=f.on,l=f.value[o]==null?u||(u=Kr(e)):void 0;(s!==r||i!==l)&&(n=(r=s).copy()).on(a,i=l),f.on=n}}function Gr(t,e,r){var n=(t+="")=="transform"?oe:Yt;return e==null?this.styleTween(t,xo(t,n)).on("end.style."+t,Kr(t)):typeof e=="function"?this.styleTween(t,yo(t,n,it(this,"style."+t,e))).each(vo(this._id,t)):this.styleTween(t,go(t,n,e),r).on("end.style."+t,null)}function _o(t,e,r){return function(n){this.style.setProperty(t,e.call(this,n),r)}}function wo(t,e,r){var n,i;function o(){var a=e.apply(this,arguments);return a!==i&&(n=(i=a)&&_o(t,a,r)),n}return o._value=e,o}function Qr(t,e,r){var n="style."+(t+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;return this.tween(n,wo(t,e,r==null?"":r))}function bo(t){return function(){this.textContent=t}}function No(t){return function(){var e=t(this);this.textContent=e==null?"":e}}function Ur(t){return this.tween("text",typeof t=="function"?No(it(this,"text",t)):bo(t==null?"":t+""))}function Ao(t){return function(e){this.textContent=t.call(this,e)}}function Eo(t){var e,r;function n(){var i=t.apply(this,arguments);return i!==r&&(e=(r=i)&&Ao(i)),e}return n._value=t,n}function Zr(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Eo(t))}function Wr(){for(var t=this._name,e=this._id,r=Vt(),n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],u=a.length,f,s=0;s<u;++s)if(f=a[s]){var l=N(f,e);G(f,t,r,s,a,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new T(n,this._parents,t,r)}function Jr(){var t,e,r=this,n=r._id,i=r.size();return new Promise(function(o,a){var u={value:a},f={value:function(){--i===0&&o()}};r.each(function(){var s=I(this,n),l=s.on;l!==t&&(e=(t=l).copy(),e._.cancel.push(u),e._.interrupt.push(u),e._.end.push(f)),s.on=e}),i===0&&o()})}var ko=0;function T(t,e,r,n){this._groups=t,this._parents=e,this._name=r,this._id=n}function jr(t){return L().transition(t)}function Vt(){return++ko}var F=L.prototype;T.prototype=jr.prototype={constructor:T,select:Yr,selectAll:Vr,selectChild:F.selectChild,selectChildren:F.selectChildren,filter:Pr,merge:Hr,selection:qr,transition:Wr,call:F.call,nodes:F.nodes,node:F.node,size:F.size,empty:F.empty,each:F.each,on:Lr,attr:Or,attrTween:Dr,style:Gr,styleTween:Qr,text:Ur,textTween:Zr,remove:Fr,tween:Cr,delay:Rr,duration:$r,ease:Br,easeVarying:Xr,end:Jr,[Symbol.iterator]:F[Symbol.iterator]};function qt(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Io={time:null,delay:0,duration:250,ease:qt};function Mo(t,e){for(var r;!(r=t.__transition)||!(r=r[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return r}function tn(t){var e,r;t instanceof T?(e=t._id,t=t._name):(e=Vt(),(r=Io).time=gt(),t=t==null?null:t+"");for(var n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],u=a.length,f,s=0;s<u;++s)(f=a[s])&&G(f,t,e,s,a,r||Mo(f,e));return new T(n,this._parents,t,e)}L.prototype.interrupt=zr;L.prototype.transition=tn;var{abs:Sl,max:zl,min:Cl}=Math;function en(t){return[+t[0],+t[1]]}function To(t){return[en(t[0]),en(t[1])]}var Ol={name:"x",handles:["w","e"].map(se),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Dl={name:"y",handles:["n","s"].map(se),input:function(t,e){return t==null?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},Rl={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(se),input:function(t){return t==null?null:To(t)},output:function(t){return t}};function se(t){return{type:t}}function fe(t,e){var r,n=1;t==null&&(t=0),e==null&&(e=0);function i(){var o,a=r.length,u,f=0,s=0;for(o=0;o<a;++o)u=r[o],f+=u.x,s+=u.y;for(f=(f/a-t)*n,s=(s/a-e)*n,o=0;o<a;++o)u=r[o],u.x-=f,u.y-=s}return i.initialize=function(o){r=o},i.x=function(o){return arguments.length?(t=+o,i):t},i.y=function(o){return arguments.length?(e=+o,i):e},i.strength=function(o){return arguments.length?(n=+o,i):n},i}function rn(t){let e=+this._x.call(null,t),r=+this._y.call(null,t);return nn(this.cover(e,r),e,r,t)}function nn(t,e,r,n){if(isNaN(e)||isNaN(r))return t;var i,o=t._root,a={data:n},u=t._x0,f=t._y0,s=t._x1,l=t._y1,p,h,c,g,d,m,x,y;if(!o)return t._root=a,t;for(;o.length;)if((d=e>=(p=(u+s)/2))?u=p:s=p,(m=r>=(h=(f+l)/2))?f=h:l=h,i=o,!(o=o[x=m<<1|d]))return i[x]=a,t;if(c=+t._x.call(null,o.data),g=+t._y.call(null,o.data),e===c&&r===g)return a.next=o,i?i[x]=a:t._root=a,t;do i=i?i[x]=new Array(4):t._root=new Array(4),(d=e>=(p=(u+s)/2))?u=p:s=p,(m=r>=(h=(f+l)/2))?f=h:l=h;while((x=m<<1|d)===(y=(g>=h)<<1|c>=p));return i[y]=o,i[x]=a,t}function on(t){var e,r,n=t.length,i,o,a=new Array(n),u=new Array(n),f=1/0,s=1/0,l=-1/0,p=-1/0;for(r=0;r<n;++r)isNaN(i=+this._x.call(null,e=t[r]))||isNaN(o=+this._y.call(null,e))||(a[r]=i,u[r]=o,i<f&&(f=i),i>l&&(l=i),o<s&&(s=o),o>p&&(p=o));if(f>l||s>p)return this;for(this.cover(f,s).cover(l,p),r=0;r<n;++r)nn(this,a[r],u[r],t[r]);return this}function an(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var r=this._x0,n=this._y0,i=this._x1,o=this._y1;if(isNaN(r))i=(r=Math.floor(t))+1,o=(n=Math.floor(e))+1;else{for(var a=i-r||1,u=this._root,f,s;r>t||t>=i||n>e||e>=o;)switch(s=(e<n)<<1|t<r,f=new Array(4),f[s]=u,u=f,a*=2,s){case 0:i=r+a,o=n+a;break;case 1:r=i-a,o=n+a;break;case 2:i=r+a,n=o-a;break;case 3:r=i-a,n=o-a;break}this._root&&this._root.length&&(this._root=u)}return this._x0=r,this._y0=n,this._x1=i,this._y1=o,this}function un(){var t=[];return this.visit(function(e){if(!e.length)do t.push(e.data);while(e=e.next)}),t}function sn(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function k(t,e,r,n,i){this.node=t,this.x0=e,this.y0=r,this.x1=n,this.y1=i}function fn(t,e,r){var n,i=this._x0,o=this._y0,a,u,f,s,l=this._x1,p=this._y1,h=[],c=this._root,g,d;for(c&&h.push(new k(c,i,o,l,p)),r==null?r=1/0:(i=t-r,o=e-r,l=t+r,p=e+r,r*=r);g=h.pop();)if(!(!(c=g.node)||(a=g.x0)>l||(u=g.y0)>p||(f=g.x1)<i||(s=g.y1)<o))if(c.length){var m=(a+f)/2,x=(u+s)/2;h.push(new k(c[3],m,x,f,s),new k(c[2],a,x,m,s),new k(c[1],m,u,f,x),new k(c[0],a,u,m,x)),(d=(e>=x)<<1|t>=m)&&(g=h[h.length-1],h[h.length-1]=h[h.length-1-d],h[h.length-1-d]=g)}else{var y=t-+this._x.call(null,c.data),_=e-+this._y.call(null,c.data),v=y*y+_*_;if(v<r){var w=Math.sqrt(r=v);i=t-w,o=e-w,l=t+w,p=e+w,n=c.data}}return n}function ln(t){if(isNaN(l=+this._x.call(null,t))||isNaN(p=+this._y.call(null,t)))return this;var e,r=this._root,n,i,o,a=this._x0,u=this._y0,f=this._x1,s=this._y1,l,p,h,c,g,d,m,x;if(!r)return this;if(r.length)for(;;){if((g=l>=(h=(a+f)/2))?a=h:f=h,(d=p>=(c=(u+s)/2))?u=c:s=c,e=r,!(r=r[m=d<<1|g]))return this;if(!r.length)break;(e[m+1&3]||e[m+2&3]||e[m+3&3])&&(n=e,x=m)}for(;r.data!==t;)if(i=r,!(r=r.next))return this;return(o=r.next)&&delete r.next,i?(o?i.next=o:delete i.next,this):e?(o?e[m]=o:delete e[m],(r=e[0]||e[1]||e[2]||e[3])&&r===(e[3]||e[2]||e[1]||e[0])&&!r.length&&(n?n[x]=r:this._root=r),this):(this._root=o,this)}function cn(t){for(var e=0,r=t.length;e<r;++e)this.remove(t[e]);return this}function hn(){return this._root}function pn(){var t=0;return this.visit(function(e){if(!e.length)do++t;while(e=e.next)}),t}function mn(t){var e=[],r,n=this._root,i,o,a,u,f;for(n&&e.push(new k(n,this._x0,this._y0,this._x1,this._y1));r=e.pop();)if(!t(n=r.node,o=r.x0,a=r.y0,u=r.x1,f=r.y1)&&n.length){var s=(o+u)/2,l=(a+f)/2;(i=n[3])&&e.push(new k(i,s,l,u,f)),(i=n[2])&&e.push(new k(i,o,l,s,f)),(i=n[1])&&e.push(new k(i,s,a,u,l)),(i=n[0])&&e.push(new k(i,o,a,s,l))}return this}function dn(t){var e=[],r=[],n;for(this._root&&e.push(new k(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,a=n.x0,u=n.y0,f=n.x1,s=n.y1,l=(a+f)/2,p=(u+s)/2;(o=i[0])&&e.push(new k(o,a,u,l,p)),(o=i[1])&&e.push(new k(o,l,u,f,p)),(o=i[2])&&e.push(new k(o,a,p,l,s)),(o=i[3])&&e.push(new k(o,l,p,f,s))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this}function xn(t){return t[0]}function gn(t){return arguments.length?(this._x=t,this):this._x}function yn(t){return t[1]}function vn(t){return arguments.length?(this._y=t,this):this._y}function j(t,e,r){var n=new le(e==null?xn:e,r==null?yn:r,NaN,NaN,NaN,NaN);return t==null?n:n.addAll(t)}function le(t,e,r,n,i,o){this._x=t,this._y=e,this._x0=r,this._y0=n,this._x1=i,this._y1=o,this._root=void 0}function _n(t){for(var e={data:t.data},r=e;t=t.next;)r=r.next={data:t.data};return e}var S=j.prototype=le.prototype;S.copy=function(){var t=new le(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root,r,n;if(!e)return t;if(!e.length)return t._root=_n(e),t;for(r=[{source:e,target:t._root=new Array(4)}];e=r.pop();)for(var i=0;i<4;++i)(n=e.source[i])&&(n.length?r.push({source:n,target:e.target[i]=new Array(4)}):e.target[i]=_n(n));return t};S.add=rn;S.addAll=on;S.cover=an;S.data=un;S.extent=sn;S.find=fn;S.remove=ln;S.removeAll=cn;S.root=hn;S.size=pn;S.visit=mn;S.visitAfter=dn;S.x=gn;S.y=vn;function X(t){return function(){return t}}function $(t){return(t()-.5)*1e-6}function So(t){return t.x+t.vx}function zo(t){return t.y+t.vy}function ce(t){var e,r,n,i=1,o=1;typeof t!="function"&&(t=X(t==null?1:+t));function a(){for(var s,l=e.length,p,h,c,g,d,m,x=0;x<o;++x)for(p=j(e,So,zo).visitAfter(u),s=0;s<l;++s)h=e[s],d=r[h.index],m=d*d,c=h.x+h.vx,g=h.y+h.vy,p.visit(y);function y(_,v,w,M,C){var A=_.data,D=_.r,E=d+D;if(A){if(A.index>h.index){var Y=c-A.x-A.vx,V=g-A.y-A.vy,P=Y*Y+V*V;P<E*E&&(Y===0&&(Y=$(n),P+=Y*Y),V===0&&(V=$(n),P+=V*V),P=(E-(P=Math.sqrt(P)))/P*i,h.vx+=(Y*=P)*(E=(D*=D)/(m+D)),h.vy+=(V*=P)*E,A.vx-=Y*(E=1-E),A.vy-=V*E)}return}return v>c+E||M<c-E||w>g+E||C<g-E}}function u(s){if(s.data)return s.r=r[s.data.index];for(var l=s.r=0;l<4;++l)s[l]&&s[l].r>s.r&&(s.r=s[l].r)}function f(){if(!!e){var s,l=e.length,p;for(r=new Array(l),s=0;s<l;++s)p=e[s],r[p.index]=+t(p,s,e)}}return a.initialize=function(s,l){e=s,n=l,f()},a.iterations=function(s){return arguments.length?(o=+s,a):o},a.strength=function(s){return arguments.length?(i=+s,a):i},a.radius=function(s){return arguments.length?(t=typeof s=="function"?s:X(+s),f(),a):t},a}function Co(t){return t.index}function wn(t,e){var r=t.get(e);if(!r)throw new Error("node not found: "+e);return r}function he(t){var e=Co,r=p,n,i=X(30),o,a,u,f,s,l=1;t==null&&(t=[]);function p(m){return 1/Math.min(u[m.source.index],u[m.target.index])}function h(m){for(var x=0,y=t.length;x<l;++x)for(var _=0,v,w,M,C,A,D,E;_<y;++_)v=t[_],w=v.source,M=v.target,C=M.x+M.vx-w.x-w.vx||$(s),A=M.y+M.vy-w.y-w.vy||$(s),D=Math.sqrt(C*C+A*A),D=(D-o[_])/D*m*n[_],C*=D,A*=D,M.vx-=C*(E=f[_]),M.vy-=A*E,w.vx+=C*(E=1-E),w.vy+=A*E}function c(){if(!!a){var m,x=a.length,y=t.length,_=new Map(a.map((w,M)=>[e(w,M,a),w])),v;for(m=0,u=new Array(x);m<y;++m)v=t[m],v.index=m,typeof v.source!="object"&&(v.source=wn(_,v.source)),typeof v.target!="object"&&(v.target=wn(_,v.target)),u[v.source.index]=(u[v.source.index]||0)+1,u[v.target.index]=(u[v.target.index]||0)+1;for(m=0,f=new Array(y);m<y;++m)v=t[m],f[m]=u[v.source.index]/(u[v.source.index]+u[v.target.index]);n=new Array(y),g(),o=new Array(y),d()}}function g(){if(!!a)for(var m=0,x=t.length;m<x;++m)n[m]=+r(t[m],m,t)}function d(){if(!!a)for(var m=0,x=t.length;m<x;++m)o[m]=+i(t[m],m,t)}return h.initialize=function(m,x){a=m,s=x,c()},h.links=function(m){return arguments.length?(t=m,c(),h):t},h.id=function(m){return arguments.length?(e=m,h):e},h.iterations=function(m){return arguments.length?(l=+m,h):l},h.strength=function(m){return arguments.length?(r=typeof m=="function"?m:X(+m),g(),h):r},h.distance=function(m){return arguments.length?(i=typeof m=="function"?m:X(+m),d(),h):i},h}function bn(){let t=1;return()=>(t=(1664525*t+1013904223)%4294967296)/4294967296}function Nn(t){return t.x}function An(t){return t.y}var Oo=10,Do=Math.PI*(3-Math.sqrt(5));function pe(t){var e,r=1,n=.001,i=1-Math.pow(n,1/300),o=0,a=.6,u=new Map,f=nt(p),s=ot("tick","end"),l=bn();t==null&&(t=[]);function p(){h(),s.call("tick",e),r<n&&(f.stop(),s.call("end",e))}function h(d){var m,x=t.length,y;d===void 0&&(d=1);for(var _=0;_<d;++_)for(r+=(o-r)*i,u.forEach(function(v){v(r)}),m=0;m<x;++m)y=t[m],y.fx==null?y.x+=y.vx*=a:(y.x=y.fx,y.vx=0),y.fy==null?y.y+=y.vy*=a:(y.y=y.fy,y.vy=0);return e}function c(){for(var d=0,m=t.length,x;d<m;++d){if(x=t[d],x.index=d,x.fx!=null&&(x.x=x.fx),x.fy!=null&&(x.y=x.fy),isNaN(x.x)||isNaN(x.y)){var y=Oo*Math.sqrt(.5+d),_=d*Do;x.x=y*Math.cos(_),x.y=y*Math.sin(_)}(isNaN(x.vx)||isNaN(x.vy))&&(x.vx=x.vy=0)}}function g(d){return d.initialize&&d.initialize(t,l),d}return c(),e={tick:h,restart:function(){return f.restart(p),e},stop:function(){return f.stop(),e},nodes:function(d){return arguments.length?(t=d,c(),u.forEach(g),e):t},alpha:function(d){return arguments.length?(r=+d,e):r},alphaMin:function(d){return arguments.length?(n=+d,e):n},alphaDecay:function(d){return arguments.length?(i=+d,e):+i},alphaTarget:function(d){return arguments.length?(o=+d,e):o},velocityDecay:function(d){return arguments.length?(a=1-d,e):1-a},randomSource:function(d){return arguments.length?(l=d,u.forEach(g),e):l},force:function(d,m){return arguments.length>1?(m==null?u.delete(d):u.set(d,g(m)),e):u.get(d)},find:function(d,m,x){var y=0,_=t.length,v,w,M,C,A;for(x==null?x=1/0:x*=x,y=0;y<_;++y)C=t[y],v=d-C.x,w=m-C.y,M=v*v+w*w,M<x&&(A=C,x=M);return A},on:function(d,m){return arguments.length>1?(s.on(d,m),e):s.on(d)}}}function me(){var t,e,r,n,i=X(-30),o,a=1,u=1/0,f=.81;function s(c){var g,d=t.length,m=j(t,Nn,An).visitAfter(p);for(n=c,g=0;g<d;++g)e=t[g],m.visit(h)}function l(){if(!!t){var c,g=t.length,d;for(o=new Array(g),c=0;c<g;++c)d=t[c],o[d.index]=+i(d,c,t)}}function p(c){var g=0,d,m,x=0,y,_,v;if(c.length){for(y=_=v=0;v<4;++v)(d=c[v])&&(m=Math.abs(d.value))&&(g+=d.value,x+=m,y+=m*d.x,_+=m*d.y);c.x=y/x,c.y=_/x}else{d=c,d.x=d.data.x,d.y=d.data.y;do g+=o[d.data.index];while(d=d.next)}c.value=g}function h(c,g,d,m){if(!c.value)return!0;var x=c.x-e.x,y=c.y-e.y,_=m-g,v=x*x+y*y;if(_*_/f<v)return v<u&&(x===0&&(x=$(r),v+=x*x),y===0&&(y=$(r),v+=y*y),v<a&&(v=Math.sqrt(a*v)),e.vx+=x*c.value*n/v,e.vy+=y*c.value*n/v),!0;if(c.length||v>=u)return;(c.data!==e||c.next)&&(x===0&&(x=$(r),v+=x*x),y===0&&(y=$(r),v+=y*y),v<a&&(v=Math.sqrt(a*v)));do c.data!==e&&(_=o[c.data.index]*n/v,e.vx+=x*_,e.vy+=y*_);while(c=c.next)}return s.initialize=function(c,g){t=c,r=g,l()},s.strength=function(c){return arguments.length?(i=typeof c=="function"?c:X(+c),l(),s):i},s.distanceMin=function(c){return arguments.length?(a=c*c,s):Math.sqrt(a)},s.distanceMax=function(c){return arguments.length?(u=c*c,s):Math.sqrt(u)},s.theta=function(c){return arguments.length?(f=c*c,s):Math.sqrt(f)},s}function Q(t,e,r){this.k=t,this.x=e,this.y=r}Q.prototype={constructor:Q,scale:function(t){return t===1?this:new Q(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new Q(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var de=new Q(1,0,0);xe.prototype=Q.prototype;function xe(t){for(;!t.__zoom;)if(!(t=t.parentNode))return de;return t.__zoom}window.addEventListener("load",async()=>{let t=[{id:1,x:10,y:10,name:"name1"},{id:2,x:15,y:15,name:"name2"},{id:3,x:20,y:20,name:"name3"},{id:4,x:25,y:25,name:"name4"},{id:5,x:30,y:30,name:"name5"}];setInterval(()=>{console.log("...data",t)},1e3);let e=300,r=300;var n=[{source:1,target:1,x:10,y:10,distance:10},{source:2,target:2,x:15,y:15,distance:20},{source:3,target:3,x:20,y:20,distance:30},{source:4,target:4,x:25,y:25,distance:40},{source:5,target:5,x:30,y:30,distance:50}];let i=Zt("svg").attr("width",e).attr("height",r),o=i.append("g").selectAll("circle").data(t).enter().append("circle").attr("cx",l=>l.x+110).attr("cy",l=>l.y+110).attr("r",l=>10).attr("style","fill: #f00"),a=i.append("g").selectAll("text").data(t).enter().append("text").attr("x",0).attr("y",0).attr("fill","#fff").attr("dominant-baseline","middle").text(function(l){return l.id+""});pe(t).force("collide",ce().radius(10).strength(3)).force("manyBody",me().strength(250)).force("center",fe(e/2,r/2)).force("link",he().id(l=>(console.log("forceLink.id.d",l),l.id)).distance(10).strength(800).links(n)).alpha(.1).alphaDecay(0).on("tick",f).on("end",s);function f(){o.attr("cx",function(l){return l.x}).attr("cy",function(l){return l.y}),a.attr("x",function(l){return l.x-4}).attr("y",function(l){return l.y+4})}function s(){}});})();
//# sourceMappingURL=data:application/json;base64,
