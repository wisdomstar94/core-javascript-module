(()=>{var Qn={value:()=>{}};function Je(){for(var t=0,e=arguments.length,r={},n;t<e;++t){if(!(n=arguments[t]+"")||n in r||/[\s.]/.test(n))throw new Error("illegal type: "+n);r[n]=[]}return new Gt(r)}function Gt(t){this._=t}function Wn(t,e){return t.trim().split(/^|\s+/).map(function(r){var n="",i=r.indexOf(".");if(i>=0&&(n=r.slice(i+1),r=r.slice(0,i)),r&&!e.hasOwnProperty(r))throw new Error("unknown type: "+r);return{type:r,name:n}})}Gt.prototype=Je.prototype={constructor:Gt,on:function(t,e){var r=this._,n=Wn(t+"",r),i,o=-1,a=n.length;if(arguments.length<2){for(;++o<a;)if((i=(t=n[o]).type)&&(i=Jn(r[i],t.name)))return i;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++o<a;)if(i=(t=n[o]).type)r[i]=We(r[i],t.name,e);else if(e==null)for(i in r)r[i]=We(r[i],t.name,null);return this},copy:function(){var t={},e=this._;for(var r in e)t[r]=e[r].slice();return new Gt(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var r=new Array(i),n=0,i,o;n<i;++n)r[n]=arguments[n+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=this._[t],n=0,i=o.length;n<i;++n)o[n].value.apply(e,r)},apply:function(t,e,r){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var n=this._[t],i=0,o=n.length;i<o;++i)n[i].value.apply(e,r)}};function Jn(t,e){for(var r=0,n=t.length,i;r<n;++r)if((i=t[r]).name===e)return i.value}function We(t,e,r){for(var n=0,i=t.length;n<i;++n)if(t[n].name===e){t[n]=Qn,t=t.slice(0,n).concat(t.slice(n+1));break}return r!=null&&t.push({name:e,value:r}),t}var kt=Je;var Kt="http://www.w3.org/1999/xhtml",Ee={svg:"http://www.w3.org/2000/svg",xhtml:Kt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function W(t){var e=t+="",r=e.indexOf(":");return r>=0&&(e=t.slice(0,r))!=="xmlns"&&(t=t.slice(r+1)),Ee.hasOwnProperty(e)?{space:Ee[e],local:t}:t}function jn(t){return function(){var e=this.ownerDocument,r=this.namespaceURI;return r===Kt&&e.documentElement.namespaceURI===Kt?e.createElement(t):e.createElementNS(r,t)}}function ti(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function Ut(t){var e=W(t);return(e.local?ti:jn)(e)}function ei(){}function ft(t){return t==null?ei:function(){return this.querySelector(t)}}function je(t){typeof t!="function"&&(t=ft(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=new Array(a),u,f,l=0;l<a;++l)(u=o[l])&&(f=t.call(u,u.__data__,l,o))&&("__data__"in u&&(f.__data__=u.__data__),s[l]=f);return new v(n,this._parents)}function ke(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function ri(){return[]}function Nt(t){return t==null?ri:function(){return this.querySelectorAll(t)}}function ni(t){return function(){return ke(t.apply(this,arguments))}}function tr(t){typeof t=="function"?t=ni(t):t=Nt(t);for(var e=this._groups,r=e.length,n=[],i=[],o=0;o<r;++o)for(var a=e[o],s=a.length,u,f=0;f<s;++f)(u=a[f])&&(n.push(t.call(u,u.__data__,f,a)),i.push(u));return new v(n,i)}function It(t){return function(){return this.matches(t)}}function Zt(t){return function(e){return e.matches(t)}}var ii=Array.prototype.find;function oi(t){return function(){return ii.call(this.children,t)}}function ai(){return this.firstElementChild}function er(t){return this.select(t==null?ai:oi(typeof t=="function"?t:Zt(t)))}var si=Array.prototype.filter;function ui(){return Array.from(this.children)}function fi(t){return function(){return si.call(this.children,t)}}function rr(t){return this.selectAll(t==null?ui:fi(typeof t=="function"?t:Zt(t)))}function nr(t){typeof t!="function"&&(t=It(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=[],u,f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&s.push(u);return new v(n,this._parents)}function Qt(t){return new Array(t.length)}function ir(){return new v(this._enter||this._groups.map(Qt),this._parents)}function Tt(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}Tt.prototype={constructor:Tt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function or(t){return function(){return t}}function li(t,e,r,n,i,o){for(var a=0,s,u=e.length,f=o.length;a<f;++a)(s=e[a])?(s.__data__=o[a],n[a]=s):r[a]=new Tt(t,o[a]);for(;a<u;++a)(s=e[a])&&(i[a]=s)}function ci(t,e,r,n,i,o,a){var s,u,f=new Map,l=e.length,h=o.length,p=new Array(l),x;for(s=0;s<l;++s)(u=e[s])&&(p[s]=x=a.call(u,u.__data__,s,e)+"",f.has(x)?i[s]=u:f.set(x,u));for(s=0;s<h;++s)x=a.call(t,o[s],s,o)+"",(u=f.get(x))?(n[s]=u,u.__data__=o[s],f.delete(x)):r[s]=new Tt(t,o[s]);for(s=0;s<l;++s)(u=e[s])&&f.get(p[s])===u&&(i[s]=u)}function hi(t){return t.__data__}function ar(t,e){if(!arguments.length)return Array.from(this,hi);var r=e?ci:li,n=this._parents,i=this._groups;typeof t!="function"&&(t=or(t));for(var o=i.length,a=new Array(o),s=new Array(o),u=new Array(o),f=0;f<o;++f){var l=n[f],h=i[f],p=h.length,x=pi(t.call(l,l&&l.__data__,f,n)),b=x.length,S=s[f]=new Array(b),c=a[f]=new Array(b),d=u[f]=new Array(p);r(l,h,S,c,d,x,e);for(var g=0,m=0,_,w;g<b;++g)if(_=S[g]){for(g>=m&&(m=g+1);!(w=c[m])&&++m<b;);_._next=w||null}}return a=new v(a,n),a._enter=s,a._exit=u,a}function pi(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function sr(){return new v(this._exit||this._groups.map(Qt),this._parents)}function ur(t,e,r){var n=this.enter(),i=this,o=this.exit();return typeof t=="function"?(n=t(n),n&&(n=n.selection())):n=n.append(t+""),e!=null&&(i=e(i),i&&(i=i.selection())),r==null?o.remove():r(o),n&&i?n.merge(i).order():i}function fr(t){for(var e=t.selection?t.selection():t,r=this._groups,n=e._groups,i=r.length,o=n.length,a=Math.min(i,o),s=new Array(i),u=0;u<a;++u)for(var f=r[u],l=n[u],h=f.length,p=s[u]=new Array(h),x,b=0;b<h;++b)(x=f[b]||l[b])&&(p[b]=x);for(;u<i;++u)s[u]=r[u];return new v(s,this._parents)}function lr(){for(var t=this._groups,e=-1,r=t.length;++e<r;)for(var n=t[e],i=n.length-1,o=n[i],a;--i>=0;)(a=n[i])&&(o&&a.compareDocumentPosition(o)^4&&o.parentNode.insertBefore(a,o),o=a);return this}function cr(t){t||(t=mi);function e(h,p){return h&&p?t(h.__data__,p.__data__):!h-!p}for(var r=this._groups,n=r.length,i=new Array(n),o=0;o<n;++o){for(var a=r[o],s=a.length,u=i[o]=new Array(s),f,l=0;l<s;++l)(f=a[l])&&(u[l]=f);u.sort(e)}return new v(i,this._parents).order()}function mi(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function hr(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function pr(){return Array.from(this)}function mr(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length;i<o;++i){var a=n[i];if(a)return a}return null}function dr(){let t=0;for(let e of this)++t;return t}function xr(){return!this.node()}function gr(t){for(var e=this._groups,r=0,n=e.length;r<n;++r)for(var i=e[r],o=0,a=i.length,s;o<a;++o)(s=i[o])&&t.call(s,s.__data__,o,i);return this}function di(t){return function(){this.removeAttribute(t)}}function xi(t){return function(){this.removeAttributeNS(t.space,t.local)}}function gi(t,e){return function(){this.setAttribute(t,e)}}function yi(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function _i(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttribute(t):this.setAttribute(t,r)}}function wi(t,e){return function(){var r=e.apply(this,arguments);r==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,r)}}function yr(t,e){var r=W(t);if(arguments.length<2){var n=this.node();return r.local?n.getAttributeNS(r.space,r.local):n.getAttribute(r)}return this.each((e==null?r.local?xi:di:typeof e=="function"?r.local?wi:_i:r.local?yi:gi)(r,e))}function Wt(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function vi(t){return function(){this.style.removeProperty(t)}}function bi(t,e,r){return function(){this.style.setProperty(t,e,r)}}function Ai(t,e,r){return function(){var n=e.apply(this,arguments);n==null?this.style.removeProperty(t):this.style.setProperty(t,n,r)}}function _r(t,e,r){return arguments.length>1?this.each((e==null?vi:typeof e=="function"?Ai:bi)(t,e,r==null?"":r)):ot(this.node(),t)}function ot(t,e){return t.style.getPropertyValue(e)||Wt(t).getComputedStyle(t,null).getPropertyValue(e)}function Ei(t){return function(){delete this[t]}}function ki(t,e){return function(){this[t]=e}}function Ni(t,e){return function(){var r=e.apply(this,arguments);r==null?delete this[t]:this[t]=r}}function wr(t,e){return arguments.length>1?this.each((e==null?Ei:typeof e=="function"?Ni:ki)(t,e)):this.node()[t]}function vr(t){return t.trim().split(/^|\s+/)}function Ne(t){return t.classList||new br(t)}function br(t){this._node=t,this._names=vr(t.getAttribute("class")||"")}br.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Ar(t,e){for(var r=Ne(t),n=-1,i=e.length;++n<i;)r.add(e[n])}function Er(t,e){for(var r=Ne(t),n=-1,i=e.length;++n<i;)r.remove(e[n])}function Ii(t){return function(){Ar(this,t)}}function Ti(t){return function(){Er(this,t)}}function Si(t,e){return function(){(e.apply(this,arguments)?Ar:Er)(this,t)}}function kr(t,e){var r=vr(t+"");if(arguments.length<2){for(var n=Ne(this.node()),i=-1,o=r.length;++i<o;)if(!n.contains(r[i]))return!1;return!0}return this.each((typeof e=="function"?Si:e?Ii:Ti)(r,e))}function zi(){this.textContent=""}function Ci(t){return function(){this.textContent=t}}function Oi(t){return function(){var e=t.apply(this,arguments);this.textContent=e==null?"":e}}function Nr(t){return arguments.length?this.each(t==null?zi:(typeof t=="function"?Oi:Ci)(t)):this.node().textContent}function Mi(){this.innerHTML=""}function Di(t){return function(){this.innerHTML=t}}function Ri(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e==null?"":e}}function Ir(t){return arguments.length?this.each(t==null?Mi:(typeof t=="function"?Ri:Di)(t)):this.node().innerHTML}function $i(){this.nextSibling&&this.parentNode.appendChild(this)}function Tr(){return this.each($i)}function Xi(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Sr(){return this.each(Xi)}function zr(t){var e=typeof t=="function"?t:Ut(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function Bi(){return null}function Cr(t,e){var r=typeof t=="function"?t:Ut(t),n=e==null?Bi:typeof e=="function"?e:ft(e);return this.select(function(){return this.insertBefore(r.apply(this,arguments),n.apply(this,arguments)||null)})}function Pi(){var t=this.parentNode;t&&t.removeChild(this)}function Or(){return this.each(Pi)}function Vi(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Hi(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function Mr(t){return this.select(t?Hi:Vi)}function Dr(t){return arguments.length?this.property("__data__",t):this.node().__data__}function qi(t){return function(e){t.call(this,e,this.__data__)}}function Fi(t){return t.trim().split(/^|\s+/).map(function(e){var r="",n=e.indexOf(".");return n>=0&&(r=e.slice(n+1),e=e.slice(0,n)),{type:e,name:r}})}function Yi(t){return function(){var e=this.__on;if(!!e){for(var r=0,n=-1,i=e.length,o;r<i;++r)o=e[r],(!t.type||o.type===t.type)&&o.name===t.name?this.removeEventListener(o.type,o.listener,o.options):e[++n]=o;++n?e.length=n:delete this.__on}}}function Li(t,e,r){return function(){var n=this.__on,i,o=qi(e);if(n){for(var a=0,s=n.length;a<s;++a)if((i=n[a]).type===t.type&&i.name===t.name){this.removeEventListener(i.type,i.listener,i.options),this.addEventListener(i.type,i.listener=o,i.options=r),i.value=e;return}}this.addEventListener(t.type,o,r),i={type:t.type,name:t.name,value:e,listener:o,options:r},n?n.push(i):this.__on=[i]}}function Rr(t,e,r){var n=Fi(t+""),i,o=n.length,a;if(arguments.length<2){var s=this.node().__on;if(s){for(var u=0,f=s.length,l;u<f;++u)for(i=0,l=s[u];i<o;++i)if((a=n[i]).type===l.type&&a.name===l.name)return l.value}return}for(s=e?Li:Yi,i=0;i<o;++i)this.each(s(n[i],e,r));return this}function $r(t,e,r){var n=Wt(t),i=n.CustomEvent;typeof i=="function"?i=new i(e,r):(i=n.document.createEvent("Event"),r?(i.initEvent(e,r.bubbles,r.cancelable),i.detail=r.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}function Gi(t,e){return function(){return $r(this,t,e)}}function Ki(t,e){return function(){return $r(this,t,e.apply(this,arguments))}}function Xr(t,e){return this.each((typeof e=="function"?Ki:Gi)(t,e))}function*Br(){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var n=t[e],i=0,o=n.length,a;i<o;++i)(a=n[i])&&(yield a)}var Ie=[null];function v(t,e){this._groups=t,this._parents=e}function Pr(){return new v([[document.documentElement]],Ie)}function Ui(){return this}v.prototype=Pr.prototype={constructor:v,select:je,selectAll:tr,selectChild:er,selectChildren:rr,filter:nr,data:ar,enter:ir,exit:sr,join:ur,merge:fr,selection:Ui,order:lr,sort:cr,call:hr,nodes:pr,node:mr,size:dr,empty:xr,each:gr,attr:yr,style:_r,property:wr,classed:kr,text:Nr,html:Ir,raise:Tr,lower:Sr,append:zr,insert:Cr,remove:Or,clone:Mr,datum:Dr,on:Rr,dispatch:Xr,[Symbol.iterator]:Br};var J=Pr;function L(t){return typeof t=="string"?new v([[document.querySelector(t)]],[document.documentElement]):new v([[t]],Ie)}function Vr(t){let e;for(;e=t.sourceEvent;)t=e;return t}function Jt(t,e){if(t=Vr(t),e===void 0&&(e=t.currentTarget),e){var r=e.ownerSVGElement||e;if(r.createSVGPoint){var n=r.createSVGPoint();return n.x=t.clientX,n.y=t.clientY,n=n.matrixTransform(e.getScreenCTM().inverse()),[n.x,n.y]}if(e.getBoundingClientRect){var i=e.getBoundingClientRect();return[t.clientX-i.left-e.clientLeft,t.clientY-i.top-e.clientTop]}}return[t.pageX,t.pageY]}var jt={capture:!0,passive:!1};function te(t){t.preventDefault(),t.stopImmediatePropagation()}function Te(t){var e=t.document.documentElement,r=L(t).on("dragstart.drag",te,jt);"onselectstart"in e?r.on("selectstart.drag",te,jt):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")}function Se(t,e){var r=t.document.documentElement,n=L(t).on("dragstart.drag",null);e&&(n.on("click.drag",te,jt),setTimeout(function(){n.on("click.drag",null)},0)),"onselectstart"in r?n.on("selectstart.drag",null):(r.style.MozUserSelect=r.__noselect,delete r.__noselect)}function ee(t,e,r){t.prototype=e.prototype=r,r.constructor=t}function ze(t,e){var r=Object.create(t.prototype);for(var n in e)r[n]=e[n];return r}function Ct(){}var St=.7,ie=1/St,xt="\\s*([+-]?\\d+)\\s*",zt="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",Q="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Zi=/^#([0-9a-f]{3,8})$/,Qi=new RegExp(`^rgb\\(${xt},${xt},${xt}\\)$`),Wi=new RegExp(`^rgb\\(${Q},${Q},${Q}\\)$`),Ji=new RegExp(`^rgba\\(${xt},${xt},${xt},${zt}\\)$`),ji=new RegExp(`^rgba\\(${Q},${Q},${Q},${zt}\\)$`),to=new RegExp(`^hsl\\(${zt},${Q},${Q}\\)$`),eo=new RegExp(`^hsla\\(${zt},${Q},${Q},${zt}\\)$`),Hr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};ee(Ct,U,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:qr,formatHex:qr,formatHex8:ro,formatHsl:no,formatRgb:Fr,toString:Fr});function qr(){return this.rgb().formatHex()}function ro(){return this.rgb().formatHex8()}function no(){return Zr(this).formatHsl()}function Fr(){return this.rgb().formatRgb()}function U(t){var e,r;return t=(t+"").trim().toLowerCase(),(e=Zi.exec(t))?(r=e[1].length,e=parseInt(e[1],16),r===6?Yr(e):r===3?new Y(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):r===8?re(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):r===4?re(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=Qi.exec(t))?new Y(e[1],e[2],e[3],1):(e=Wi.exec(t))?new Y(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=Ji.exec(t))?re(e[1],e[2],e[3],e[4]):(e=ji.exec(t))?re(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=to.exec(t))?Kr(e[1],e[2]/100,e[3]/100,1):(e=eo.exec(t))?Kr(e[1],e[2]/100,e[3]/100,e[4]):Hr.hasOwnProperty(t)?Yr(Hr[t]):t==="transparent"?new Y(NaN,NaN,NaN,0):null}function Yr(t){return new Y(t>>16&255,t>>8&255,t&255,1)}function re(t,e,r,n){return n<=0&&(t=e=r=NaN),new Y(t,e,r,n)}function io(t){return t instanceof Ct||(t=U(t)),t?(t=t.rgb(),new Y(t.r,t.g,t.b,t.opacity)):new Y}function gt(t,e,r,n){return arguments.length===1?io(t):new Y(t,e,r,n==null?1:n)}function Y(t,e,r,n){this.r=+t,this.g=+e,this.b=+r,this.opacity=+n}ee(Y,gt,ze(Ct,{brighter(t){return t=t==null?ie:Math.pow(ie,t),new Y(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?St:Math.pow(St,t),new Y(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new Y(ct(this.r),ct(this.g),ct(this.b),oe(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Lr,formatHex:Lr,formatHex8:oo,formatRgb:Gr,toString:Gr}));function Lr(){return`#${lt(this.r)}${lt(this.g)}${lt(this.b)}`}function oo(){return`#${lt(this.r)}${lt(this.g)}${lt(this.b)}${lt((isNaN(this.opacity)?1:this.opacity)*255)}`}function Gr(){let t=oe(this.opacity);return`${t===1?"rgb(":"rgba("}${ct(this.r)}, ${ct(this.g)}, ${ct(this.b)}${t===1?")":`, ${t})`}`}function oe(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function ct(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function lt(t){return t=ct(t),(t<16?"0":"")+t.toString(16)}function Kr(t,e,r,n){return n<=0?t=e=r=NaN:r<=0||r>=1?t=e=NaN:e<=0&&(t=NaN),new K(t,e,r,n)}function Zr(t){if(t instanceof K)return new K(t.h,t.s,t.l,t.opacity);if(t instanceof Ct||(t=U(t)),!t)return new K;if(t instanceof K)return t;t=t.rgb();var e=t.r/255,r=t.g/255,n=t.b/255,i=Math.min(e,r,n),o=Math.max(e,r,n),a=NaN,s=o-i,u=(o+i)/2;return s?(e===o?a=(r-n)/s+(r<n)*6:r===o?a=(n-e)/s+2:a=(e-r)/s+4,s/=u<.5?o+i:2-o-i,a*=60):s=u>0&&u<1?0:a,new K(a,s,u,t.opacity)}function Qr(t,e,r,n){return arguments.length===1?Zr(t):new K(t,e,r,n==null?1:n)}function K(t,e,r,n){this.h=+t,this.s=+e,this.l=+r,this.opacity=+n}ee(K,Qr,ze(Ct,{brighter(t){return t=t==null?ie:Math.pow(ie,t),new K(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?St:Math.pow(St,t),new K(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,r=this.l,n=r+(r<.5?r:1-r)*e,i=2*r-n;return new Y(Ce(t>=240?t-240:t+120,i,n),Ce(t,i,n),Ce(t<120?t+240:t-120,i,n),this.opacity)},clamp(){return new K(Ur(this.h),ne(this.s),ne(this.l),oe(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let t=oe(this.opacity);return`${t===1?"hsl(":"hsla("}${Ur(this.h)}, ${ne(this.s)*100}%, ${ne(this.l)*100}%${t===1?")":`, ${t})`}`}}));function Ur(t){return t=(t||0)%360,t<0?t+360:t}function ne(t){return Math.max(0,Math.min(1,t||0))}function Ce(t,e,r){return(t<60?e+(r-e)*t/60:t<180?r:t<240?e+(r-e)*(240-t)/60:e)*255}function Oe(t,e,r,n,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*e+(4-6*o+3*a)*r+(1+3*t+3*o-3*a)*n+a*i)/6}function Wr(t){var e=t.length-1;return function(r){var n=r<=0?r=0:r>=1?(r=1,e-1):Math.floor(r*e),i=t[n],o=t[n+1],a=n>0?t[n-1]:2*i-o,s=n<e-1?t[n+2]:2*o-i;return Oe((r-n/e)*e,a,i,o,s)}}function Jr(t){var e=t.length;return function(r){var n=Math.floor(((r%=1)<0?++r:r)*e),i=t[(n+e-1)%e],o=t[n%e],a=t[(n+1)%e],s=t[(n+2)%e];return Oe((r-n/e)*e,i,o,a,s)}}var Ot=t=>()=>t;function ao(t,e){return function(r){return t+r*e}}function so(t,e,r){return t=Math.pow(t,r),e=Math.pow(e,r)-t,r=1/r,function(n){return Math.pow(t+n*e,r)}}function jr(t){return(t=+t)==1?ae:function(e,r){return r-e?so(e,r,t):Ot(isNaN(e)?r:e)}}function ae(t,e){var r=e-t;return r?ao(t,r):Ot(isNaN(t)?e:t)}var ht=function t(e){var r=jr(e);function n(i,o){var a=r((i=gt(i)).r,(o=gt(o)).r),s=r(i.g,o.g),u=r(i.b,o.b),f=ae(i.opacity,o.opacity);return function(l){return i.r=a(l),i.g=s(l),i.b=u(l),i.opacity=f(l),i+""}}return n.gamma=t,n}(1);function tn(t){return function(e){var r=e.length,n=new Array(r),i=new Array(r),o=new Array(r),a,s;for(a=0;a<r;++a)s=gt(e[a]),n[a]=s.r||0,i[a]=s.g||0,o[a]=s.b||0;return n=t(n),i=t(i),o=t(o),s.opacity=1,function(u){return s.r=n(u),s.g=i(u),s.b=o(u),s+""}}}var uo=tn(Wr),fo=tn(Jr);function en(t,e){e||(e=[]);var r=t?Math.min(e.length,t.length):0,n=e.slice(),i;return function(o){for(i=0;i<r;++i)n[i]=t[i]*(1-o)+e[i]*o;return n}}function rn(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function nn(t,e){var r=e?e.length:0,n=t?Math.min(r,t.length):0,i=new Array(n),o=new Array(r),a;for(a=0;a<n;++a)i[a]=pt(t[a],e[a]);for(;a<r;++a)o[a]=e[a];return function(s){for(a=0;a<n;++a)o[a]=i[a](s);return o}}function on(t,e){var r=new Date;return t=+t,e=+e,function(n){return r.setTime(t*(1-n)+e*n),r}}function H(t,e){return t=+t,e=+e,function(r){return t*(1-r)+e*r}}function an(t,e){var r={},n={},i;(t===null||typeof t!="object")&&(t={}),(e===null||typeof e!="object")&&(e={});for(i in e)i in t?r[i]=pt(t[i],e[i]):n[i]=e[i];return function(o){for(i in r)n[i]=r[i](o);return n}}var De=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Me=new RegExp(De.source,"g");function lo(t){return function(){return t}}function co(t){return function(e){return t(e)+""}}function Mt(t,e){var r=De.lastIndex=Me.lastIndex=0,n,i,o,a=-1,s=[],u=[];for(t=t+"",e=e+"";(n=De.exec(t))&&(i=Me.exec(e));)(o=i.index)>r&&(o=e.slice(r,o),s[a]?s[a]+=o:s[++a]=o),(n=n[0])===(i=i[0])?s[a]?s[a]+=i:s[++a]=i:(s[++a]=null,u.push({i:a,x:H(n,i)})),r=Me.lastIndex;return r<e.length&&(o=e.slice(r),s[a]?s[a]+=o:s[++a]=o),s.length<2?u[0]?co(u[0].x):lo(e):(e=u.length,function(f){for(var l=0,h;l<e;++l)s[(h=u[l]).i]=h.x(f);return s.join("")})}function pt(t,e){var r=typeof e,n;return e==null||r==="boolean"?Ot(e):(r==="number"?H:r==="string"?(n=U(e))?(e=n,ht):Mt:e instanceof U?ht:e instanceof Date?on:rn(e)?en:Array.isArray(e)?nn:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?an:H)(t,e)}var sn=180/Math.PI,se={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Re(t,e,r,n,i,o){var a,s,u;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(u=t*r+e*n)&&(r-=t*u,n-=e*u),(s=Math.sqrt(r*r+n*n))&&(r/=s,n/=s,u/=s),t*n<e*r&&(t=-t,e=-e,u=-u,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(e,t)*sn,skewX:Math.atan(u)*sn,scaleX:a,scaleY:s}}var ue;function un(t){let e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?se:Re(e.a,e.b,e.c,e.d,e.e,e.f)}function fn(t){return t==null?se:(ue||(ue=document.createElementNS("http://www.w3.org/2000/svg","g")),ue.setAttribute("transform",t),(t=ue.transform.baseVal.consolidate())?(t=t.matrix,Re(t.a,t.b,t.c,t.d,t.e,t.f)):se)}function ln(t,e,r,n){function i(f){return f.length?f.pop()+" ":""}function o(f,l,h,p,x,b){if(f!==h||l!==p){var S=x.push("translate(",null,e,null,r);b.push({i:S-4,x:H(f,h)},{i:S-2,x:H(l,p)})}else(h||p)&&x.push("translate("+h+e+p+r)}function a(f,l,h,p){f!==l?(f-l>180?l+=360:l-f>180&&(f+=360),p.push({i:h.push(i(h)+"rotate(",null,n)-2,x:H(f,l)})):l&&h.push(i(h)+"rotate("+l+n)}function s(f,l,h,p){f!==l?p.push({i:h.push(i(h)+"skewX(",null,n)-2,x:H(f,l)}):l&&h.push(i(h)+"skewX("+l+n)}function u(f,l,h,p,x,b){if(f!==h||l!==p){var S=x.push(i(x)+"scale(",null,",",null,")");b.push({i:S-4,x:H(f,h)},{i:S-2,x:H(l,p)})}else(h!==1||p!==1)&&x.push(i(x)+"scale("+h+","+p+")")}return function(f,l){var h=[],p=[];return f=t(f),l=t(l),o(f.translateX,f.translateY,l.translateX,l.translateY,h,p),a(f.rotate,l.rotate,h,p),s(f.skewX,l.skewX,h,p),u(f.scaleX,f.scaleY,l.scaleX,l.scaleY,h,p),f=l=null,function(x){for(var b=-1,S=p.length,c;++b<S;)h[(c=p[b]).i]=c.x(x);return h.join("")}}}var $e=ln(un,"px, ","px)","deg)"),Xe=ln(fn,", ",")",")");var yt=0,Rt=0,Dt=0,hn=1e3,fe,$t,le=0,mt=0,ce=0,Xt=typeof performance=="object"&&performance.now?performance:Date,pn=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Pt(){return mt||(pn(ho),mt=Xt.now()+ce)}function ho(){mt=0}function Bt(){this._call=this._time=this._next=null}Bt.prototype=he.prototype={constructor:Bt,restart:function(t,e,r){if(typeof t!="function")throw new TypeError("callback is not a function");r=(r==null?Pt():+r)+(e==null?0:+e),!this._next&&$t!==this&&($t?$t._next=this:fe=this,$t=this),this._call=t,this._time=r,Be()},stop:function(){this._call&&(this._call=null,this._time=1/0,Be())}};function he(t,e,r){var n=new Bt;return n.restart(t,e,r),n}function mn(){Pt(),++yt;for(var t=fe,e;t;)(e=mt-t._time)>=0&&t._call.call(void 0,e),t=t._next;--yt}function cn(){mt=(le=Xt.now())+ce,yt=Rt=0;try{mn()}finally{yt=0,mo(),mt=0}}function po(){var t=Xt.now(),e=t-le;e>hn&&(ce-=e,le=t)}function mo(){for(var t,e=fe,r,n=1/0;e;)e._call?(n>e._time&&(n=e._time),t=e,e=e._next):(r=e._next,e._next=null,e=t?t._next=r:fe=r);$t=t,Be(n)}function Be(t){if(!yt){Rt&&(Rt=clearTimeout(Rt));var e=t-mt;e>24?(t<1/0&&(Rt=setTimeout(cn,t-Xt.now()-ce)),Dt&&(Dt=clearInterval(Dt))):(Dt||(le=Xt.now(),Dt=setInterval(po,hn)),yt=1,pn(cn))}}function pe(t,e,r){var n=new Bt;return e=e==null?0:+e,n.restart(i=>{n.stop(),t(i+e)},e,r),n}var xo=kt("start","end","cancel","interrupt"),go=[],gn=0,dn=1,de=2,me=3,xn=4,xe=5,Vt=6;function at(t,e,r,n,i,o){var a=t.__transition;if(!a)t.__transition={};else if(r in a)return;yo(t,r,{name:e,index:n,group:i,on:xo,tween:go,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:gn})}function Ht(t,e){var r=T(t,e);if(r.state>gn)throw new Error("too late; already scheduled");return r}function X(t,e){var r=T(t,e);if(r.state>me)throw new Error("too late; already running");return r}function T(t,e){var r=t.__transition;if(!r||!(r=r[e]))throw new Error("transition not found");return r}function yo(t,e,r){var n=t.__transition,i;n[e]=r,r.timer=he(o,0,r.time);function o(f){r.state=dn,r.timer.restart(a,r.delay,r.time),r.delay<=f&&a(f-r.delay)}function a(f){var l,h,p,x;if(r.state!==dn)return u();for(l in n)if(x=n[l],x.name===r.name){if(x.state===me)return pe(a);x.state===xn?(x.state=Vt,x.timer.stop(),x.on.call("interrupt",t,t.__data__,x.index,x.group),delete n[l]):+l<e&&(x.state=Vt,x.timer.stop(),x.on.call("cancel",t,t.__data__,x.index,x.group),delete n[l])}if(pe(function(){r.state===me&&(r.state=xn,r.timer.restart(s,r.delay,r.time),s(f))}),r.state=de,r.on.call("start",t,t.__data__,r.index,r.group),r.state===de){for(r.state=me,i=new Array(p=r.tween.length),l=0,h=-1;l<p;++l)(x=r.tween[l].value.call(t,t.__data__,r.index,r.group))&&(i[++h]=x);i.length=h+1}}function s(f){for(var l=f<r.duration?r.ease.call(null,f/r.duration):(r.timer.restart(u),r.state=xe,1),h=-1,p=i.length;++h<p;)i[h].call(t,l);r.state===xe&&(r.on.call("end",t,t.__data__,r.index,r.group),u())}function u(){r.state=Vt,r.timer.stop(),delete n[e];for(var f in n)return;delete t.__transition}}function dt(t,e){var r=t.__transition,n,i,o=!0,a;if(!!r){e=e==null?null:e+"";for(a in r){if((n=r[a]).name!==e){o=!1;continue}i=n.state>de&&n.state<xe,n.state=Vt,n.timer.stop(),n.on.call(i?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete r[a]}o&&delete t.__transition}}function yn(t){return this.each(function(){dt(this,t)})}function _o(t,e){var r,n;return function(){var i=X(this,t),o=i.tween;if(o!==r){n=r=o;for(var a=0,s=n.length;a<s;++a)if(n[a].name===e){n=n.slice(),n.splice(a,1);break}}i.tween=n}}function wo(t,e,r){var n,i;if(typeof r!="function")throw new Error;return function(){var o=X(this,t),a=o.tween;if(a!==n){i=(n=a).slice();for(var s={name:e,value:r},u=0,f=i.length;u<f;++u)if(i[u].name===e){i[u]=s;break}u===f&&i.push(s)}o.tween=i}}function _n(t,e){var r=this._id;if(t+="",arguments.length<2){for(var n=T(this.node(),r).tween,i=0,o=n.length,a;i<o;++i)if((a=n[i]).name===t)return a.value;return null}return this.each((e==null?_o:wo)(r,t,e))}function _t(t,e,r){var n=t._id;return t.each(function(){var i=X(this,n);(i.value||(i.value={}))[e]=r.apply(this,arguments)}),function(i){return T(i,n).value[e]}}function ge(t,e){var r;return(typeof e=="number"?H:e instanceof U?ht:(r=U(e))?(e=r,ht):Mt)(t,e)}function vo(t){return function(){this.removeAttribute(t)}}function bo(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Ao(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttribute(t);return a===i?null:a===n?o:o=e(n=a,r)}}function Eo(t,e,r){var n,i=r+"",o;return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===n?o:o=e(n=a,r)}}function ko(t,e,r){var n,i,o;return function(){var a,s=r(this),u;return s==null?void this.removeAttribute(t):(a=this.getAttribute(t),u=s+"",a===u?null:a===n&&u===i?o:(i=u,o=e(n=a,s)))}}function No(t,e,r){var n,i,o;return function(){var a,s=r(this),u;return s==null?void this.removeAttributeNS(t.space,t.local):(a=this.getAttributeNS(t.space,t.local),u=s+"",a===u?null:a===n&&u===i?o:(i=u,o=e(n=a,s)))}}function wn(t,e){var r=W(t),n=r==="transform"?Xe:ge;return this.attrTween(t,typeof e=="function"?(r.local?No:ko)(r,n,_t(this,"attr."+t,e)):e==null?(r.local?bo:vo)(r):(r.local?Eo:Ao)(r,n,e))}function Io(t,e){return function(r){this.setAttribute(t,e.call(this,r))}}function To(t,e){return function(r){this.setAttributeNS(t.space,t.local,e.call(this,r))}}function So(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&To(t,o)),r}return i._value=e,i}function zo(t,e){var r,n;function i(){var o=e.apply(this,arguments);return o!==n&&(r=(n=o)&&Io(t,o)),r}return i._value=e,i}function vn(t,e){var r="attr."+t;if(arguments.length<2)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;var n=W(t);return this.tween(r,(n.local?So:zo)(n,e))}function Co(t,e){return function(){Ht(this,t).delay=+e.apply(this,arguments)}}function Oo(t,e){return e=+e,function(){Ht(this,t).delay=e}}function bn(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Co:Oo)(e,t)):T(this.node(),e).delay}function Mo(t,e){return function(){X(this,t).duration=+e.apply(this,arguments)}}function Do(t,e){return e=+e,function(){X(this,t).duration=e}}function An(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?Mo:Do)(e,t)):T(this.node(),e).duration}function Ro(t,e){if(typeof e!="function")throw new Error;return function(){X(this,t).ease=e}}function En(t){var e=this._id;return arguments.length?this.each(Ro(e,t)):T(this.node(),e).ease}function $o(t,e){return function(){var r=e.apply(this,arguments);if(typeof r!="function")throw new Error;X(this,t).ease=r}}function kn(t){if(typeof t!="function")throw new Error;return this.each($o(this._id,t))}function Nn(t){typeof t!="function"&&(t=It(t));for(var e=this._groups,r=e.length,n=new Array(r),i=0;i<r;++i)for(var o=e[i],a=o.length,s=n[i]=[],u,f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&s.push(u);return new q(n,this._parents,this._name,this._id)}function In(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,r=t._groups,n=e.length,i=r.length,o=Math.min(n,i),a=new Array(n),s=0;s<o;++s)for(var u=e[s],f=r[s],l=u.length,h=a[s]=new Array(l),p,x=0;x<l;++x)(p=u[x]||f[x])&&(h[x]=p);for(;s<n;++s)a[s]=e[s];return new q(a,this._parents,this._name,this._id)}function Xo(t){return(t+"").trim().split(/^|\s+/).every(function(e){var r=e.indexOf(".");return r>=0&&(e=e.slice(0,r)),!e||e==="start"})}function Bo(t,e,r){var n,i,o=Xo(e)?Ht:X;return function(){var a=o(this,t),s=a.on;s!==n&&(i=(n=s).copy()).on(e,r),a.on=i}}function Tn(t,e){var r=this._id;return arguments.length<2?T(this.node(),r).on.on(t):this.each(Bo(r,t,e))}function Po(t){return function(){var e=this.parentNode;for(var r in this.__transition)if(+r!==t)return;e&&e.removeChild(this)}}function Sn(){return this.on("end.remove",Po(this._id))}function zn(t){var e=this._name,r=this._id;typeof t!="function"&&(t=ft(t));for(var n=this._groups,i=n.length,o=new Array(i),a=0;a<i;++a)for(var s=n[a],u=s.length,f=o[a]=new Array(u),l,h,p=0;p<u;++p)(l=s[p])&&(h=t.call(l,l.__data__,p,s))&&("__data__"in l&&(h.__data__=l.__data__),f[p]=h,at(f[p],e,r,p,f,T(l,r)));return new q(o,this._parents,e,r)}function Cn(t){var e=this._name,r=this._id;typeof t!="function"&&(t=Nt(t));for(var n=this._groups,i=n.length,o=[],a=[],s=0;s<i;++s)for(var u=n[s],f=u.length,l,h=0;h<f;++h)if(l=u[h]){for(var p=t.call(l,l.__data__,h,u),x,b=T(l,r),S=0,c=p.length;S<c;++S)(x=p[S])&&at(x,e,r,S,p,b);o.push(p),a.push(l)}return new q(o,a,e,r)}var Vo=J.prototype.constructor;function On(){return new Vo(this._groups,this._parents)}function Ho(t,e){var r,n,i;return function(){var o=ot(this,t),a=(this.style.removeProperty(t),ot(this,t));return o===a?null:o===r&&a===n?i:i=e(r=o,n=a)}}function Mn(t){return function(){this.style.removeProperty(t)}}function qo(t,e,r){var n,i=r+"",o;return function(){var a=ot(this,t);return a===i?null:a===n?o:o=e(n=a,r)}}function Fo(t,e,r){var n,i,o;return function(){var a=ot(this,t),s=r(this),u=s+"";return s==null&&(u=s=(this.style.removeProperty(t),ot(this,t))),a===u?null:a===n&&u===i?o:(i=u,o=e(n=a,s))}}function Yo(t,e){var r,n,i,o="style."+e,a="end."+o,s;return function(){var u=X(this,t),f=u.on,l=u.value[o]==null?s||(s=Mn(e)):void 0;(f!==r||i!==l)&&(n=(r=f).copy()).on(a,i=l),u.on=n}}function Dn(t,e,r){var n=(t+="")=="transform"?$e:ge;return e==null?this.styleTween(t,Ho(t,n)).on("end.style."+t,Mn(t)):typeof e=="function"?this.styleTween(t,Fo(t,n,_t(this,"style."+t,e))).each(Yo(this._id,t)):this.styleTween(t,qo(t,n,e),r).on("end.style."+t,null)}function Lo(t,e,r){return function(n){this.style.setProperty(t,e.call(this,n),r)}}function Go(t,e,r){var n,i;function o(){var a=e.apply(this,arguments);return a!==i&&(n=(i=a)&&Lo(t,a,r)),n}return o._value=e,o}function Rn(t,e,r){var n="style."+(t+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;return this.tween(n,Go(t,e,r==null?"":r))}function Ko(t){return function(){this.textContent=t}}function Uo(t){return function(){var e=t(this);this.textContent=e==null?"":e}}function $n(t){return this.tween("text",typeof t=="function"?Uo(_t(this,"text",t)):Ko(t==null?"":t+""))}function Zo(t){return function(e){this.textContent=t.call(this,e)}}function Qo(t){var e,r;function n(){var i=t.apply(this,arguments);return i!==r&&(e=(r=i)&&Zo(i)),e}return n._value=t,n}function Xn(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,Qo(t))}function Bn(){for(var t=this._name,e=this._id,r=ye(),n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],s=a.length,u,f=0;f<s;++f)if(u=a[f]){var l=T(u,e);at(u,t,r,f,a,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new q(n,this._parents,t,r)}function Pn(){var t,e,r=this,n=r._id,i=r.size();return new Promise(function(o,a){var s={value:a},u={value:function(){--i===0&&o()}};r.each(function(){var f=X(this,n),l=f.on;l!==t&&(e=(t=l).copy(),e._.cancel.push(s),e._.interrupt.push(s),e._.end.push(u)),f.on=e}),i===0&&o()})}var Wo=0;function q(t,e,r,n){this._groups=t,this._parents=e,this._name=r,this._id=n}function Vn(t){return J().transition(t)}function ye(){return++Wo}var j=J.prototype;q.prototype=Vn.prototype={constructor:q,select:zn,selectAll:Cn,selectChild:j.selectChild,selectChildren:j.selectChildren,filter:Nn,merge:In,selection:On,transition:Bn,call:j.call,nodes:j.nodes,node:j.node,size:j.size,empty:j.empty,each:j.each,on:Tn,attr:wn,attrTween:vn,style:Dn,styleTween:Rn,text:$n,textTween:Xn,remove:Sn,tween:_n,delay:bn,duration:An,ease:En,easeVarying:kn,end:Pn,[Symbol.iterator]:j[Symbol.iterator]};function _e(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var Jo={time:null,delay:0,duration:250,ease:_e};function jo(t,e){for(var r;!(r=t.__transition)||!(r=r[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return r}function Hn(t){var e,r;t instanceof q?(e=t._id,t=t._name):(e=ye(),(r=Jo).time=Pt(),t=t==null?null:t+"");for(var n=this._groups,i=n.length,o=0;o<i;++o)for(var a=n[o],s=a.length,u,f=0;f<s;++f)(u=a[f])&&at(u,t,e,f,a,r||jo(u,e));return new q(n,this._parents,t,e)}J.prototype.interrupt=yn;J.prototype.transition=Hn;var we=t=>()=>t;function Pe(t,{sourceEvent:e,target:r,selection:n,mode:i,dispatch:o}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},target:{value:r,enumerable:!0,configurable:!0},selection:{value:n,enumerable:!0,configurable:!0},mode:{value:i,enumerable:!0,configurable:!0},_:{value:o}})}function qn(t){t.stopImmediatePropagation()}function ve(t){t.preventDefault(),t.stopImmediatePropagation()}var Fn={name:"drag"},Ve={name:"space"},wt={name:"handle"},vt={name:"center"},{abs:Yn,max:B,min:P}=Math;function Ln(t){return[+t[0],+t[1]]}function Fe(t){return[Ln(t[0]),Ln(t[1])]}var be={name:"x",handles:["w","e"].map(qt),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},He={name:"y",handles:["n","s"].map(qt),input:function(t,e){return t==null?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},zc={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(qt),input:function(t){return t==null?null:Fe(t)},output:function(t){return t}},tt={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Gn={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Kn={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},ta={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},ea={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function qt(t){return{type:t}}function ra(t){return!t.ctrlKey&&!t.button}function na(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?(t=t.viewBox.baseVal,[[t.x,t.y],[t.x+t.width,t.y+t.height]]):[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function ia(){return navigator.maxTouchPoints||"ontouchstart"in this}function qe(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function oa(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function Ye(){return aa(be)}function aa(t){var e=na,r=ra,n=ia,i=!0,o=kt("start","brush","end"),a=6,s;function u(c){var d=c.property("__brush",S).selectAll(".overlay").data([qt("overlay")]);d.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",tt.overlay).merge(d).each(function(){var m=qe(this).extent;L(this).attr("x",m[0][0]).attr("y",m[0][1]).attr("width",m[1][0]-m[0][0]).attr("height",m[1][1]-m[0][1])}),c.selectAll(".selection").data([qt("selection")]).enter().append("rect").attr("class","selection").attr("cursor",tt.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var g=c.selectAll(".handle").data(t.handles,function(m){return m.type});g.exit().remove(),g.enter().append("rect").attr("class",function(m){return"handle handle--"+m.type}).attr("cursor",function(m){return tt[m.type]}),c.each(f).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",p).filter(n).on("touchstart.brush",p).on("touchmove.brush",x).on("touchend.brush touchcancel.brush",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}u.move=function(c,d,g){c.tween?c.on("start.brush",function(m){l(this,arguments).beforestart().start(m)}).on("interrupt.brush end.brush",function(m){l(this,arguments).end(m)}).tween("brush",function(){var m=this,_=m.__brush,w=l(m,arguments),V=_.selection,Z=t.input(typeof d=="function"?d.apply(this,arguments):d,_.extent),E=pt(V,Z);function G(A){_.selection=A===1&&Z===null?null:E(A),f.call(m),w.brush()}return V!==null&&Z!==null?G:G(1)}):c.each(function(){var m=this,_=arguments,w=m.__brush,V=t.input(typeof d=="function"?d.apply(m,_):d,w.extent),Z=l(m,_).beforestart();dt(m),w.selection=V===null?null:V,f.call(m),Z.start(g).brush(g).end(g)})},u.clear=function(c,d){u.move(c,null,d)};function f(){var c=L(this),d=qe(this).selection;d?(c.selectAll(".selection").style("display",null).attr("x",d[0][0]).attr("y",d[0][1]).attr("width",d[1][0]-d[0][0]).attr("height",d[1][1]-d[0][1]),c.selectAll(".handle").style("display",null).attr("x",function(g){return g.type[g.type.length-1]==="e"?d[1][0]-a/2:d[0][0]-a/2}).attr("y",function(g){return g.type[0]==="s"?d[1][1]-a/2:d[0][1]-a/2}).attr("width",function(g){return g.type==="n"||g.type==="s"?d[1][0]-d[0][0]+a:a}).attr("height",function(g){return g.type==="e"||g.type==="w"?d[1][1]-d[0][1]+a:a})):c.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function l(c,d,g){var m=c.__brush.emitter;return m&&(!g||!m.clean)?m:new h(c,d,g)}function h(c,d,g){this.that=c,this.args=d,this.state=c.__brush,this.active=0,this.clean=g}h.prototype={beforestart:function(){return++this.active===1&&(this.state.emitter=this,this.starting=!0),this},start:function(c,d){return this.starting?(this.starting=!1,this.emit("start",c,d)):this.emit("brush",c),this},brush:function(c,d){return this.emit("brush",c,d),this},end:function(c,d){return--this.active===0&&(delete this.state.emitter,this.emit("end",c,d)),this},emit:function(c,d,g){var m=L(this.that).datum();o.call(c,this.that,new Pe(c,{sourceEvent:d,target:u,selection:t.output(this.state.selection),mode:g,dispatch:o}),m)}};function p(c){if(s&&!c.touches||!r.apply(this,arguments))return;var d=this,g=c.target.__data__.type,m=(i&&c.metaKey?g="overlay":g)==="selection"?Fn:i&&c.altKey?vt:wt,_=t===He?null:ta[g],w=t===be?null:ea[g],V=qe(d),Z=V.extent,E=V.selection,G=Z[0][0],A,z,et=Z[0][1],C,O,rt=Z[1][0],M,D,nt=Z[1][1],R,$,k=0,N=0,Ae,Ft=_&&w&&i&&c.shiftKey,Yt,Lt,F=Array.from(c.touches||[c],y=>{let I=y.identifier;return y=Jt(y,d),y.point0=y.slice(),y.identifier=I,y});dt(d);var bt=l(d,arguments,!0).beforestart();if(g==="overlay"){E&&(Ae=!0);let y=[F[0],F[1]||F[0]];V.selection=E=[[A=t===He?G:P(y[0][0],y[1][0]),C=t===be?et:P(y[0][1],y[1][1])],[M=t===He?rt:B(y[0][0],y[1][0]),R=t===be?nt:B(y[0][1],y[1][1])]],F.length>1&&ut(c)}else A=E[0][0],C=E[0][1],M=E[1][0],R=E[1][1];z=A,O=C,D=M,$=R;var Ke=L(d).attr("pointer-events","none"),At=Ke.selectAll(".overlay").attr("cursor",tt[g]);if(c.touches)bt.moved=Ze,bt.ended=Qe;else{var Ue=L(c.view).on("mousemove.brush",Ze,!0).on("mouseup.brush",Qe,!0);i&&Ue.on("keydown.brush",Un,!0).on("keyup.brush",Zn,!0),Te(c.view)}f.call(d),bt.start(c,m.name);function Ze(y){for(let I of y.changedTouches||[y])for(let Et of F)Et.identifier===I.identifier&&(Et.cur=Jt(I,d));if(Ft&&!Yt&&!Lt&&F.length===1){let I=F[0];Yn(I.cur[0]-I[0])>Yn(I.cur[1]-I[1])?Lt=!0:Yt=!0}for(let I of F)I.cur&&(I[0]=I.cur[0],I[1]=I.cur[1]);Ae=!0,ve(y),ut(y)}function ut(y){let I=F[0],Et=I.point0;var it;switch(k=I[0]-Et[0],N=I[1]-Et[1],m){case Ve:case Fn:{_&&(k=B(G-A,P(rt-M,k)),z=A+k,D=M+k),w&&(N=B(et-C,P(nt-R,N)),O=C+N,$=R+N);break}case wt:{F[1]?(_&&(z=B(G,P(rt,F[0][0])),D=B(G,P(rt,F[1][0])),_=1),w&&(O=B(et,P(nt,F[0][1])),$=B(et,P(nt,F[1][1])),w=1)):(_<0?(k=B(G-A,P(rt-A,k)),z=A+k,D=M):_>0&&(k=B(G-M,P(rt-M,k)),z=A,D=M+k),w<0?(N=B(et-C,P(nt-C,N)),O=C+N,$=R):w>0&&(N=B(et-R,P(nt-R,N)),O=C,$=R+N));break}case vt:{_&&(z=B(G,P(rt,A-k*_)),D=B(G,P(rt,M+k*_))),w&&(O=B(et,P(nt,C-N*w)),$=B(et,P(nt,R+N*w)));break}}D<z&&(_*=-1,it=A,A=M,M=it,it=z,z=D,D=it,g in Gn&&At.attr("cursor",tt[g=Gn[g]])),$<O&&(w*=-1,it=C,C=R,R=it,it=O,O=$,$=it,g in Kn&&At.attr("cursor",tt[g=Kn[g]])),V.selection&&(E=V.selection),Yt&&(z=E[0][0],D=E[1][0]),Lt&&(O=E[0][1],$=E[1][1]),(E[0][0]!==z||E[0][1]!==O||E[1][0]!==D||E[1][1]!==$)&&(V.selection=[[z,O],[D,$]],f.call(d),bt.brush(y,m.name))}function Qe(y){if(qn(y),y.touches){if(y.touches.length)return;s&&clearTimeout(s),s=setTimeout(function(){s=null},500)}else Se(y.view,Ae),Ue.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);Ke.attr("pointer-events","all"),At.attr("cursor",tt.overlay),V.selection&&(E=V.selection),oa(E)&&(V.selection=null,f.call(d)),bt.end(y,m.name)}function Un(y){switch(y.keyCode){case 16:{Ft=_&&w;break}case 18:{m===wt&&(_&&(M=D-k*_,A=z+k*_),w&&(R=$-N*w,C=O+N*w),m=vt,ut(y));break}case 32:{(m===wt||m===vt)&&(_<0?M=D-k:_>0&&(A=z-k),w<0?R=$-N:w>0&&(C=O-N),m=Ve,At.attr("cursor",tt.selection),ut(y));break}default:return}ve(y)}function Zn(y){switch(y.keyCode){case 16:{Ft&&(Yt=Lt=Ft=!1,ut(y));break}case 18:{m===vt&&(_<0?M=D:_>0&&(A=z),w<0?R=$:w>0&&(C=O),m=wt,ut(y));break}case 32:{m===Ve&&(y.altKey?(_&&(M=D-k*_,A=z+k*_),w&&(R=$-N*w,C=O+N*w),m=vt):(_<0?M=D:_>0&&(A=z),w<0?R=$:w>0&&(C=O),m=wt),At.attr("cursor",tt[g]),ut(y));break}default:return}ve(y)}}function x(c){l(this,arguments).moved(c)}function b(c){l(this,arguments).ended(c)}function S(){var c=this.__brush||{selection:null};return c.extent=Fe(e.apply(this,arguments)),c.dim=t,c}return u.extent=function(c){return arguments.length?(e=typeof c=="function"?c:we(Fe(c)),u):e},u.filter=function(c){return arguments.length?(r=typeof c=="function"?c:we(!!c),u):r},u.touchable=function(c){return arguments.length?(n=typeof c=="function"?c:we(!!c),u):n},u.handleSize=function(c){return arguments.length?(a=+c,u):a},u.keyModifiers=function(c){return arguments.length?(i=!!c,u):i},u.on=function(){var c=o.on.apply(o,arguments);return c===o?u:c},u}function st(t,e,r){this.k=t,this.x=e,this.y=r}st.prototype={constructor:st,scale:function(t){return t===1?this:new st(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new st(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Le=new st(1,0,0);Ge.prototype=st.prototype;function Ge(t){for(;!t.__zoom;)if(!(t=t.parentNode))return Le;return t.__zoom}window.addEventListener("load",async()=>{L("svg").append("g").attr("class","brush").call(Ye().on("brush",t=>{console.log("e",t)}))});})();
//# sourceMappingURL=data:application/json;base64,
